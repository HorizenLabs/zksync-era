diff --git a/.gitmodules b/.gitmodules
index 480a124c..445344c3 100644
--- a/.gitmodules
+++ b/.gitmodules
@@ -1,4 +1,3 @@
 [submodule "contracts"]
 path = contracts
-url = https://github.com/HorizenLabs/zksync-contracts.git
-branch = mo/NH_integration
\ No newline at end of file
+url = https://github.com/matter-labs/era-contracts.git
diff --git a/Cargo.lock b/Cargo.lock
index 6420ef6a..fc7d1d63 100644
--- a/Cargo.lock
+++ b/Cargo.lock
@@ -2,16 +2,6 @@
 # It is not intended for manual editing.
 version = 3
 
-[[package]]
-name = "Inflector"
-version = "0.11.4"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "fe438c63458706e03479442743baae6c88256498e6431708f6dfc520a26515d3"
-dependencies = [
- "lazy_static",
- "regex",
-]
-
 [[package]]
 name = "addchain"
 version = "0.2.0"
@@ -23,22 +13,13 @@ dependencies = [
  "num-traits",
 ]
 
-[[package]]
-name = "addr2line"
-version = "0.19.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "a76fd60b23679b7d19bd066031410fb7e458ccc5e958eb5c325888ce4baedc97"
-dependencies = [
- "gimli 0.27.3",
-]
-
 [[package]]
 name = "addr2line"
 version = "0.21.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "8a30b2e23b9e17a9f90641c7ab1549cd9b44f296d3ccbf309d2863cfe398a0cb"
 dependencies = [
- "gimli 0.28.0",
+ "gimli",
 ]
 
 [[package]]
@@ -54,7 +35,7 @@ source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "d122413f284cf2d62fb1b7db97e02edb8cda96d769b16e443a4f6195e35662b0"
 dependencies = [
  "crypto-common",
- "generic-array 0.14.7",
+ "generic-array",
 ]
 
 [[package]]
@@ -88,7 +69,7 @@ version = "0.7.7"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "5a824f2aa7e75a0c98c5a504fceb80649e9c35265d44525b5f94de4771a395cd"
 dependencies = [
- "getrandom 0.2.10",
+ "getrandom",
  "once_cell",
  "version_check",
 ]
@@ -100,7 +81,7 @@ source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "77c3a9648d43b9cd48db467b3f87fdd6e146bcc88ab0180006cef2179fe11d01"
 dependencies = [
  "cfg-if 1.0.0",
- "getrandom 0.2.10",
+ "getrandom",
  "once_cell",
  "version_check",
  "zerocopy",
@@ -237,16 +218,10 @@ source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "0609c78bd572f4edc74310dfb63a01f5609d53fa8b4dd7c4d98aef3b3e8d72d1"
 dependencies = [
  "proc-macro-hack",
- "quote 1.0.36",
+ "quote 1.0.33",
  "syn 1.0.109",
 ]
 
-[[package]]
-name = "array-bytes"
-version = "4.2.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "f52f63c5c1316a16a4b35eaac8b76a98248961a533f061684cb2a7cb0eafb6c6"
-
 [[package]]
 name = "arrayref"
 version = "0.3.7"
@@ -280,30 +255,6 @@ version = "1.5.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "9b34d609dfbaf33d6889b2b7106d3ca345eacad44200913df5ba02bfd31d2ba9"
 
-[[package]]
-name = "async-channel"
-version = "1.9.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "81953c529336010edd6d8e358f886d9581267795c61b19475b71314bffa46d35"
-dependencies = [
- "concurrent-queue",
- "event-listener 2.5.3",
- "futures-core",
-]
-
-[[package]]
-name = "async-channel"
-version = "2.2.1"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "136d4d23bcc79e27423727b36823d86233aad06dfea531837b038394d11e9928"
-dependencies = [
- "concurrent-queue",
- "event-listener 5.3.0",
- "event-listener-strategy 0.5.1",
- "futures-core",
- "pin-project-lite",
-]
-
 [[package]]
 name = "async-compression"
 version = "0.4.4"
@@ -320,136 +271,17 @@ dependencies = [
  "zstd-safe",
 ]
 
-[[package]]
-name = "async-executor"
-version = "1.11.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "b10202063978b3351199d68f8b22c4e47e4b1b822f8d43fd862d5ea8c006b29a"
-dependencies = [
- "async-task",
- "concurrent-queue",
- "fastrand 2.0.1",
- "futures-lite 2.3.0",
- "slab",
-]
-
-[[package]]
-name = "async-fs"
-version = "1.6.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "279cf904654eeebfa37ac9bb1598880884924aab82e290aa65c9e77a0e142e06"
-dependencies = [
- "async-lock 2.8.0",
- "autocfg",
- "blocking",
- "futures-lite 1.13.0",
-]
-
-[[package]]
-name = "async-io"
-version = "1.13.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "0fc5b45d93ef0529756f812ca52e44c221b35341892d3dcc34132ac02f3dd2af"
-dependencies = [
- "async-lock 2.8.0",
- "autocfg",
- "cfg-if 1.0.0",
- "concurrent-queue",
- "futures-lite 1.13.0",
- "log",
- "parking",
- "polling 2.8.0",
- "rustix 0.37.27",
- "slab",
- "socket2 0.4.10",
- "waker-fn",
-]
-
-[[package]]
-name = "async-io"
-version = "2.3.2"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "dcccb0f599cfa2f8ace422d3555572f47424da5648a4382a9dd0310ff8210884"
-dependencies = [
- "async-lock 3.3.0",
- "cfg-if 1.0.0",
- "concurrent-queue",
- "futures-io",
- "futures-lite 2.3.0",
- "parking",
- "polling 3.4.0",
- "rustix 0.38.20",
- "slab",
- "tracing",
- "windows-sys 0.52.0",
-]
-
-[[package]]
-name = "async-lock"
-version = "2.8.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "287272293e9d8c41773cec55e365490fe034813a2f172f502d6ddcf75b2f582b"
-dependencies = [
- "event-listener 2.5.3",
-]
-
 [[package]]
 name = "async-lock"
-version = "3.3.0"
+version = "3.2.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "d034b430882f8381900d3fe6f0aaa3ad94f2cb4ac519b429692a1bc2dda4ae7b"
+checksum = "7125e42787d53db9dd54261812ef17e937c95a51e4d291373b670342fa44310c"
 dependencies = [
  "event-listener 4.0.0",
- "event-listener-strategy 0.4.0",
+ "event-listener-strategy",
  "pin-project-lite",
 ]
 
-[[package]]
-name = "async-net"
-version = "1.8.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "0434b1ed18ce1cf5769b8ac540e33f01fa9471058b5e89da9e06f3c882a8c12f"
-dependencies = [
- "async-io 1.13.0",
- "blocking",
- "futures-lite 1.13.0",
-]
-
-[[package]]
-name = "async-process"
-version = "1.8.1"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "ea6438ba0a08d81529c69b36700fa2f95837bfe3e776ab39cde9c14d9149da88"
-dependencies = [
- "async-io 1.13.0",
- "async-lock 2.8.0",
- "async-signal",
- "blocking",
- "cfg-if 1.0.0",
- "event-listener 3.1.0",
- "futures-lite 1.13.0",
- "rustix 0.38.20",
- "windows-sys 0.48.0",
-]
-
-[[package]]
-name = "async-signal"
-version = "0.2.6"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "afe66191c335039c7bb78f99dc7520b0cbb166b3a1cb33a03f53d8a1c6f2afda"
-dependencies = [
- "async-io 2.3.2",
- "async-lock 3.3.0",
- "atomic-waker",
- "cfg-if 1.0.0",
- "futures-core",
- "futures-io",
- "rustix 0.38.20",
- "signal-hook-registry",
- "slab",
- "windows-sys 0.52.0",
-]
-
 [[package]]
 name = "async-stream"
 version = "0.3.5"
@@ -467,26 +299,20 @@ version = "0.3.5"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "16e62a023e7c117e27523144c5d2459f4397fcc3cab0085af8e2224f643a0193"
 dependencies = [
- "proc-macro2 1.0.81",
- "quote 1.0.36",
- "syn 2.0.60",
+ "proc-macro2 1.0.69",
+ "quote 1.0.33",
+ "syn 2.0.38",
 ]
 
-[[package]]
-name = "async-task"
-version = "4.7.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "fbb36e985947064623dbd357f727af08ffd077f93d696782f3c56365fa2e2799"
-
 [[package]]
 name = "async-trait"
 version = "0.1.74"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "a66537f1bb974b254c98ed142ff995236e81b9d0fe4db0575f46612cb15eb0f9"
 dependencies = [
- "proc-macro2 1.0.81",
- "quote 1.0.36",
- "syn 2.0.60",
+ "proc-macro2 1.0.69",
+ "quote 1.0.33",
+ "syn 2.0.38",
 ]
 
 [[package]]
@@ -498,18 +324,6 @@ dependencies = [
  "num-traits",
 ]
 
-[[package]]
-name = "atomic"
-version = "0.5.3"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "c59bdb34bc650a32731b31bd8f0829cc15d24a708ee31559e0bb34f2bc320cba"
-
-[[package]]
-name = "atomic-waker"
-version = "1.1.2"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "1505bd5d3d116872e7271a6d4e16d81d0c8570876c8de68093a09ac269d8aac0"
-
 [[package]]
 name = "atomic-write-file"
 version = "0.1.2"
@@ -592,12 +406,12 @@ version = "0.3.69"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "2089b7e3f35b9dd2d0ed921ead4f6d318c27680d4a5bd167b3ee120edb105837"
 dependencies = [
- "addr2line 0.21.0",
+ "addr2line",
  "cc",
  "cfg-if 1.0.0",
  "libc",
  "miniz_oxide",
- "object 0.32.1",
+ "object",
  "rustc-demangle",
 ]
 
@@ -613,12 +427,6 @@ version = "0.2.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "4c7f02d4ea65f2c1853089ffd8d2787bdbc63de2f0d29dedbcf8ccdfa0ccd4cf"
 
-[[package]]
-name = "base58"
-version = "0.2.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "6107fe1be6682a68940da878d9e9f5e90ca5745b3dec9fd1bb393c8777d4f581"
-
 [[package]]
 name = "base64"
 version = "0.13.1"
@@ -658,7 +466,7 @@ dependencies = [
  "byteorder",
  "cfg-if 1.0.0",
  "crossbeam 0.7.3",
- "futures 0.3.30",
+ "futures 0.3.28",
  "hex",
  "lazy_static",
  "num_cpus",
@@ -702,23 +510,12 @@ dependencies = [
  "lazycell",
  "peeking_take_while",
  "prettyplease",
- "proc-macro2 1.0.81",
- "quote 1.0.36",
+ "proc-macro2 1.0.69",
+ "quote 1.0.33",
  "regex",
  "rustc-hash",
  "shlex",
- "syn 2.0.60",
-]
-
-[[package]]
-name = "bip39"
-version = "2.0.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "93f2635620bf0b9d4576eb7bb9a38a55df78bd1205d26fa994b25911a69f212f"
-dependencies = [
- "bitcoin_hashes",
- "serde",
- "unicode-normalization",
+ "syn 2.0.38",
 ]
 
 [[package]]
@@ -730,12 +527,6 @@ dependencies = [
  "serde",
 ]
 
-[[package]]
-name = "bitcoin_hashes"
-version = "0.11.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "90064b8dee6815a6470d60bad07bbbaee885c0e12d04177138fa3291a01b7bc4"
-
 [[package]]
 name = "bitflags"
 version = "1.3.2"
@@ -778,9 +569,9 @@ version = "0.9.2"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "0a4e37d16930f5459780f5621038b6382b9bb37c19016f39fb6b5808d831f174"
 dependencies = [
- "crypto-mac 0.8.0",
+ "crypto-mac",
  "digest 0.9.0",
- "opaque-debug 0.3.0",
+ "opaque-debug",
 ]
 
 [[package]]
@@ -800,16 +591,6 @@ dependencies = [
  "digest 0.10.7",
 ]
 
-[[package]]
-name = "blake2-rfc"
-version = "0.2.18"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "5d6d530bdd2d52966a6d03b7a964add7ae1a288d25214066fd4b600f0f796400"
-dependencies = [
- "arrayvec 0.4.12",
- "constant_time_eq 0.1.5",
-]
-
 [[package]]
 name = "blake2-rfc_bellman_edition"
 version = "0.0.1"
@@ -818,18 +599,7 @@ checksum = "fdc60350286c7c3db13b98e91dbe5c8b6830a6821bc20af5b0c310ce94d74915"
 dependencies = [
  "arrayvec 0.4.12",
  "byteorder",
- "constant_time_eq 0.1.5",
-]
-
-[[package]]
-name = "blake2b_simd"
-version = "1.0.2"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "23285ad32269793932e830392f2fe2f83e26488fd3ec778883a93c8323735780"
-dependencies = [
- "arrayref",
- "arrayvec 0.7.4",
- "constant_time_eq 0.3.0",
+ "constant_time_eq",
 ]
 
 [[package]]
@@ -839,7 +609,7 @@ source = "git+https://github.com/matter-labs/bellman?branch=dev#5520aa2274afe73d
 dependencies = [
  "arrayref",
  "arrayvec 0.5.2",
- "constant_time_eq 0.1.5",
+ "constant_time_eq",
 ]
 
 [[package]]
@@ -850,19 +620,7 @@ checksum = "9e461a7034e85b211a4acb57ee2e6730b32912b06c08cc242243c39fc21ae6a2"
 dependencies = [
  "arrayref",
  "arrayvec 0.5.2",
- "constant_time_eq 0.1.5",
-]
-
-[[package]]
-name = "block-buffer"
-version = "0.7.3"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "c0940dc441f31689269e10ac70eb1002a3a1d3ad1390e030043662eb7fe4688b"
-dependencies = [
- "block-padding 0.1.5",
- "byte-tools",
- "byteorder",
- "generic-array 0.12.4",
+ "constant_time_eq",
 ]
 
 [[package]]
@@ -871,8 +629,8 @@ version = "0.9.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "4152116fd6e9dadb291ae18fc1ec3575ed6d84c29642d97890f4b4a3417297e4"
 dependencies = [
- "block-padding 0.2.1",
- "generic-array 0.14.7",
+ "block-padding",
+ "generic-array",
 ]
 
 [[package]]
@@ -881,16 +639,7 @@ version = "0.10.4"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "3078c7629b62d3f0439517fa394996acacc5cbc91c5a20d8c658e77abd503a71"
 dependencies = [
- "generic-array 0.14.7",
-]
-
-[[package]]
-name = "block-padding"
-version = "0.1.5"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "fa79dedbb091f449f1f39e53edf88d5dbe95f895dae6135a8d7b881fb5af73f5"
-dependencies = [
- "byte-tools",
+ "generic-array",
 ]
 
 [[package]]
@@ -915,22 +664,6 @@ dependencies = [
  "zksync_types",
 ]
 
-[[package]]
-name = "blocking"
-version = "1.5.1"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "6a37913e8dc4ddcc604f0c6d3bf2887c995153af3611de9e23c352b44c1b9118"
-dependencies = [
- "async-channel 2.2.1",
- "async-lock 3.3.0",
- "async-task",
- "fastrand 2.0.1",
- "futures-io",
- "futures-lite 2.3.0",
- "piper",
- "tracing",
-]
-
 [[package]]
 name = "blst"
 version = "0.3.11"
@@ -991,25 +724,13 @@ source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "bf4918709cc4dd777ad2b6303ed03cb37f3ca0ccede8c1b0d28ac6db8f4710e0"
 dependencies = [
  "once_cell",
- "proc-macro-crate 2.0.0",
- "proc-macro2 1.0.81",
- "quote 1.0.36",
- "syn 2.0.60",
+ "proc-macro-crate 2.0.1",
+ "proc-macro2 1.0.69",
+ "quote 1.0.33",
+ "syn 2.0.38",
  "syn_derive",
 ]
 
-[[package]]
-name = "bounded-collections"
-version = "0.1.9"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "ca548b6163b872067dc5eb82fd130c56881435e30367d2073594a3d9744120dd"
-dependencies = [
- "log",
- "parity-scale-codec",
- "scale-info",
- "serde",
-]
-
 [[package]]
 name = "brotli"
 version = "3.4.0"
@@ -1031,21 +752,6 @@ dependencies = [
  "alloc-stdlib",
 ]
 
-[[package]]
-name = "bs58"
-version = "0.4.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "771fe0050b883fcc3ea2359b1a96bcfbc090b7116eae7c3c512c7a083fdf23d3"
-
-[[package]]
-name = "bs58"
-version = "0.5.1"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "bf88ba1141d185c399bee5288d850d63b8369520c1eafc32a0430b5b6c287bf4"
-dependencies = [
- "tinyvec",
-]
-
 [[package]]
 name = "bumpalo"
 version = "3.14.0"
@@ -1058,12 +764,6 @@ version = "1.2.2"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "c3ac9f8b63eca6fd385229b3675f6cc0dc5c8a5c8a54a59d4f52ffd670d87b0c"
 
-[[package]]
-name = "byte-tools"
-version = "0.3.1"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "e3b5ca7a04898ad4bcd41c90c5285445ff5b791899bb1b0abdd2a2aa791211d7"
-
 [[package]]
 name = "bytecheck"
 version = "0.6.11"
@@ -1081,8 +781,8 @@ version = "0.6.11"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "a7ec4c6f261935ad534c0c22dbef2201b45918860eb1c574b972bd213a76af61"
 dependencies = [
- "proc-macro2 1.0.81",
- "quote 1.0.36",
+ "proc-macro2 1.0.69",
+ "quote 1.0.33",
  "syn 1.0.109",
 ]
 
@@ -1417,9 +1117,9 @@ source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "0862016ff20d69b84ef8247369fabf5c008a7417002411897d40ee1f4532b873"
 dependencies = [
  "heck 0.4.1",
- "proc-macro2 1.0.81",
- "quote 1.0.36",
- "syn 2.0.60",
+ "proc-macro2 1.0.69",
+ "quote 1.0.33",
+ "syn 2.0.38",
 ]
 
 [[package]]
@@ -1515,8 +1215,8 @@ version = "0.2.32"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "c7f6ff08fd20f4f299298a28e2dfa8a8ba1036e6cd2460ac1de7b425d76f2500"
 dependencies = [
- "proc-macro2 1.0.81",
- "quote 1.0.36",
+ "proc-macro2 1.0.69",
+ "quote 1.0.33",
  "unicode-xid 0.2.4",
 ]
 
@@ -1526,12 +1226,6 @@ version = "0.1.5"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "245097e9a4535ee1e3e3931fcfcd55a796a44c643e8596ff6566d68f09b87bbc"
 
-[[package]]
-name = "constant_time_eq"
-version = "0.3.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "f7144d30dcf0fafbce74250a3963025d8d52177934239851c917d29f1df280c2"
-
 [[package]]
 name = "convert_case"
 version = "0.4.0"
@@ -1554,15 +1248,6 @@ version = "0.8.4"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "e496a50fda8aacccc86d7529e2c1e0892dbd0f898a6b5645b5561b89c3210efa"
 
-[[package]]
-name = "cpp_demangle"
-version = "0.3.5"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "eeaa953eaad386a53111e47172c2fedba671e5684c8dd601a5f474f4f118710f"
-dependencies = [
- "cfg-if 1.0.0",
-]
-
 [[package]]
 name = "cpufeatures"
 version = "0.2.10"
@@ -1572,15 +1257,6 @@ dependencies = [
  "libc",
 ]
 
-[[package]]
-name = "cranelift-entity"
-version = "0.95.1"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "40099d38061b37e505e63f89bab52199037a72b931ad4868d9089ff7268660b0"
-dependencies = [
- "serde",
-]
-
 [[package]]
 name = "crc"
 version = "3.0.1"
@@ -1792,7 +1468,7 @@ version = "0.4.9"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "ef2b4b23cddf68b89b8f8069890e8c270d54e2d5fe1b143820234805e4cb17ef"
 dependencies = [
- "generic-array 0.14.7",
+ "generic-array",
  "rand_core 0.6.4",
  "subtle",
  "zeroize",
@@ -1804,7 +1480,7 @@ version = "0.5.3"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "740fe28e594155f10cfc383984cbefd529d7396050557148f79cb0f621204124"
 dependencies = [
- "generic-array 0.14.7",
+ "generic-array",
  "rand_core 0.6.4",
  "subtle",
  "zeroize",
@@ -1816,7 +1492,7 @@ version = "0.1.6"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "1bfb12502f3fc46cca1bb51ac28df9d618d813cdc3d2f25b9fe775a34af26bb3"
 dependencies = [
- "generic-array 0.14.7",
+ "generic-array",
  "rand_core 0.6.4",
  "typenum",
 ]
@@ -1827,17 +1503,7 @@ version = "0.8.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "b584a330336237c1eecd3e94266efb216c56ed91225d634cb2991c5f3fd1aeab"
 dependencies = [
- "generic-array 0.14.7",
- "subtle",
-]
-
-[[package]]
-name = "crypto-mac"
-version = "0.11.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "25fab6889090c8133f3deb8f73ba3c65a7f456f66436fc012a1b1e272b1e103e"
-dependencies = [
- "generic-array 0.14.7",
+ "generic-array",
  "subtle",
 ]
 
@@ -1847,8 +1513,8 @@ version = "0.1.0"
 source = "git+https://github.com/matter-labs/era-boojum.git?branch=main#30300f043c9afaeeb35d0f7bd3cc0acaf69ccde4"
 dependencies = [
  "proc-macro-error",
- "proc-macro2 1.0.81",
- "quote 1.0.36",
+ "proc-macro2 1.0.69",
+ "quote 1.0.33",
  "syn 1.0.109",
 ]
 
@@ -1871,32 +1537,6 @@ dependencies = [
  "windows-sys 0.48.0",
 ]
 
-[[package]]
-name = "curve25519-dalek"
-version = "2.1.3"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "4a9b85542f99a2dfa2a1b8e192662741c9859a846b296bef1c92ef9b58b5a216"
-dependencies = [
- "byteorder",
- "digest 0.8.1",
- "rand_core 0.5.1",
- "subtle",
- "zeroize",
-]
-
-[[package]]
-name = "curve25519-dalek"
-version = "3.2.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "0b9fdf9972b2bd6af2d913799d9ebc165ea4d2e65878e329d9c6b372c4491b61"
-dependencies = [
- "byteorder",
- "digest 0.9.0",
- "rand_core 0.5.1",
- "subtle",
- "zeroize",
-]
-
 [[package]]
 name = "curve25519-dalek"
 version = "4.1.1"
@@ -1920,94 +1560,33 @@ version = "0.1.1"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "f46882e17999c6cc590af592290432be3bce0428cb0d5f8b6715e4dc7b383eb3"
 dependencies = [
- "proc-macro2 1.0.81",
- "quote 1.0.36",
- "syn 2.0.60",
+ "proc-macro2 1.0.69",
+ "quote 1.0.33",
+ "syn 2.0.38",
 ]
 
 [[package]]
-name = "curve25519-dalek-ng"
-version = "4.1.1"
+name = "darling"
+version = "0.13.4"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "1c359b7249347e46fb28804470d071c921156ad62b3eef5d34e2ba867533dec8"
+checksum = "a01d95850c592940db9b8194bc39f4bc0e89dee5c4265e4b1807c34a9aba453c"
 dependencies = [
- "byteorder",
- "digest 0.9.0",
- "rand_core 0.6.4",
- "subtle-ng",
- "zeroize",
+ "darling_core",
+ "darling_macro",
 ]
 
 [[package]]
-name = "darling"
+name = "darling_core"
 version = "0.13.4"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "a01d95850c592940db9b8194bc39f4bc0e89dee5c4265e4b1807c34a9aba453c"
+checksum = "859d65a907b6852c9361e3185c862aae7fafd2887876799fa55f5f99dc40d610"
 dependencies = [
- "darling_core 0.13.4",
- "darling_macro 0.13.4",
-]
-
-[[package]]
-name = "darling"
-version = "0.14.4"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "7b750cb3417fd1b327431a470f388520309479ab0bf5e323505daf0290cd3850"
-dependencies = [
- "darling_core 0.14.4",
- "darling_macro 0.14.4",
-]
-
-[[package]]
-name = "darling"
-version = "0.20.8"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "54e36fcd13ed84ffdfda6f5be89b31287cbb80c439841fe69e04841435464391"
-dependencies = [
- "darling_core 0.20.8",
- "darling_macro 0.20.8",
-]
-
-[[package]]
-name = "darling_core"
-version = "0.13.4"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "859d65a907b6852c9361e3185c862aae7fafd2887876799fa55f5f99dc40d610"
-dependencies = [
- "fnv",
- "ident_case",
- "proc-macro2 1.0.81",
- "quote 1.0.36",
- "strsim 0.10.0",
- "syn 1.0.109",
-]
-
-[[package]]
-name = "darling_core"
-version = "0.14.4"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "109c1ca6e6b7f82cc233a97004ea8ed7ca123a9af07a8230878fcfda9b158bf0"
-dependencies = [
- "fnv",
- "ident_case",
- "proc-macro2 1.0.81",
- "quote 1.0.36",
- "strsim 0.10.0",
- "syn 1.0.109",
-]
-
-[[package]]
-name = "darling_core"
-version = "0.20.8"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "9c2cf1c23a687a1feeb728783b993c4e1ad83d99f351801977dd809b48d0a70f"
-dependencies = [
- "fnv",
- "ident_case",
- "proc-macro2 1.0.81",
- "quote 1.0.36",
- "strsim 0.10.0",
- "syn 2.0.60",
+ "fnv",
+ "ident_case",
+ "proc-macro2 1.0.69",
+ "quote 1.0.33",
+ "strsim 0.10.0",
+ "syn 1.0.109",
 ]
 
 [[package]]
@@ -2016,33 +1595,11 @@ version = "0.13.4"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "9c972679f83bdf9c42bd905396b6c3588a843a17f0f16dfcfa3e2c5d57441835"
 dependencies = [
- "darling_core 0.13.4",
- "quote 1.0.36",
- "syn 1.0.109",
-]
-
-[[package]]
-name = "darling_macro"
-version = "0.14.4"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "a4aab4dbc9f7611d8b55048a3a16d2d010c2c8334e46304b40ac1cc14bf3b48e"
-dependencies = [
- "darling_core 0.14.4",
- "quote 1.0.36",
+ "darling_core",
+ "quote 1.0.33",
  "syn 1.0.109",
 ]
 
-[[package]]
-name = "darling_macro"
-version = "0.20.8"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "a668eda54683121533a393014d8692171709ff57a7d61f187b6e782719f8933f"
-dependencies = [
- "darling_core 0.20.8",
- "quote 1.0.36",
- "syn 2.0.60",
-]
-
 [[package]]
 name = "dashmap"
 version = "5.5.3"
@@ -2050,7 +1607,7 @@ source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "978747c1d849a7d2ee5e8adc0159961c48fb7e5db2f06af6723b80123bb53856"
 dependencies = [
  "cfg-if 1.0.0",
- "hashbrown 0.14.3",
+ "hashbrown 0.14.2",
  "lock_api",
  "once_cell",
  "parking_lot_core",
@@ -2103,8 +1660,8 @@ version = "2.2.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "fcc3dd5e9e9c0b295d6e1e4d811fb6f157d5ffd784b8d202fc62eac8035a770b"
 dependencies = [
- "proc-macro2 1.0.81",
- "quote 1.0.36",
+ "proc-macro2 1.0.69",
+ "quote 1.0.33",
  "syn 1.0.109",
 ]
 
@@ -2115,8 +1672,8 @@ source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "4fb810d30a7c1953f91334de7244731fc3f3c10d7fe163338a35b9f640960321"
 dependencies = [
  "convert_case",
- "proc-macro2 1.0.81",
- "quote 1.0.36",
+ "proc-macro2 1.0.69",
+ "quote 1.0.33",
  "rustc_version",
  "syn 1.0.109",
 ]
@@ -2127,22 +1684,13 @@ version = "0.1.13"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "56254986775e3233ffa9c4d7d3faaf6d36a2c09d30b20687e9f88bc8bafc16c8"
 
-[[package]]
-name = "digest"
-version = "0.8.1"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "f3d0c8c8752312f9713efd397ff63acb9f85585afbf179282e720e7704954dd5"
-dependencies = [
- "generic-array 0.12.4",
-]
-
 [[package]]
 name = "digest"
 version = "0.9.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "d3dd60d1080a57a05ab032377049e0591415d2b31afd7028356dbf3cc6dcb066"
 dependencies = [
- "generic-array 0.14.7",
+ "generic-array",
 ]
 
 [[package]]
@@ -2163,45 +1711,12 @@ version = "0.15.7"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "1aaf95b3e5c8f23aa320147307562d361db0ae0d51242340f558153b4eb2439b"
 
-[[package]]
-name = "downcast-rs"
-version = "1.2.1"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "75b325c5dbd37f80359721ad39aca5a29fb04c89279657cffdda8736d0c0b9d2"
-
 [[package]]
 name = "dtoa"
 version = "1.0.9"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "dcbb2bf8e87535c23f7a8a321e364ce21462d0ff10cb6407820e8e96dfff6653"
 
-[[package]]
-name = "dyn-clonable"
-version = "0.9.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "4e9232f0e607a262ceb9bd5141a3dfb3e4db6994b31989bbfd845878cba59fd4"
-dependencies = [
- "dyn-clonable-impl",
- "dyn-clone",
-]
-
-[[package]]
-name = "dyn-clonable-impl"
-version = "0.9.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "558e40ea573c374cf53507fd240b7ee2f5477df7cfebdb97323ec61c719399c5"
-dependencies = [
- "proc-macro2 1.0.81",
- "quote 1.0.36",
- "syn 1.0.109",
-]
-
-[[package]]
-name = "dyn-clone"
-version = "1.0.17"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "0d6ef0072f8a535281e4876be788938b528e9a1d43900b82c2569af7da799125"
-
 [[package]]
 name = "ecdsa"
 version = "0.14.8"
@@ -2222,21 +1737,12 @@ checksum = "ee27f32b5c5292967d2d4a9d7f1e0b0aed2c15daded5a60300e4abb9d8020bca"
 dependencies = [
  "der 0.7.8",
  "digest 0.10.7",
- "elliptic-curve 0.13.8",
+ "elliptic-curve 0.13.7",
  "rfc6979 0.4.0",
  "signature 2.2.0",
  "spki 0.7.2",
 ]
 
-[[package]]
-name = "ed25519"
-version = "1.5.3"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "91cff35c70bba8a626e3185d8cd48cc11b5437e1a5bcd15b9b5fa3c64b6dfee7"
-dependencies = [
- "signature 1.6.4",
-]
-
 [[package]]
 name = "ed25519"
 version = "2.2.3"
@@ -2249,50 +1755,23 @@ dependencies = [
 
 [[package]]
 name = "ed25519-dalek"
-version = "1.0.1"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "c762bae6dcaf24c4c84667b8579785430908723d5c889f469d76a41d59cc7a9d"
-dependencies = [
- "curve25519-dalek 3.2.0",
- "ed25519 1.5.3",
- "sha2 0.9.9",
- "zeroize",
-]
-
-[[package]]
-name = "ed25519-dalek"
-version = "2.1.1"
+version = "2.0.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "4a3daa8e81a3963a60642bcc1f90a670680bd4a77535faa384e9d1c79d620871"
+checksum = "7277392b266383ef8396db7fdeb1e77b6c52fed775f5df15bb24f35b72156980"
 dependencies = [
- "curve25519-dalek 4.1.1",
- "ed25519 2.2.3",
+ "curve25519-dalek",
+ "ed25519",
  "rand_core 0.6.4",
  "serde",
  "sha2 0.10.8",
- "subtle",
- "zeroize",
-]
-
-[[package]]
-name = "ed25519-zebra"
-version = "3.1.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "7c24f403d068ad0b359e577a77f92392118be3f3c927538f2bb544a5ecd828c6"
-dependencies = [
- "curve25519-dalek 3.2.0",
- "hashbrown 0.12.3",
- "hex",
- "rand_core 0.6.4",
- "sha2 0.9.9",
  "zeroize",
 ]
 
 [[package]]
 name = "either"
-version = "1.11.0"
+version = "1.9.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "a47c1c47d2f5964e29c61246e81db715514cd532db6b5116a25ea3c03d6780a2"
+checksum = "a26ae43d7bcc3b814de94796a5e736d4029efb0ee900c12e2d54c993ad1a1e07"
 dependencies = [
  "serde",
 ]
@@ -2308,7 +1787,7 @@ dependencies = [
  "der 0.6.1",
  "digest 0.10.7",
  "ff 0.12.1",
- "generic-array 0.14.7",
+ "generic-array",
  "group 0.12.1",
  "pkcs8 0.9.0",
  "rand_core 0.6.4",
@@ -2319,15 +1798,15 @@ dependencies = [
 
 [[package]]
 name = "elliptic-curve"
-version = "0.13.8"
+version = "0.13.7"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "b5e6043086bf7973472e0c7dff2142ea0b680d30e18d9cc40f267efbf222bd47"
+checksum = "e9775b22bc152ad86a0cf23f0f348b884b26add12bf741e7ffc4d4ab2ab4d205"
 dependencies = [
  "base16ct 0.2.0",
  "crypto-bigint 0.5.3",
  "digest 0.10.7",
  "ff 0.13.0",
- "generic-array 0.14.7",
+ "generic-array",
  "group 0.13.0",
  "pkcs8 0.10.2",
  "rand_core 0.6.4",
@@ -2360,12 +1839,6 @@ dependencies = [
  "cfg-if 1.0.0",
 ]
 
-[[package]]
-name = "environmental"
-version = "1.1.4"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "e48c92028aaa870e83d51c64e5d4e0b6981b360c522198c23959f219a4e1b15b"
-
 [[package]]
 name = "envy"
 version = "0.4.2"
@@ -2461,17 +1934,6 @@ version = "2.5.3"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "0206175f82b8d6bf6652ff7d71a1e27fd2e4efde587fd368662814d6ec1d9ce0"
 
-[[package]]
-name = "event-listener"
-version = "3.1.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "d93877bcde0eb80ca09131a08d23f0a5c18a620b01db137dba666d18cd9b30c2"
-dependencies = [
- "concurrent-queue",
- "parking",
- "pin-project-lite",
-]
-
 [[package]]
 name = "event-listener"
 version = "4.0.0"
@@ -2483,17 +1945,6 @@ dependencies = [
  "pin-project-lite",
 ]
 
-[[package]]
-name = "event-listener"
-version = "5.3.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "6d9944b8ca13534cdfb2800775f8dd4902ff3fc75a50101466decadfdf322a24"
-dependencies = [
- "concurrent-queue",
- "parking",
- "pin-project-lite",
-]
-
 [[package]]
 name = "event-listener-strategy"
 version = "0.4.0"
@@ -2504,37 +1955,6 @@ dependencies = [
  "pin-project-lite",
 ]
 
-[[package]]
-name = "event-listener-strategy"
-version = "0.5.1"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "332f51cb23d20b0de8458b86580878211da09bcd4503cb579c225b3d124cabb3"
-dependencies = [
- "event-listener 5.3.0",
- "pin-project-lite",
-]
-
-[[package]]
-name = "fake-simd"
-version = "0.1.2"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "e88a8acf291dafb59c2d96e8f59828f3838bb1a70398823ade51a84de6a6deed"
-
-[[package]]
-name = "fallible-iterator"
-version = "0.2.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "4443176a9f2c162692bd3d352d745ef9413eec5782a80d8fd6f8a1ac692a07f7"
-
-[[package]]
-name = "fastrand"
-version = "1.9.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "e51093e27b0797c359783294ca4f0a911c270184cb10f85783b118614a1501be"
-dependencies = [
- "instant",
-]
-
 [[package]]
 name = "fastrand"
 version = "2.0.1"
@@ -2583,8 +2003,8 @@ dependencies = [
  "num-bigint 0.4.4",
  "num-integer",
  "num-traits",
- "proc-macro2 1.0.81",
- "quote 1.0.36",
+ "proc-macro2 1.0.69",
+ "quote 1.0.33",
  "serde",
  "syn 1.0.109",
 ]
@@ -2681,36 +2101,13 @@ checksum = "00b0228411908ca8685dba7fc2cdd70ec9990a6e753e89b6ac91a84c40fbaf4b"
 
 [[package]]
 name = "form_urlencoded"
-version = "1.2.1"
+version = "1.2.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "e13624c2627564efccf4934284bdd98cbaa14e79b0b5a141218e507b3a823456"
+checksum = "a62bc1cf6f830c2ec14a513a9fb124d0a213a629668a4186f329db21fe045652"
 dependencies = [
  "percent-encoding",
 ]
 
-[[package]]
-name = "frame-metadata"
-version = "15.1.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "878babb0b136e731cc77ec2fd883ff02745ff21e6fb662729953d44923df009c"
-dependencies = [
- "cfg-if 1.0.0",
- "parity-scale-codec",
- "scale-info",
-]
-
-[[package]]
-name = "frame-metadata"
-version = "16.0.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "87cf1549fba25a6fcac22785b61698317d958e96cac72a59102ea45b9ae64692"
-dependencies = [
- "cfg-if 1.0.0",
- "parity-scale-codec",
- "scale-info",
- "serde",
-]
-
 [[package]]
 name = "franklin-crypto"
 version = "0.0.5"
@@ -2761,9 +2158,9 @@ checksum = "3a471a38ef8ed83cd6e40aa59c1ffe17db6855c18e3604d9c4ed8c08ebc28678"
 
 [[package]]
 name = "futures"
-version = "0.3.30"
+version = "0.3.28"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "645c6916888f6cb6350d2550b80fb63e734897a8498abe35cfb732b6487804b0"
+checksum = "23342abe12aba583913b2e62f22225ff9c950774065e4bfb61a19cd9770fec40"
 dependencies = [
  "futures-channel",
  "futures-core",
@@ -2776,9 +2173,9 @@ dependencies = [
 
 [[package]]
 name = "futures-channel"
-version = "0.3.30"
+version = "0.3.28"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "eac8f7d7865dcb88bd4373ab671c8cf4508703796caa2b1985a9ca867b3fcb78"
+checksum = "955518d47e09b25bbebc7a18df10b81f0c766eaf4c4f1cccef2fca5f2a4fb5f2"
 dependencies = [
  "futures-core",
  "futures-sink",
@@ -2786,15 +2183,15 @@ dependencies = [
 
 [[package]]
 name = "futures-core"
-version = "0.3.30"
+version = "0.3.28"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "dfc6580bb841c5a68e9ef15c77ccc837b40a7504914d52e47b8b0e9bbda25a1d"
+checksum = "4bca583b7e26f571124fe5b7561d49cb2868d79116cfa0eefce955557c6fee8c"
 
 [[package]]
 name = "futures-executor"
-version = "0.3.30"
+version = "0.3.28"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "a576fc72ae164fca6b9db127eaa9a9dda0d61316034f33a0a0d4eda41f02b01d"
+checksum = "ccecee823288125bd88b4d7f565c9e58e41858e47ab72e8ea2d64e93624386e0"
 dependencies = [
  "futures-core",
  "futures-task",
@@ -2815,60 +2212,32 @@ dependencies = [
 
 [[package]]
 name = "futures-io"
-version = "0.3.30"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "a44623e20b9681a318efdd71c299b6b222ed6f231972bfe2f224ebad6311f0c1"
-
-[[package]]
-name = "futures-lite"
-version = "1.13.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "49a9d51ce47660b1e808d3c990b4709f2f415d928835a17dfd16991515c46bce"
-dependencies = [
- "fastrand 1.9.0",
- "futures-core",
- "futures-io",
- "memchr",
- "parking",
- "pin-project-lite",
- "waker-fn",
-]
-
-[[package]]
-name = "futures-lite"
-version = "2.3.0"
+version = "0.3.28"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "52527eb5074e35e9339c6b4e8d12600c7128b68fb25dcb9fa9dec18f7c25f3a5"
-dependencies = [
- "fastrand 2.0.1",
- "futures-core",
- "futures-io",
- "parking",
- "pin-project-lite",
-]
+checksum = "4fff74096e71ed47f8e023204cfd0aa1289cd54ae5430a9523be060cdb849964"
 
 [[package]]
 name = "futures-macro"
-version = "0.3.30"
+version = "0.3.28"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "87750cf4b7a4c0625b1529e4c543c2182106e4dedc60a2a6455e00d212c489ac"
+checksum = "89ca545a94061b6365f2c7355b4b32bd20df3ff95f02da9329b34ccc3bd6ee72"
 dependencies = [
- "proc-macro2 1.0.81",
- "quote 1.0.36",
- "syn 2.0.60",
+ "proc-macro2 1.0.69",
+ "quote 1.0.33",
+ "syn 2.0.38",
 ]
 
 [[package]]
 name = "futures-sink"
-version = "0.3.30"
+version = "0.3.28"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "9fb8e00e87438d937621c1c6269e53f536c14d3fbd6a042bb24879e57d474fb5"
+checksum = "f43be4fe21a13b9781a69afa4985b0f6ee0e1afab2c6f454a8cf30e2b2237b6e"
 
 [[package]]
 name = "futures-task"
-version = "0.3.30"
+version = "0.3.28"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "38d84fa142264698cdce1a9f9172cf383a0c82de1bddcf3092901442c4097004"
+checksum = "76d3d132be6c0e6aa1534069c705a74a5997a356c0dc2f86a47765e5617c5b65"
 
 [[package]]
 name = "futures-timer"
@@ -2882,9 +2251,9 @@ dependencies = [
 
 [[package]]
 name = "futures-util"
-version = "0.3.30"
+version = "0.3.28"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "3d6401deb83407ab3da39eba7e33987a73c3df0c82b4bb5813ee871c19c41d48"
+checksum = "26b01e40b772d54cf6c6d721c1d1abd0647a0106a12ecaa1c186273392a69533"
 dependencies = [
  "futures 0.1.31",
  "futures-channel",
@@ -2899,15 +2268,6 @@ dependencies = [
  "slab",
 ]
 
-[[package]]
-name = "generic-array"
-version = "0.12.4"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "ffdf9f34f1447443d37393cc6c2b8313aebddcd96906caf34e54c68d8e57d7bd"
-dependencies = [
- "typenum",
-]
-
 [[package]]
 name = "generic-array"
 version = "0.14.7"
@@ -2919,17 +2279,6 @@ dependencies = [
  "zeroize",
 ]
 
-[[package]]
-name = "getrandom"
-version = "0.1.16"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "8fc3cb4d91f53b50155bdcfd23f6a4c39ae1969c2ae85982b135750cccaf5fce"
-dependencies = [
- "cfg-if 1.0.0",
- "libc",
- "wasi 0.9.0+wasi-snapshot-preview1",
-]
-
 [[package]]
 name = "getrandom"
 version = "0.2.10"
@@ -2941,36 +2290,16 @@ dependencies = [
  "wasi 0.11.0+wasi-snapshot-preview1",
 ]
 
-[[package]]
-name = "getrandom_or_panic"
-version = "0.0.3"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "6ea1015b5a70616b688dc230cfe50c8af89d972cb132d5a622814d29773b10b9"
-dependencies = [
- "rand_core 0.6.4",
-]
-
 [[package]]
 name = "ghash"
 version = "0.5.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "d930750de5717d2dd0b8c0d42c076c0e884c81a73e6cab859bbd2339c71e3e40"
 dependencies = [
- "opaque-debug 0.3.0",
+ "opaque-debug",
  "polyval",
 ]
 
-[[package]]
-name = "gimli"
-version = "0.27.3"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "b6c80984affa11d98d1b88b66ac8853f143217b399d3c74116778ff8fdb4ed2e"
-dependencies = [
- "fallible-iterator",
- "indexmap 1.9.3",
- "stable_deref_trait",
-]
-
 [[package]]
 name = "gimli"
 version = "0.28.0"
@@ -3109,7 +2438,7 @@ source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "19775995ee20209163239355bc3ad2f33f83da35d9ef72dea26e5af753552c87"
 dependencies = [
  "dashmap",
- "futures 0.3.30",
+ "futures 0.3.28",
  "futures-timer",
  "no-std-compat",
  "nonzero_ext",
@@ -3180,21 +2509,6 @@ dependencies = [
  "thiserror",
 ]
 
-[[package]]
-name = "hash-db"
-version = "0.16.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "8e7d7786361d7425ae2fe4f9e407eb0efaa0840f5212d109cc018c40c35c6ab4"
-
-[[package]]
-name = "hash256-std-hasher"
-version = "0.15.2"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "92c171d55b98633f4ed3860808f004099b36c1cc29c42cfc53aa8591b21efcf2"
-dependencies = [
- "crunchy",
-]
-
 [[package]]
 name = "hashbrown"
 version = "0.12.3"
@@ -3206,22 +2520,21 @@ dependencies = [
 
 [[package]]
 name = "hashbrown"
-version = "0.13.2"
+version = "0.13.1"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "43a3c133739dddd0d2990f9a4bdf8eb4b21ef50e4851ca85ab661199821d510e"
+checksum = "33ff8ae62cd3a9102e5637afc8452c55acf3844001bd5374e0b0bd7b6616c038"
 dependencies = [
  "ahash 0.8.7",
 ]
 
 [[package]]
 name = "hashbrown"
-version = "0.14.3"
+version = "0.14.2"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "290f1a1d9242c78d09ce40a5e87e7554ee637af1351968159f4952f028f75604"
+checksum = "f93e7192158dbcda357bdec5fb5788eebf8bbac027f3f33e719d29135ae84156"
 dependencies = [
  "ahash 0.8.7",
  "allocator-api2",
- "serde",
 ]
 
 [[package]]
@@ -3230,7 +2543,7 @@ version = "0.8.4"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "e8094feaf31ff591f651a2664fb9cfd92bba7a60ce3197265e9482ebe753c8f7"
 dependencies = [
- "hashbrown 0.14.3",
+ "hashbrown 0.14.2",
 ]
 
 [[package]]
@@ -3312,61 +2625,24 @@ version = "0.4.3"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "7f24254aa9a54b5c858eaee2f5bccdb46aaf0e486a595ed5fd8f86ba55232a70"
 
-[[package]]
-name = "hex-literal"
-version = "0.4.1"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "6fe2267d4ed49bc07b63801559be28c718ea06c4738b7a03c94df7386d2cde46"
-
 [[package]]
 name = "hkdf"
 version = "0.12.3"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "791a029f6b9fc27657f6f188ec6e5e43f6911f6f878e0dc5501396e09809d437"
 dependencies = [
- "hmac 0.12.1",
+ "hmac",
 ]
 
 [[package]]
 name = "hmac"
-version = "0.8.1"
+version = "0.12.1"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "126888268dcc288495a26bf004b38c5fdbb31682f992c84ceb046a1f0fe38840"
-dependencies = [
- "crypto-mac 0.8.0",
- "digest 0.9.0",
-]
-
-[[package]]
-name = "hmac"
-version = "0.11.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "2a2a2320eb7ec0ebe8da8f744d7812d9fc4cb4d09344ac01898dbcb6a20ae69b"
-dependencies = [
- "crypto-mac 0.11.0",
- "digest 0.9.0",
-]
-
-[[package]]
-name = "hmac"
-version = "0.12.1"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "6c49c37c09c17a53d937dfbb742eb3a961d65a994e6bcdcf37e7399d0cc8ab5e"
+checksum = "6c49c37c09c17a53d937dfbb742eb3a961d65a994e6bcdcf37e7399d0cc8ab5e"
 dependencies = [
  "digest 0.10.7",
 ]
 
-[[package]]
-name = "hmac-drbg"
-version = "0.3.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "17ea0a1394df5b6574da6e0c1ade9e78868c9fb0a4e5ef4428e32da4676b85b1"
-dependencies = [
- "digest 0.9.0",
- "generic-array 0.14.7",
- "hmac 0.8.1",
-]
-
 [[package]]
 name = "home"
 version = "0.5.5"
@@ -3537,16 +2813,6 @@ dependencies = [
  "unicode-normalization",
 ]
 
-[[package]]
-name = "idna"
-version = "0.5.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "634d9b1461af396cad843f47fdba5597a4f9e6ddd4bfb6ff5d85028c25cb12f6"
-dependencies = [
- "unicode-bidi",
- "unicode-normalization",
-]
-
 [[package]]
 name = "im"
 version = "15.1.0"
@@ -3594,8 +2860,8 @@ version = "0.2.2"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "11d7a9f6330b71fea57921c9b61c47ee6e84f72d394754eff6163ae67e7395eb"
 dependencies = [
- "proc-macro2 1.0.81",
- "quote 1.0.36",
+ "proc-macro2 1.0.69",
+ "quote 1.0.33",
  "syn 1.0.109",
 ]
 
@@ -3607,7 +2873,6 @@ checksum = "bd070e393353796e801d209ad339e89596eb4c8d430d18ede6a1cced8fafbd99"
 dependencies = [
  "autocfg",
  "hashbrown 0.12.3",
- "serde",
 ]
 
 [[package]]
@@ -3617,22 +2882,16 @@ source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "d530e1a18b1cb4c484e6e34556a0d948706958449fca0cab753d649f2bce3d1f"
 dependencies = [
  "equivalent",
- "hashbrown 0.14.3",
+ "hashbrown 0.14.2",
 ]
 
-[[package]]
-name = "indexmap-nostd"
-version = "0.4.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "8e04e2fd2b8188ea827b32ef11de88377086d690286ab35747ef7f9bf3ccb590"
-
 [[package]]
 name = "inout"
 version = "0.1.3"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "a0c10553d664a4d0bcff9f4215d0aac67a639cc68ef660840afe309b807bc9f5"
 dependencies = [
- "generic-array 0.14.7",
+ "generic-array",
 ]
 
 [[package]]
@@ -3649,41 +2908,6 @@ dependencies = [
  "yaml-rust",
 ]
 
-[[package]]
-name = "instant"
-version = "0.1.12"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "7a5bbe824c507c5da5956355e86a746d82e0e1464f65d862cc5e71da70e94b2c"
-dependencies = [
- "cfg-if 1.0.0",
-]
-
-[[package]]
-name = "integer-sqrt"
-version = "0.1.5"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "276ec31bcb4a9ee45f58bec6f9ec700ae4cf4f4f8f2fa7e06cb406bd5ffdd770"
-dependencies = [
- "num-traits",
-]
-
-[[package]]
-name = "intx"
-version = "0.1.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "f6f38a50a899dc47a6d0ed5508e7f601a2e34c3a85303514b5d137f3c10a0c75"
-
-[[package]]
-name = "io-lifetimes"
-version = "1.0.11"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "eae7b9aee968036d54dce06cebaefd919e4472e753296daccd6d344e3e2df0c2"
-dependencies = [
- "hermit-abi 0.3.3",
- "libc",
- "windows-sys 0.48.0",
-]
-
 [[package]]
 name = "ipnet"
 version = "2.9.0"
@@ -3718,15 +2942,6 @@ dependencies = [
  "either",
 ]
 
-[[package]]
-name = "itertools"
-version = "0.11.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "b1c173a5686ce8bfa551b3563d0c2170bf24ca44da99c7ca4bfdab5418c3fe57"
-dependencies = [
- "either",
-]
-
 [[package]]
 name = "itertools"
 version = "0.12.0"
@@ -3766,7 +2981,7 @@ version = "18.0.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "14f7f76aef2d054868398427f6c54943cf3d1caa9a7ec7d0c38d69df97a965eb"
 dependencies = [
- "futures 0.3.30",
+ "futures 0.3.28",
  "futures-executor",
  "futures-util",
  "log",
@@ -3775,56 +2990,24 @@ dependencies = [
  "serde_json",
 ]
 
-[[package]]
-name = "jsonrpsee"
-version = "0.20.3"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "affdc52f7596ccb2d7645231fc6163bb314630c989b64998f3699a28b4d5d4dc"
-dependencies = [
- "jsonrpsee-client-transport 0.20.3",
- "jsonrpsee-core 0.20.3",
- "jsonrpsee-http-client 0.20.3",
- "jsonrpsee-types 0.20.3",
-]
-
 [[package]]
 name = "jsonrpsee"
 version = "0.21.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "9579d0ca9fb30da026bac2f0f7d9576ec93489aeb7cd4971dd5b4617d82c79b2"
 dependencies = [
- "jsonrpsee-client-transport 0.21.0",
- "jsonrpsee-core 0.21.0",
- "jsonrpsee-http-client 0.21.0",
+ "jsonrpsee-client-transport",
+ "jsonrpsee-core",
+ "jsonrpsee-http-client",
  "jsonrpsee-proc-macros",
  "jsonrpsee-server",
- "jsonrpsee-types 0.21.0",
+ "jsonrpsee-types",
  "jsonrpsee-wasm-client",
  "jsonrpsee-ws-client",
  "tokio",
  "tracing",
 ]
 
-[[package]]
-name = "jsonrpsee-client-transport"
-version = "0.20.3"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "b5b005c793122d03217da09af68ba9383363caa950b90d3436106df8cabce935"
-dependencies = [
- "futures-util",
- "http",
- "jsonrpsee-core 0.20.3",
- "pin-project",
- "rustls-native-certs 0.6.3",
- "soketto",
- "thiserror",
- "tokio",
- "tokio-rustls 0.24.1",
- "tokio-util",
- "tracing",
- "url",
-]
-
 [[package]]
 name = "jsonrpsee-client-transport"
 version = "0.21.0"
@@ -3835,7 +3018,7 @@ dependencies = [
  "futures-util",
  "gloo-net",
  "http",
- "jsonrpsee-core 0.21.0",
+ "jsonrpsee-core",
  "pin-project",
  "rustls-native-certs 0.7.0",
  "rustls-pki-types",
@@ -3849,28 +3032,6 @@ dependencies = [
  "webpki-roots 0.26.0",
 ]
 
-[[package]]
-name = "jsonrpsee-core"
-version = "0.20.3"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "da2327ba8df2fdbd5e897e2b5ed25ce7f299d345b9736b6828814c3dbd1fd47b"
-dependencies = [
- "anyhow",
- "async-lock 2.8.0",
- "async-trait",
- "beef",
- "futures-timer",
- "futures-util",
- "hyper",
- "jsonrpsee-types 0.20.3",
- "rustc-hash",
- "serde",
- "serde_json",
- "thiserror",
- "tokio",
- "tracing",
-]
-
 [[package]]
 name = "jsonrpsee-core"
 version = "0.21.0"
@@ -3878,13 +3039,13 @@ source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "776d009e2f591b78c038e0d053a796f94575d66ca4e77dd84bfc5e81419e436c"
 dependencies = [
  "anyhow",
- "async-lock 3.3.0",
+ "async-lock",
  "async-trait",
  "beef",
  "futures-timer",
  "futures-util",
  "hyper",
- "jsonrpsee-types 0.21.0",
+ "jsonrpsee-types",
  "parking_lot",
  "pin-project",
  "rand 0.8.5",
@@ -3898,26 +3059,6 @@ dependencies = [
  "wasm-bindgen-futures",
 ]
 
-[[package]]
-name = "jsonrpsee-http-client"
-version = "0.20.3"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "5f80c17f62c7653ce767e3d7288b793dfec920f97067ceb189ebdd3570f2bc20"
-dependencies = [
- "async-trait",
- "hyper",
- "hyper-rustls",
- "jsonrpsee-core 0.20.3",
- "jsonrpsee-types 0.20.3",
- "serde",
- "serde_json",
- "thiserror",
- "tokio",
- "tower",
- "tracing",
- "url",
-]
-
 [[package]]
 name = "jsonrpsee-http-client"
 version = "0.21.0"
@@ -3927,8 +3068,8 @@ dependencies = [
  "async-trait",
  "hyper",
  "hyper-rustls",
- "jsonrpsee-core 0.21.0",
- "jsonrpsee-types 0.21.0",
+ "jsonrpsee-core",
+ "jsonrpsee-types",
  "serde",
  "serde_json",
  "thiserror",
@@ -3945,9 +3086,9 @@ source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "d94b7505034e2737e688e1153bf81e6f93ad296695c43958d6da2e4321f0a990"
 dependencies = [
  "heck 0.4.1",
- "proc-macro-crate 2.0.0",
- "proc-macro2 1.0.81",
- "quote 1.0.36",
+ "proc-macro-crate 2.0.1",
+ "proc-macro2 1.0.69",
+ "quote 1.0.33",
  "syn 1.0.109",
 ]
 
@@ -3960,8 +3101,8 @@ dependencies = [
  "futures-util",
  "http",
  "hyper",
- "jsonrpsee-core 0.21.0",
- "jsonrpsee-types 0.21.0",
+ "jsonrpsee-core",
+ "jsonrpsee-types",
  "pin-project",
  "route-recognizer",
  "serde",
@@ -3975,20 +3116,6 @@ dependencies = [
  "tracing",
 ]
 
-[[package]]
-name = "jsonrpsee-types"
-version = "0.20.3"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "5be0be325642e850ed0bdff426674d2e66b2b7117c9be23a7caef68a2902b7d9"
-dependencies = [
- "anyhow",
- "beef",
- "serde",
- "serde_json",
- "thiserror",
- "tracing",
-]
-
 [[package]]
 name = "jsonrpsee-types"
 version = "0.21.0"
@@ -4008,9 +3135,9 @@ version = "0.21.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "30f36d27503d0efc0355c1630b74ecfb367050847bf7241a0ed75fab6dfa96c0"
 dependencies = [
- "jsonrpsee-client-transport 0.21.0",
- "jsonrpsee-core 0.21.0",
- "jsonrpsee-types 0.21.0",
+ "jsonrpsee-client-transport",
+ "jsonrpsee-core",
+ "jsonrpsee-types",
 ]
 
 [[package]]
@@ -4020,9 +3147,9 @@ source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "073c077471e89c4b511fa88b3df9a0f0abdf4a0a2e6683dd2ab36893af87bb2d"
 dependencies = [
  "http",
- "jsonrpsee-client-transport 0.21.0",
- "jsonrpsee-core 0.21.0",
- "jsonrpsee-types 0.21.0",
+ "jsonrpsee-client-transport",
+ "jsonrpsee-core",
+ "jsonrpsee-types",
  "url",
 ]
 
@@ -4054,13 +3181,13 @@ dependencies = [
 
 [[package]]
 name = "k256"
-version = "0.13.3"
+version = "0.13.2"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "956ff9b67e26e1a6a866cb758f12c6f8746208489e3e4a4b5580802f2f0a587b"
+checksum = "3f01b677d82ef7a676aa37e099defd83a28e15687112cafdd112d60236b6115b"
 dependencies = [
  "cfg-if 1.0.0",
  "ecdsa 0.16.9",
- "elliptic-curve 0.13.8",
+ "elliptic-curve 0.13.7",
  "once_cell",
  "sha2 0.10.8",
  "signature 2.2.0",
@@ -4147,54 +3274,6 @@ dependencies = [
  "zstd-sys",
 ]
 
-[[package]]
-name = "libsecp256k1"
-version = "0.7.1"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "95b09eff1b35ed3b33b877ced3a691fc7a481919c7e29c53c906226fcf55e2a1"
-dependencies = [
- "arrayref",
- "base64 0.13.1",
- "digest 0.9.0",
- "hmac-drbg",
- "libsecp256k1-core",
- "libsecp256k1-gen-ecmult",
- "libsecp256k1-gen-genmult",
- "rand 0.8.5",
- "serde",
- "sha2 0.9.9",
- "typenum",
-]
-
-[[package]]
-name = "libsecp256k1-core"
-version = "0.3.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "5be9b9bb642d8522a44d533eab56c16c738301965504753b03ad1de3425d5451"
-dependencies = [
- "crunchy",
- "digest 0.9.0",
- "subtle",
-]
-
-[[package]]
-name = "libsecp256k1-gen-ecmult"
-version = "0.3.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "3038c808c55c87e8a172643a7d87187fc6c4174468159cb3090659d55bcb4809"
-dependencies = [
- "libsecp256k1-core",
-]
-
-[[package]]
-name = "libsecp256k1-gen-genmult"
-version = "0.3.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "3db8d6ba2cec9eacc40e6e8ccc98931840301f1006e95647ceb2dd5c3aa06f7c"
-dependencies = [
- "libsecp256k1-core",
-]
-
 [[package]]
 name = "libsqlite3-sys"
 version = "0.27.0"
@@ -4238,23 +3317,11 @@ version = "0.3.17"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "ba125974b109d512fccbc6c0244e7580143e460895dfd6ea7f8bbb692fd94396"
 dependencies = [
- "proc-macro2 1.0.81",
- "quote 1.0.36",
- "syn 2.0.60",
+ "proc-macro2 1.0.69",
+ "quote 1.0.33",
+ "syn 2.0.38",
 ]
 
-[[package]]
-name = "linux-raw-sys"
-version = "0.1.4"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "f051f77a7c8e6957c0696eac88f26b0117e54f52d3fc682ab19397a8812846a4"
-
-[[package]]
-name = "linux-raw-sys"
-version = "0.3.8"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "ef53942eb7bf7ff43a617b3e2c1c4a5ecf5944a7c1bc12d7ee39bbb15e5c1519"
-
 [[package]]
 name = "linux-raw-sys"
 version = "0.4.10"
@@ -4268,7 +3335,7 @@ dependencies = [
  "anyhow",
  "async-trait",
  "envy",
- "futures 0.3.30",
+ "futures 0.3.28",
  "hex",
  "metrics",
  "num",
@@ -4328,10 +3395,10 @@ checksum = "dc487311295e0002e452025d6b580b77bb17286de87b57138f3b5db711cded68"
 dependencies = [
  "beef",
  "fnv",
- "proc-macro2 1.0.81",
- "quote 1.0.36",
+ "proc-macro2 1.0.69",
+ "quote 1.0.33",
  "regex-syntax 0.6.29",
- "syn 2.0.60",
+ "syn 2.0.38",
 ]
 
 [[package]]
@@ -4343,12 +3410,6 @@ dependencies = [
  "logos-codegen",
 ]
 
-[[package]]
-name = "lru"
-version = "0.10.1"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "718e8fae447df0c7e1ba7f5189829e63fd536945c8988d61444c19039f16b670"
-
 [[package]]
 name = "lru"
 version = "0.12.1"
@@ -4389,15 +3450,6 @@ version = "0.1.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "ffbee8634e0d45d258acb448e7eaab3fce7a0a467395d4d9f228e3c1f01fb2e4"
 
-[[package]]
-name = "matchers"
-version = "0.0.1"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "f099785f7595cc4b4553a174ce30dd7589ef93391ff414dbb67f62392b9e0ce1"
-dependencies = [
- "regex-automata 0.1.10",
-]
-
 [[package]]
 name = "matchers"
 version = "0.1.0"
@@ -4435,15 +3487,6 @@ version = "2.6.4"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "f665ee40bc4a3c5590afb1e9677db74a508659dfd71e126420da8274909a0167"
 
-[[package]]
-name = "memfd"
-version = "0.6.4"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "b2cffa4ad52c6f791f4f8b15f0c05f9824b2ced1160e88cc393d64fff9a8ac64"
-dependencies = [
- "rustix 0.38.20",
-]
-
 [[package]]
 name = "memoffset"
 version = "0.5.6"
@@ -4453,15 +3496,6 @@ dependencies = [
  "autocfg",
 ]
 
-[[package]]
-name = "memoffset"
-version = "0.8.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "d61c719bcfbcf5d62b3a09efa6088de8c54bc0bfcd3ea7ae39fcc186108b8de1"
-dependencies = [
- "autocfg",
-]
-
 [[package]]
 name = "memoffset"
 version = "0.9.0"
@@ -4471,15 +3505,6 @@ dependencies = [
  "autocfg",
 ]
 
-[[package]]
-name = "memory-db"
-version = "0.32.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "808b50db46293432a45e63bc15ea51e0ab4c0a1647b8eb114e31a3e698dd6fbe"
-dependencies = [
- "hash-db",
-]
-
 [[package]]
 name = "merkle_tree_consistency_checker"
 version = "0.1.0"
@@ -4495,30 +3520,6 @@ dependencies = [
  "zksync_types",
 ]
 
-[[package]]
-name = "merlin"
-version = "2.0.1"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "4e261cf0f8b3c42ded9f7d2bb59dea03aa52bc8a1cbc7482f9fc3fd1229d3b42"
-dependencies = [
- "byteorder",
- "keccak",
- "rand_core 0.5.1",
- "zeroize",
-]
-
-[[package]]
-name = "merlin"
-version = "3.0.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "58c38e2799fc0978b65dfff8023ec7843e2330bb462f19198840b34b6582397d"
-dependencies = [
- "byteorder",
- "keccak",
- "rand_core 0.6.4",
- "zeroize",
-]
-
 [[package]]
 name = "metrics"
 version = "0.21.1"
@@ -4554,20 +3555,20 @@ version = "0.7.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "ddece26afd34c31585c74a4db0630c376df271c285d682d1e55012197830b6df"
 dependencies = [
- "proc-macro2 1.0.81",
- "quote 1.0.36",
- "syn 2.0.60",
+ "proc-macro2 1.0.69",
+ "quote 1.0.33",
+ "syn 2.0.38",
 ]
 
 [[package]]
 name = "metrics-util"
-version = "0.15.0"
+version = "0.15.1"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "111cb375987443c3de8d503580b536f77dc8416d32db62d9456db5d93bd7ac47"
+checksum = "4de2ed6e491ed114b40b732e4d1659a9d53992ebd87490c44a6ffe23739d973e"
 dependencies = [
  "crossbeam-epoch 0.9.15",
  "crossbeam-utils 0.8.16",
- "hashbrown 0.13.2",
+ "hashbrown 0.13.1",
  "metrics",
  "num_cpus",
  "quanta 0.11.1",
@@ -4592,9 +3593,9 @@ version = "5.10.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "49e7bc1560b95a3c4a25d03de42fe76ca718ab92d1a22a55b9b4cf67b3ae635c"
 dependencies = [
- "proc-macro2 1.0.81",
- "quote 1.0.36",
- "syn 2.0.60",
+ "proc-macro2 1.0.69",
+ "quote 1.0.33",
+ "syn 2.0.38",
 ]
 
 [[package]]
@@ -4725,24 +3726,12 @@ version = "0.4.1"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "b93853da6d84c2e3c7d730d6473e8817692dd89be387eb01b94d7f108ecb5b8c"
 
-[[package]]
-name = "no-std-net"
-version = "0.6.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "43794a0ace135be66a25d3ae77d41b91615fb68ae937f904090203e81f755b65"
-
 [[package]]
 name = "nodrop"
 version = "0.1.14"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "72ef4a56884ca558e5ddb05a1d1e7e1bfd9a68d9ed024c21704cc98872dae1bb"
 
-[[package]]
-name = "nohash-hasher"
-version = "0.2.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "2bf50223579dc7cdcfb3bfcacf7069ff68243f8c363f62ffa99cf000a6b9c451"
-
 [[package]]
 name = "nom"
 version = "7.1.3"
@@ -4844,16 +3833,6 @@ dependencies = [
  "syn 0.15.44",
 ]
 
-[[package]]
-name = "num-format"
-version = "0.4.4"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "a652d9771a63711fd3c3deb670acfbe5c30a4072e664d7a3bf5a9e1056ac72c3"
-dependencies = [
- "arrayvec 0.7.4",
- "itoa",
-]
-
 [[package]]
 name = "num-integer"
 version = "0.1.45"
@@ -4943,9 +3922,9 @@ source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "96667db765a921f7b295ffee8b60472b686a51d4f21c2ee4ffdb94c7013b65a6"
 dependencies = [
  "proc-macro-crate 1.3.1",
- "proc-macro2 1.0.81",
- "quote 1.0.36",
- "syn 2.0.60",
+ "proc-macro2 1.0.69",
+ "quote 1.0.33",
+ "syn 2.0.38",
 ]
 
 [[package]]
@@ -4954,29 +3933,17 @@ version = "0.7.2"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "681030a937600a36906c185595136d26abfebb4aa9c65701cefcaf8578bb982b"
 dependencies = [
- "proc-macro-crate 3.1.0",
- "proc-macro2 1.0.81",
- "quote 1.0.36",
- "syn 2.0.60",
+ "proc-macro-crate 2.0.1",
+ "proc-macro2 1.0.69",
+ "quote 1.0.33",
+ "syn 2.0.38",
 ]
 
 [[package]]
 name = "object"
-version = "0.30.4"
+version = "0.32.1"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "03b4680b86d9cfafba8fc491dc9b6df26b68cf40e9e6cd73909194759a63c385"
-dependencies = [
- "crc32fast",
- "hashbrown 0.13.2",
- "indexmap 1.9.3",
- "memchr",
-]
-
-[[package]]
-name = "object"
-version = "0.32.1"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "9cf5f9dd3933bd50a9e1f149ec995f39ae2c496d31fd772c1fd45ebc27e902b0"
+checksum = "9cf5f9dd3933bd50a9e1f149ec995f39ae2c496d31fd772c1fd45ebc27e902b0"
 dependencies = [
  "memchr",
 ]
@@ -4993,12 +3960,6 @@ version = "11.1.3"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "0ab1bc2a289d34bd04a330323ac98a1b4bc82c9d9fcb1e66b63caa84da26b575"
 
-[[package]]
-name = "opaque-debug"
-version = "0.2.3"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "2839e79665f131bdb5782e51f2c6c9599c133c6098982a54c794358bf432529c"
-
 [[package]]
 name = "opaque-debug"
 version = "0.3.0"
@@ -5026,9 +3987,9 @@ version = "0.1.1"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "a948666b637a0f465e8564c73e89d4dde00d72d4d473cc972f390fc3dcee7d9c"
 dependencies = [
- "proc-macro2 1.0.81",
- "quote 1.0.36",
- "syn 2.0.60",
+ "proc-macro2 1.0.69",
+ "quote 1.0.33",
+ "syn 2.0.38",
 ]
 
 [[package]]
@@ -5243,14 +4204,13 @@ dependencies = [
 
 [[package]]
 name = "parity-scale-codec"
-version = "3.6.9"
+version = "3.6.5"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "881331e34fa842a2fb61cc2db9643a8fedc615e47cfcc52597d1af0db9a7e8fe"
+checksum = "0dec8a8073036902368c2cdc0387e85ff9a37054d7e7c98e592145e0c92cd4fb"
 dependencies = [
  "arrayvec 0.7.4",
  "bitvec",
  "byte-slice-cast",
- "bytes",
  "impl-trait-for-tuples",
  "parity-scale-codec-derive",
  "serde",
@@ -5258,13 +4218,13 @@ dependencies = [
 
 [[package]]
 name = "parity-scale-codec-derive"
-version = "3.6.9"
+version = "3.6.5"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "be30eaf4b0a9fba5336683b38de57bb86d179a35862ba6bfcf57625d006bde5b"
+checksum = "312270ee71e1cd70289dacf597cab7b207aa107d2f28191c2ae45b2ece18a260"
 dependencies = [
- "proc-macro-crate 2.0.0",
- "proc-macro2 1.0.81",
- "quote 1.0.36",
+ "proc-macro-crate 1.3.1",
+ "proc-macro2 1.0.69",
+ "quote 1.0.33",
  "syn 1.0.109",
 ]
 
@@ -5303,33 +4263,6 @@ version = "1.0.14"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "de3145af08024dea9fa9914f381a17b8fc6034dfb00f3a84013f7ff43f29ed4c"
 
-[[package]]
-name = "pbkdf2"
-version = "0.8.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "d95f5254224e617595d2cc3cc73ff0a5eaf2637519e25f03388154e9378b6ffa"
-dependencies = [
- "crypto-mac 0.11.0",
-]
-
-[[package]]
-name = "pbkdf2"
-version = "0.11.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "83a0692ec44e4cf1ef28ca317f14f8f07da2d95ec3fa01f86e4467b725e60917"
-dependencies = [
- "digest 0.10.7",
-]
-
-[[package]]
-name = "pbkdf2"
-version = "0.12.2"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "f8ed6a7761f76e3b9f92dfb0a60a6a6477c61024b775147ff0973a02653abaf2"
-dependencies = [
- "digest 0.10.7",
-]
-
 [[package]]
 name = "peeking_take_while"
 version = "0.1.2"
@@ -5356,9 +4289,9 @@ dependencies = [
 
 [[package]]
 name = "percent-encoding"
-version = "2.3.1"
+version = "2.3.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "e3148f5046208a5d56bcfc03053e3ca6334e51da8dfb19b6cdc8b306fae3283e"
+checksum = "9b2a4787296e9989611394c33f193f676704af1686e70b8f8033ab5ba9a35a94"
 
 [[package]]
 name = "pest"
@@ -5389,9 +4322,9 @@ checksum = "2a31940305ffc96863a735bef7c7994a00b325a7138fdbc5bda0f1a0476d3275"
 dependencies = [
  "pest",
  "pest_meta",
- "proc-macro2 1.0.81",
- "quote 1.0.36",
- "syn 2.0.60",
+ "proc-macro2 1.0.69",
+ "quote 1.0.33",
+ "syn 2.0.38",
 ]
 
 [[package]]
@@ -5430,9 +4363,9 @@ version = "1.1.3"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "4359fd9c9171ec6e8c62926d6faaf553a8dc3f64e1507e76da7911b4f6a04405"
 dependencies = [
- "proc-macro2 1.0.81",
- "quote 1.0.36",
- "syn 2.0.60",
+ "proc-macro2 1.0.69",
+ "quote 1.0.33",
+ "syn 2.0.38",
 ]
 
 [[package]]
@@ -5447,17 +4380,6 @@ version = "0.1.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "8b870d8c151b6f2fb93e84a13146138f05d02ed11c7e7c54f8826aaaf7c9f184"
 
-[[package]]
-name = "piper"
-version = "0.2.1"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "668d31b1c4eba19242f2088b2bf3316b82ca31082a8335764db4e083db7485d4"
-dependencies = [
- "atomic-waker",
- "fastrand 2.0.1",
- "futures-io",
-]
-
 [[package]]
 name = "pkcs1"
 version = "0.7.5"
@@ -5529,36 +4451,6 @@ dependencies = [
  "plotters-backend",
 ]
 
-[[package]]
-name = "polling"
-version = "2.8.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "4b2d323e8ca7996b3e23126511a523f7e62924d93ecd5ae73b333815b0eb3dce"
-dependencies = [
- "autocfg",
- "bitflags 1.3.2",
- "cfg-if 1.0.0",
- "concurrent-queue",
- "libc",
- "log",
- "pin-project-lite",
- "windows-sys 0.48.0",
-]
-
-[[package]]
-name = "polling"
-version = "3.4.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "30054e72317ab98eddd8561db0f6524df3367636884b7b21b703e4b280a84a14"
-dependencies = [
- "cfg-if 1.0.0",
- "concurrent-queue",
- "pin-project-lite",
- "rustix 0.38.20",
- "tracing",
- "windows-sys 0.52.0",
-]
-
 [[package]]
 name = "poly1305"
 version = "0.8.0"
@@ -5566,7 +4458,7 @@ source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "8159bd90725d2df49889a078b54f4f79e87f1f8a8444194cdca81d38f5393abf"
 dependencies = [
  "cpufeatures",
- "opaque-debug 0.3.0",
+ "opaque-debug",
  "universal-hash",
 ]
 
@@ -5578,7 +4470,7 @@ checksum = "d52cff9d1d4dee5fe6d03729099f4a310a41179e0a10dbf542039873f2e826fb"
 dependencies = [
  "cfg-if 1.0.0",
  "cpufeatures",
- "opaque-debug 0.3.0",
+ "opaque-debug",
  "universal-hash",
 ]
 
@@ -5616,8 +4508,8 @@ version = "0.2.15"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "ae005bd773ab59b4725093fd7df83fd7892f7d8eafb48dbd7de6e024e4215f9d"
 dependencies = [
- "proc-macro2 1.0.81",
- "syn 2.0.60",
+ "proc-macro2 1.0.69",
+ "syn 2.0.38",
 ]
 
 [[package]]
@@ -5630,7 +4522,6 @@ dependencies = [
  "impl-codec",
  "impl-rlp",
  "impl-serde",
- "scale-info",
  "uint",
 ]
 
@@ -5646,22 +4537,14 @@ dependencies = [
 
 [[package]]
 name = "proc-macro-crate"
-version = "2.0.0"
+version = "2.0.1"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "7e8366a6159044a37876a2b9817124296703c586a5c92e2c53751fa06d8d43e8"
+checksum = "97dc5fea232fc28d2f597b37c4876b348a40e33f3b02cc975c8d006d78d94b1a"
 dependencies = [
+ "toml_datetime",
  "toml_edit 0.20.2",
 ]
 
-[[package]]
-name = "proc-macro-crate"
-version = "3.1.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "6d37c51ca738a55da99dc0c4a34860fd675453b8b36209178c2249bb13651284"
-dependencies = [
- "toml_edit 0.21.1",
-]
-
 [[package]]
 name = "proc-macro-error"
 version = "1.0.4"
@@ -5669,8 +4552,8 @@ source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "da25490ff9892aab3fcf7c36f08cfb902dd3e71ca0f9f9517bea02a73a5ce38c"
 dependencies = [
  "proc-macro-error-attr",
- "proc-macro2 1.0.81",
- "quote 1.0.36",
+ "proc-macro2 1.0.69",
+ "quote 1.0.33",
  "syn 1.0.109",
  "version_check",
 ]
@@ -5681,8 +4564,8 @@ version = "1.0.4"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "a1be40180e52ecc98ad80b184934baf3d0d29f979574e439af5a55274b35f869"
 dependencies = [
- "proc-macro2 1.0.81",
- "quote 1.0.36",
+ "proc-macro2 1.0.69",
+ "quote 1.0.33",
  "version_check",
 ]
 
@@ -5703,9 +4586,9 @@ dependencies = [
 
 [[package]]
 name = "proc-macro2"
-version = "1.0.81"
+version = "1.0.69"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "3d1597b0c024618f09a9c3b8655b7e430397a36d23fdafec26d6965e9eec3eba"
+checksum = "134c189feb4956b20f6f547d2cf727d4c0fe06722b20a0eec87ed445a97f92da"
 dependencies = [
  "unicode-ident",
 ]
@@ -5728,9 +4611,9 @@ version = "0.4.2"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "440f724eba9f6996b75d63681b0a92b06947f1457076d503a4d2e2c8f56442b8"
 dependencies = [
- "proc-macro2 1.0.81",
- "quote 1.0.36",
- "syn 2.0.60",
+ "proc-macro2 1.0.69",
+ "quote 1.0.33",
+ "syn 2.0.38",
 ]
 
 [[package]]
@@ -5773,7 +4656,7 @@ checksum = "8bdf592881d821b83d471f8af290226c8d51402259e9bb5be7f9f8bdebbb11ac"
 dependencies = [
  "bytes",
  "heck 0.4.1",
- "itertools 0.11.0",
+ "itertools 0.10.5",
  "log",
  "multimap",
  "once_cell",
@@ -5782,7 +4665,7 @@ dependencies = [
  "prost 0.12.1",
  "prost-types",
  "regex",
- "syn 2.0.60",
+ "syn 2.0.38",
  "tempfile",
  "which",
 ]
@@ -5795,8 +4678,8 @@ checksum = "e5d2d8d10f3c6ded6da8b05b5fb3b8a5082514344d56c9f871412d29b4e075b4"
 dependencies = [
  "anyhow",
  "itertools 0.10.5",
- "proc-macro2 1.0.81",
- "quote 1.0.36",
+ "proc-macro2 1.0.69",
+ "quote 1.0.33",
  "syn 1.0.109",
 ]
 
@@ -5807,10 +4690,10 @@ source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "265baba7fabd416cf5078179f7d2cbeca4ce7a9041111900675ea7c4cb8a4c32"
 dependencies = [
  "anyhow",
- "itertools 0.11.0",
- "proc-macro2 1.0.81",
- "quote 1.0.36",
- "syn 2.0.60",
+ "itertools 0.10.5",
+ "proc-macro2 1.0.69",
+ "quote 1.0.33",
+ "syn 2.0.38",
 ]
 
 [[package]]
@@ -5875,15 +4758,6 @@ dependencies = [
  "zksync_db_connection",
 ]
 
-[[package]]
-name = "psm"
-version = "0.1.21"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "5787f7cda34e3033a72192c018bc5883100330f362ef279a8cbccfce8bb4e874"
-dependencies = [
- "cc",
-]
-
 [[package]]
 name = "ptr_meta"
 version = "0.1.4"
@@ -5899,8 +4773,8 @@ version = "0.1.4"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "16b845dbfca988fa33db069c0e230574d15a3088f147a87b64c7589eb662c9ac"
 dependencies = [
- "proc-macro2 1.0.81",
- "quote 1.0.36",
+ "proc-macro2 1.0.69",
+ "quote 1.0.33",
  "syn 1.0.109",
 ]
 
@@ -5967,11 +4841,11 @@ dependencies = [
 
 [[package]]
 name = "quote"
-version = "1.0.36"
+version = "1.0.33"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "0fa76aaf39101c457836aec0ce2316dbdc3ab723cdda1c6bd4e6ad4208acaca7"
+checksum = "5267fca4496028628a95160fc423a33e8b2e6af8a5302579e322e4b520293cae"
 dependencies = [
- "proc-macro2 1.0.81",
+ "proc-macro2 1.0.69",
 ]
 
 [[package]]
@@ -5993,19 +4867,6 @@ dependencies = [
  "winapi",
 ]
 
-[[package]]
-name = "rand"
-version = "0.7.3"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "6a6b1679d49b24bbfe0c803429aa1874472f50d9b363131f0e89fc356b544d03"
-dependencies = [
- "getrandom 0.1.16",
- "libc",
- "rand_chacha 0.2.2",
- "rand_core 0.5.1",
- "rand_hc",
-]
-
 [[package]]
 name = "rand"
 version = "0.8.5"
@@ -6013,20 +4874,10 @@ source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "34af8d1a0e25924bc5b7c43c079c942339d8f0a8b57c39049bef581b46327404"
 dependencies = [
  "libc",
- "rand_chacha 0.3.1",
+ "rand_chacha",
  "rand_core 0.6.4",
 ]
 
-[[package]]
-name = "rand_chacha"
-version = "0.2.2"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "f4c8ed856279c9737206bf725bf36935d8666ead7aa69b52be55af369d193402"
-dependencies = [
- "ppv-lite86",
- "rand_core 0.5.1",
-]
-
 [[package]]
 name = "rand_chacha"
 version = "0.3.1"
@@ -6052,31 +4903,13 @@ version = "0.4.2"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "9c33a3c44ca05fa6f1807d8e6743f3824e8509beca625669633be0acbdf509dc"
 
-[[package]]
-name = "rand_core"
-version = "0.5.1"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "90bde5296fc891b0cef12a6d03ddccc162ce7b2aff54160af9338f8d40df6d19"
-dependencies = [
- "getrandom 0.1.16",
-]
-
 [[package]]
 name = "rand_core"
 version = "0.6.4"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "ec0be4795e2f6a28069bec0b5ff3e2ac9bafc99e6a9a7dc3547996c5c816922c"
 dependencies = [
- "getrandom 0.2.10",
-]
-
-[[package]]
-name = "rand_hc"
-version = "0.2.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "ca3129af7b92a17112d59ad498c6f81eaf463253766b90396d39ea7a39d6613c"
-dependencies = [
- "rand_core 0.5.1",
+ "getrandom",
 ]
 
 [[package]]
@@ -6144,35 +4977,15 @@ dependencies = [
  "bitflags 1.3.2",
 ]
 
-[[package]]
-name = "ref-cast"
-version = "1.0.21"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "53313ec9f12686aeeffb43462c3ac77aa25f590a5f630eb2cde0de59417b29c7"
-dependencies = [
- "ref-cast-impl",
-]
-
-[[package]]
-name = "ref-cast-impl"
-version = "1.0.21"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "2566c4bf6845f2c2e83b27043c3f5dfcd5ba8f2937d6c00dc009bfb51a079dc4"
-dependencies = [
- "proc-macro2 1.0.81",
- "quote 1.0.36",
- "syn 2.0.60",
-]
-
 [[package]]
 name = "regex"
-version = "1.10.4"
+version = "1.10.2"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "c117dbdfde9c8308975b6a18d71f3f385c89461f7b3fb054288ecf2a2058ba4c"
+checksum = "380b951a9c5e80ddfd6136919eef32310721aa4aacd4889a8d39124b026ab343"
 dependencies = [
  "aho-corasick",
  "memchr",
- "regex-automata 0.4.6",
+ "regex-automata 0.4.3",
  "regex-syntax 0.8.2",
 ]
 
@@ -6187,9 +5000,9 @@ dependencies = [
 
 [[package]]
 name = "regex-automata"
-version = "0.4.6"
+version = "0.4.3"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "86b83b8b9847f9bf95ef68afb0b8e6cdb80f498442f5179a29fad448fcc1eaea"
+checksum = "5f804c7828047e88b2d32e2d7fe5a105da8ee3264f01902f796c8e067dc2483f"
 dependencies = [
  "aho-corasick",
  "memchr",
@@ -6299,7 +5112,7 @@ source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "7743f17af12fa0b03b803ba12cd6a8d9483a587e89c69445e3909655c0b9fabb"
 dependencies = [
  "crypto-bigint 0.4.9",
- "hmac 0.12.1",
+ "hmac",
  "zeroize",
 ]
 
@@ -6309,7 +5122,7 @@ version = "0.4.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "f8dd2a808d456c4a54e300a23e9f5a67e122c3024119acbfd73e3bf664491cb2"
 dependencies = [
- "hmac 0.12.1",
+ "hmac",
  "subtle",
 ]
 
@@ -6335,7 +5148,7 @@ source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "688c63d65483050968b2a8937f7995f443e27041a0f7700aa59b0822aedebb74"
 dependencies = [
  "cc",
- "getrandom 0.2.10",
+ "getrandom",
  "libc",
  "spin 0.9.8",
  "untrusted 0.9.0",
@@ -6366,8 +5179,8 @@ version = "0.7.43"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "b5c462a1328c8e67e4d6dbad1eb0355dd43e8ab432c6e227a43657f16ade5033"
 dependencies = [
- "proc-macro2 1.0.81",
- "quote 1.0.36",
+ "proc-macro2 1.0.69",
+ "quote 1.0.33",
  "syn 1.0.109",
 ]
 
@@ -6460,34 +5273,6 @@ dependencies = [
  "semver",
 ]
 
-[[package]]
-name = "rustix"
-version = "0.36.17"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "305efbd14fde4139eb501df5f136994bb520b033fa9fbdce287507dc23b8c7ed"
-dependencies = [
- "bitflags 1.3.2",
- "errno",
- "io-lifetimes",
- "libc",
- "linux-raw-sys 0.1.4",
- "windows-sys 0.45.0",
-]
-
-[[package]]
-name = "rustix"
-version = "0.37.27"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "fea8ca367a3a01fe35e6943c400addf443c0f57670e6ec51196f71a4b8762dd2"
-dependencies = [
- "bitflags 1.3.2",
- "errno",
- "io-lifetimes",
- "libc",
- "linux-raw-sys 0.3.8",
- "windows-sys 0.48.0",
-]
-
 [[package]]
 name = "rustix"
 version = "0.38.20"
@@ -6497,7 +5282,7 @@ dependencies = [
  "bitflags 2.4.1",
  "errno",
  "libc",
- "linux-raw-sys 0.4.10",
+ "linux-raw-sys",
  "windows-sys 0.48.0",
 ]
 
@@ -6604,17 +5389,6 @@ version = "1.0.14"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "7ffc183a10b4478d04cbbbfc96d0873219d962dd5accaff2ffbd4ceb7df837f4"
 
-[[package]]
-name = "ruzstd"
-version = "0.4.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "ac3ffab8f9715a0d455df4bbb9d21e91135aab3cd3ca187af0cd0c3c3f868fdc"
-dependencies = [
- "byteorder",
- "thiserror-core",
- "twox-hash",
-]
-
 [[package]]
 name = "ryu"
 version = "1.0.15"
@@ -6631,315 +5405,112 @@ dependencies = [
 ]
 
 [[package]]
-name = "scale-bits"
-version = "0.4.0"
+name = "schannel"
+version = "0.1.22"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "036575c29af9b6e4866ffb7fa055dbf623fe7a9cc159b33786de6013a6969d89"
+checksum = "0c3733bf4cf7ea0880754e19cb5a462007c4a8c1914bff372ccc95b464f1df88"
 dependencies = [
- "parity-scale-codec",
- "scale-info",
- "serde",
+ "windows-sys 0.48.0",
 ]
 
 [[package]]
-name = "scale-decode"
-version = "0.9.0"
+name = "scopeguard"
+version = "1.2.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "7789f5728e4e954aaa20cadcc370b99096fb8645fca3c9333ace44bb18f30095"
-dependencies = [
- "derive_more",
- "parity-scale-codec",
- "primitive-types",
- "scale-bits",
- "scale-decode-derive",
- "scale-info",
- "smallvec",
-]
+checksum = "94143f37725109f92c262ed2cf5e59bce7498c01bcc1502d7b9afe439a4e9f49"
 
 [[package]]
-name = "scale-decode-derive"
-version = "0.9.0"
+name = "sct"
+version = "0.7.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "27873eb6005868f8cc72dcfe109fae664cf51223d35387bc2f28be4c28d94c47"
+checksum = "d53dcdb7c9f8158937a7981b48accfd39a43af418591a5d008c7b22b5e1b7ca4"
 dependencies = [
- "darling 0.14.4",
- "proc-macro-crate 1.3.1",
- "proc-macro2 1.0.81",
- "quote 1.0.36",
- "syn 1.0.109",
+ "ring 0.16.20",
+ "untrusted 0.7.1",
 ]
 
 [[package]]
-name = "scale-encode"
-version = "0.5.0"
+name = "seahash"
+version = "4.1.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "6d70cb4b29360105483fac1ed567ff95d65224a14dd275b6303ed0a654c78de5"
-dependencies = [
- "derive_more",
- "parity-scale-codec",
- "primitive-types",
- "scale-bits",
- "scale-encode-derive",
- "scale-info",
- "smallvec",
-]
+checksum = "1c107b6f4780854c8b126e228ea8869f4d7b71260f962fefb57b996b8959ba6b"
 
 [[package]]
-name = "scale-encode-derive"
-version = "0.5.0"
+name = "sec1"
+version = "0.3.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "995491f110efdc6bea96d6a746140e32bfceb4ea47510750a5467295a4707a25"
+checksum = "3be24c1842290c45df0a7bf069e0c268a747ad05a192f2fd7dcfdbc1cba40928"
 dependencies = [
- "darling 0.14.4",
- "proc-macro-crate 1.3.1",
- "proc-macro2 1.0.81",
- "quote 1.0.36",
- "syn 1.0.109",
+ "base16ct 0.1.1",
+ "der 0.6.1",
+ "generic-array",
+ "pkcs8 0.9.0",
+ "subtle",
+ "zeroize",
 ]
 
 [[package]]
-name = "scale-info"
-version = "2.11.2"
+name = "sec1"
+version = "0.7.3"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "7c453e59a955f81fb62ee5d596b450383d699f152d350e9d23a0db2adb78e4c0"
+checksum = "d3e97a565f76233a6003f9f5c54be1d9c5bdfa3eccfb189469f11ec4901c47dc"
 dependencies = [
- "bitvec",
- "cfg-if 1.0.0",
- "derive_more",
- "parity-scale-codec",
- "scale-info-derive",
- "serde",
+ "base16ct 0.2.0",
+ "der 0.7.8",
+ "generic-array",
+ "pkcs8 0.10.2",
+ "subtle",
+ "zeroize",
 ]
 
 [[package]]
-name = "scale-info-derive"
-version = "2.11.2"
+name = "secp256k1"
+version = "0.27.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "18cf6c6447f813ef19eb450e985bcce6705f9ce7660db221b59093d15c79c4b7"
+checksum = "25996b82292a7a57ed3508f052cfff8640d38d32018784acd714758b43da9c8f"
 dependencies = [
- "proc-macro-crate 1.3.1",
- "proc-macro2 1.0.81",
- "quote 1.0.36",
- "syn 1.0.109",
+ "secp256k1-sys",
 ]
 
 [[package]]
-name = "scale-value"
-version = "0.12.0"
+name = "secp256k1-sys"
+version = "0.8.1"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "6538d1cc1af9c0baf401c57da8a6d4730ef582db0d330d2efa56ec946b5b0283"
+checksum = "70a129b9e9efbfb223753b9163c4ab3b13cff7fd9c7f010fbac25ab4099fa07e"
 dependencies = [
- "base58",
- "blake2 0.10.6 (registry+https://github.com/rust-lang/crates.io-index)",
- "derive_more",
- "either",
- "frame-metadata 15.1.0",
- "parity-scale-codec",
- "scale-bits",
- "scale-decode",
- "scale-encode",
- "scale-info",
- "serde",
- "yap",
+ "cc",
 ]
 
 [[package]]
-name = "schannel"
-version = "0.1.22"
+name = "security-framework"
+version = "2.9.2"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "0c3733bf4cf7ea0880754e19cb5a462007c4a8c1914bff372ccc95b464f1df88"
+checksum = "05b64fb303737d99b81884b2c63433e9ae28abebe5eb5045dcdd175dc2ecf4de"
 dependencies = [
- "windows-sys 0.48.0",
+ "bitflags 1.3.2",
+ "core-foundation",
+ "core-foundation-sys",
+ "libc",
+ "security-framework-sys",
 ]
 
 [[package]]
-name = "schnellru"
-version = "0.2.1"
+name = "security-framework-sys"
+version = "2.9.1"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "772575a524feeb803e5b0fcbc6dd9f367e579488197c94c6e4023aad2305774d"
+checksum = "e932934257d3b408ed8f30db49d85ea163bfe74961f017f405b025af298f0c7a"
 dependencies = [
- "ahash 0.8.7",
- "cfg-if 1.0.0",
- "hashbrown 0.13.2",
+ "core-foundation-sys",
+ "libc",
 ]
 
 [[package]]
-name = "schnorrkel"
-version = "0.9.1"
+name = "semver"
+version = "1.0.20"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "021b403afe70d81eea68f6ea12f6b3c9588e5d536a94c3bf80f15e7faa267862"
+checksum = "836fa6a3e1e547f9a2c4040802ec865b5d85f4014efe00555d7090a3dcaa1090"
 dependencies = [
- "arrayref",
- "arrayvec 0.5.2",
- "curve25519-dalek 2.1.3",
- "getrandom 0.1.16",
- "merlin 2.0.1",
- "rand 0.7.3",
- "rand_core 0.5.1",
- "sha2 0.8.2",
- "subtle",
- "zeroize",
-]
-
-[[package]]
-name = "schnorrkel"
-version = "0.10.2"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "844b7645371e6ecdf61ff246ba1958c29e802881a749ae3fb1993675d210d28d"
-dependencies = [
- "arrayref",
- "arrayvec 0.7.4",
- "curve25519-dalek-ng",
- "merlin 3.0.0",
- "rand_core 0.6.4",
- "serde_bytes",
- "sha2 0.9.9",
- "subtle-ng",
- "zeroize",
-]
-
-[[package]]
-name = "schnorrkel"
-version = "0.11.4"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "8de18f6d8ba0aad7045f5feae07ec29899c1112584a38509a84ad7b04451eaa0"
-dependencies = [
- "arrayref",
- "arrayvec 0.7.4",
- "curve25519-dalek 4.1.1",
- "getrandom_or_panic",
- "merlin 3.0.0",
- "rand_core 0.6.4",
- "sha2 0.10.8",
- "subtle",
- "zeroize",
-]
-
-[[package]]
-name = "scopeguard"
-version = "1.2.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "94143f37725109f92c262ed2cf5e59bce7498c01bcc1502d7b9afe439a4e9f49"
-
-[[package]]
-name = "sct"
-version = "0.7.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "d53dcdb7c9f8158937a7981b48accfd39a43af418591a5d008c7b22b5e1b7ca4"
-dependencies = [
- "ring 0.16.20",
- "untrusted 0.7.1",
-]
-
-[[package]]
-name = "seahash"
-version = "4.1.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "1c107b6f4780854c8b126e228ea8869f4d7b71260f962fefb57b996b8959ba6b"
-
-[[package]]
-name = "sec1"
-version = "0.3.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "3be24c1842290c45df0a7bf069e0c268a747ad05a192f2fd7dcfdbc1cba40928"
-dependencies = [
- "base16ct 0.1.1",
- "der 0.6.1",
- "generic-array 0.14.7",
- "pkcs8 0.9.0",
- "subtle",
- "zeroize",
-]
-
-[[package]]
-name = "sec1"
-version = "0.7.3"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "d3e97a565f76233a6003f9f5c54be1d9c5bdfa3eccfb189469f11ec4901c47dc"
-dependencies = [
- "base16ct 0.2.0",
- "der 0.7.8",
- "generic-array 0.14.7",
- "pkcs8 0.10.2",
- "subtle",
- "zeroize",
-]
-
-[[package]]
-name = "secp256k1"
-version = "0.24.3"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "6b1629c9c557ef9b293568b338dddfc8208c98a18c59d722a9d53f859d9c9b62"
-dependencies = [
- "secp256k1-sys 0.6.1",
-]
-
-[[package]]
-name = "secp256k1"
-version = "0.27.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "25996b82292a7a57ed3508f052cfff8640d38d32018784acd714758b43da9c8f"
-dependencies = [
- "secp256k1-sys 0.8.1",
-]
-
-[[package]]
-name = "secp256k1-sys"
-version = "0.6.1"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "83080e2c2fc1006e625be82e5d1eb6a43b7fd9578b617fcc55814daf286bba4b"
-dependencies = [
- "cc",
-]
-
-[[package]]
-name = "secp256k1-sys"
-version = "0.8.1"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "70a129b9e9efbfb223753b9163c4ab3b13cff7fd9c7f010fbac25ab4099fa07e"
-dependencies = [
- "cc",
-]
-
-[[package]]
-name = "secrecy"
-version = "0.8.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "9bd1c54ea06cfd2f6b63219704de0b9b4f72dcc2b8fdef820be6cd799780e91e"
-dependencies = [
- "zeroize",
-]
-
-[[package]]
-name = "security-framework"
-version = "2.9.2"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "05b64fb303737d99b81884b2c63433e9ae28abebe5eb5045dcdd175dc2ecf4de"
-dependencies = [
- "bitflags 1.3.2",
- "core-foundation",
- "core-foundation-sys",
- "libc",
- "security-framework-sys",
-]
-
-[[package]]
-name = "security-framework-sys"
-version = "2.9.1"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "e932934257d3b408ed8f30db49d85ea163bfe74961f017f405b025af298f0c7a"
-dependencies = [
- "core-foundation-sys",
- "libc",
-]
-
-[[package]]
-name = "semver"
-version = "1.0.20"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "836fa6a3e1e547f9a2c4040802ec865b5d85f4014efe00555d7090a3dcaa1090"
-dependencies = [
- "serde",
+ "serde",
 ]
 
 [[package]]
@@ -7036,7 +5607,7 @@ dependencies = [
  "sentry-backtrace",
  "sentry-core",
  "tracing-core",
- "tracing-subscriber 0.3.17",
+ "tracing-subscriber",
 ]
 
 [[package]]
@@ -7064,9 +5635,9 @@ checksum = "a3f0bf26fd526d2a95683cd0f87bf103b8539e2ca1ef48ce002d67aad59aa0b4"
 
 [[package]]
 name = "serde"
-version = "1.0.198"
+version = "1.0.189"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "9846a40c979031340571da2545a4e5b7c4163bdae79b301d5f86d03979451fcc"
+checksum = "8e422a44e74ad4001bdc8eede9a4570ab52f71190e9c076d14369f38b9200537"
 dependencies = [
  "serde_derive",
 ]
@@ -7081,31 +5652,22 @@ dependencies = [
  "serde",
 ]
 
-[[package]]
-name = "serde_bytes"
-version = "0.11.14"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "8b8497c313fd43ab992087548117643f6fcd935cbf36f176ffda0aacf9591734"
-dependencies = [
- "serde",
-]
-
 [[package]]
 name = "serde_derive"
-version = "1.0.198"
+version = "1.0.189"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "e88edab869b01783ba905e7d0153f9fc1a6505a96e4ad3018011eedb838566d9"
+checksum = "1e48d1f918009ce3145511378cf68d613e3b3d9137d67272562080d68a2b32d5"
 dependencies = [
- "proc-macro2 1.0.81",
- "quote 1.0.36",
- "syn 2.0.60",
+ "proc-macro2 1.0.69",
+ "quote 1.0.33",
+ "syn 2.0.38",
 ]
 
 [[package]]
 name = "serde_json"
-version = "1.0.116"
+version = "1.0.107"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "3e17db7126d17feb94eb3fad46bf1a96b034e8aacbc2e775fe81505f8b0b2813"
+checksum = "6b420ce6e3d8bd882e9b243c6eed35dbc9a6110c9769e74b584e0d68d1f20c65"
 dependencies = [
  "itoa",
  "ryu",
@@ -7152,9 +5714,9 @@ version = "1.5.2"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "e182d6ec6f05393cc0e5ed1bf81ad6db3a8feedf8ee515ecdd369809bcce8082"
 dependencies = [
- "darling 0.13.4",
- "proc-macro2 1.0.81",
- "quote 1.0.36",
+ "darling",
+ "proc-macro2 1.0.69",
+ "quote 1.0.33",
  "syn 1.0.109",
 ]
 
@@ -7181,7 +5743,7 @@ dependencies = [
  "cfg-if 1.0.0",
  "cpufeatures",
  "digest 0.9.0",
- "opaque-debug 0.3.0",
+ "opaque-debug",
 ]
 
 [[package]]
@@ -7195,18 +5757,6 @@ dependencies = [
  "digest 0.10.7",
 ]
 
-[[package]]
-name = "sha2"
-version = "0.8.2"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "a256f46ea78a0c0d9ff00077504903ac881a1dafdc20da66545699e7776b3e69"
-dependencies = [
- "block-buffer 0.7.3",
- "digest 0.8.1",
- "fake-simd",
- "opaque-debug 0.2.3",
-]
-
 [[package]]
 name = "sha2"
 version = "0.9.9"
@@ -7217,7 +5767,7 @@ dependencies = [
  "cfg-if 1.0.0",
  "cpufeatures",
  "digest 0.9.0",
- "opaque-debug 0.3.0",
+ "opaque-debug",
 ]
 
 [[package]]
@@ -7250,7 +5800,7 @@ dependencies = [
  "block-buffer 0.9.0",
  "digest 0.9.0",
  "keccak",
- "opaque-debug 0.3.0",
+ "opaque-debug",
 ]
 
 [[package]]
@@ -7340,12 +5890,6 @@ dependencies = [
  "time",
 ]
 
-[[package]]
-name = "siphasher"
-version = "0.3.11"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "38b58827f4464d87d377d175e90bf58eb00fd8716ff0a62f80356b5e61555d0d"
-
 [[package]]
 name = "sized-chunks"
 version = "0.6.5"
@@ -7395,110 +5939,12 @@ dependencies = [
  "serde",
 ]
 
-[[package]]
-name = "smol"
-version = "1.3.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "13f2b548cd8447f8de0fdf1c592929f70f4fc7039a05e47404b0d096ec6987a1"
-dependencies = [
- "async-channel 1.9.0",
- "async-executor",
- "async-fs",
- "async-io 1.13.0",
- "async-lock 2.8.0",
- "async-net",
- "async-process",
- "blocking",
- "futures-lite 1.13.0",
-]
-
-[[package]]
-name = "smoldot"
-version = "0.8.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "1cce5e2881b30bad7ef89f383a816ad0b22c45915911f28499026de4a76d20ee"
-dependencies = [
- "arrayvec 0.7.4",
- "async-lock 2.8.0",
- "atomic",
- "base64 0.21.5",
- "bip39",
- "blake2-rfc",
- "bs58 0.5.1",
- "crossbeam-queue 0.3.8",
- "derive_more",
- "ed25519-zebra",
- "either",
- "event-listener 2.5.3",
- "fnv",
- "futures-channel",
- "futures-util",
- "hashbrown 0.14.3",
- "hex",
- "hmac 0.12.1",
- "itertools 0.10.5",
- "libsecp256k1",
- "merlin 3.0.0",
- "no-std-net",
- "nom",
- "num-bigint 0.4.4",
- "num-rational",
- "num-traits",
- "pbkdf2 0.12.2",
- "pin-project",
- "rand 0.8.5",
- "rand_chacha 0.3.1",
- "ruzstd",
- "schnorrkel 0.10.2",
- "serde",
- "serde_json",
- "sha2 0.10.8",
- "siphasher",
- "slab",
- "smallvec",
- "smol",
- "snow",
- "soketto",
- "tiny-keccak 2.0.2",
- "twox-hash",
- "wasmi",
-]
-
-[[package]]
-name = "smoldot-light"
-version = "0.6.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "4b2f7b4687b83ff244ef6137735ed5716ad37dcdf3ee16c4eb1a32fb9808fa47"
-dependencies = [
- "async-lock 2.8.0",
- "blake2-rfc",
- "derive_more",
- "either",
- "event-listener 2.5.3",
- "fnv",
- "futures-channel",
- "futures-util",
- "hashbrown 0.14.3",
- "hex",
- "itertools 0.10.5",
- "log",
- "lru 0.10.1",
- "parking_lot",
- "rand 0.8.5",
- "serde",
- "serde_json",
- "siphasher",
- "slab",
- "smol",
- "smoldot",
-]
-
 [[package]]
 name = "snapshots_creator"
 version = "0.1.0"
 dependencies = [
  "anyhow",
- "futures 0.3.30",
+ "futures 0.3.28",
  "prometheus_exporter",
  "rand 0.8.5",
  "tokio",
@@ -7521,7 +5967,7 @@ dependencies = [
  "aes-gcm",
  "blake2 0.10.6 (registry+https://github.com/rust-lang/crates.io-index)",
  "chacha20poly1305",
- "curve25519-dalek 4.1.1",
+ "curve25519-dalek",
  "rand_core 0.6.4",
  "rustc_version",
  "sha2 0.10.8",
@@ -7556,7 +6002,7 @@ checksum = "41d1c5305e39e09653383c2c7244f2f78b3bcae37cf50c64cb4789c9f5096ec2"
 dependencies = [
  "base64 0.13.1",
  "bytes",
- "futures 0.3.30",
+ "futures 0.3.28",
  "http",
  "httparse",
  "log",
@@ -7564,333 +6010,6 @@ dependencies = [
  "sha-1",
 ]
 
-[[package]]
-name = "sp-application-crypto"
-version = "23.0.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "899492ea547816d5dfe9a5a2ecc32f65a7110805af6da3380aa4902371b31dc2"
-dependencies = [
- "parity-scale-codec",
- "scale-info",
- "serde",
- "sp-core",
- "sp-io",
- "sp-std",
-]
-
-[[package]]
-name = "sp-arithmetic"
-version = "16.0.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "bb6020576e544c6824a51d651bc8df8e6ab67cd59f1c9ac09868bb81a5199ded"
-dependencies = [
- "integer-sqrt",
- "num-traits",
- "parity-scale-codec",
- "scale-info",
- "serde",
- "sp-std",
- "static_assertions",
-]
-
-[[package]]
-name = "sp-core"
-version = "21.0.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "f18d9e2f67d8661f9729f35347069ac29d92758b59135176799db966947a7336"
-dependencies = [
- "array-bytes",
- "bitflags 1.3.2",
- "blake2 0.10.6 (registry+https://github.com/rust-lang/crates.io-index)",
- "bounded-collections",
- "bs58 0.4.0",
- "dyn-clonable",
- "ed25519-zebra",
- "futures 0.3.30",
- "hash-db",
- "hash256-std-hasher",
- "impl-serde",
- "lazy_static",
- "libsecp256k1",
- "log",
- "merlin 2.0.1",
- "parity-scale-codec",
- "parking_lot",
- "paste",
- "primitive-types",
- "rand 0.8.5",
- "regex",
- "scale-info",
- "schnorrkel 0.9.1",
- "secp256k1 0.24.3",
- "secrecy",
- "serde",
- "sp-core-hashing",
- "sp-debug-derive",
- "sp-externalities",
- "sp-runtime-interface",
- "sp-std",
- "sp-storage",
- "ss58-registry",
- "substrate-bip39",
- "thiserror",
- "tiny-bip39",
- "zeroize",
-]
-
-[[package]]
-name = "sp-core-hashing"
-version = "9.0.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "2ee599a8399448e65197f9a6cee338ad192e9023e35e31f22382964c3c174c68"
-dependencies = [
- "blake2b_simd",
- "byteorder",
- "digest 0.10.7",
- "sha2 0.10.8",
- "sha3 0.10.8",
- "sp-std",
- "twox-hash",
-]
-
-[[package]]
-name = "sp-debug-derive"
-version = "8.0.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "c7f531814d2f16995144c74428830ccf7d94ff4a7749632b83ad8199b181140c"
-dependencies = [
- "proc-macro2 1.0.81",
- "quote 1.0.36",
- "syn 2.0.60",
-]
-
-[[package]]
-name = "sp-externalities"
-version = "0.19.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "a0f71c671e01a8ca60da925d43a1b351b69626e268b8837f8371e320cf1dd100"
-dependencies = [
- "environmental",
- "parity-scale-codec",
- "sp-std",
- "sp-storage",
-]
-
-[[package]]
-name = "sp-io"
-version = "23.0.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "9d597e35a9628fe7454b08965b2442e3ec0f264b0a90d41328e87422cec02e99"
-dependencies = [
- "bytes",
- "ed25519 1.5.3",
- "ed25519-dalek 1.0.1",
- "futures 0.3.30",
- "libsecp256k1",
- "log",
- "parity-scale-codec",
- "rustversion",
- "secp256k1 0.24.3",
- "sp-core",
- "sp-externalities",
- "sp-keystore",
- "sp-runtime-interface",
- "sp-state-machine",
- "sp-std",
- "sp-tracing",
- "sp-trie",
- "tracing",
- "tracing-core",
-]
-
-[[package]]
-name = "sp-keystore"
-version = "0.27.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "9be3cdd67cc1d9c1db17c5cbc4ec4924054a8437009d167f21f6590797e4aa45"
-dependencies = [
- "futures 0.3.30",
- "parity-scale-codec",
- "parking_lot",
- "sp-core",
- "sp-externalities",
- "thiserror",
-]
-
-[[package]]
-name = "sp-panic-handler"
-version = "8.0.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "ebd2de46003fa8212426838ca71cd42ee36a26480ba9ffea983506ce03131033"
-dependencies = [
- "backtrace",
- "lazy_static",
- "regex",
-]
-
-[[package]]
-name = "sp-runtime"
-version = "24.0.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "21c5bfc764a1a8259d7e8f7cfd22c84006275a512c958d3ff966c92151e134d5"
-dependencies = [
- "either",
- "hash256-std-hasher",
- "impl-trait-for-tuples",
- "log",
- "parity-scale-codec",
- "paste",
- "rand 0.8.5",
- "scale-info",
- "serde",
- "sp-application-crypto",
- "sp-arithmetic",
- "sp-core",
- "sp-io",
- "sp-std",
- "sp-weights",
-]
-
-[[package]]
-name = "sp-runtime-interface"
-version = "17.0.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "6e676128182f90015e916f806cba635c8141e341e7abbc45d25525472e1bbce8"
-dependencies = [
- "bytes",
- "impl-trait-for-tuples",
- "parity-scale-codec",
- "primitive-types",
- "sp-externalities",
- "sp-runtime-interface-proc-macro",
- "sp-std",
- "sp-storage",
- "sp-tracing",
- "sp-wasm-interface",
- "static_assertions",
-]
-
-[[package]]
-name = "sp-runtime-interface-proc-macro"
-version = "11.0.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "a5d5bd5566fe5633ec48dfa35ab152fd29f8a577c21971e1c6db9f28afb9bbb9"
-dependencies = [
- "Inflector",
- "proc-macro-crate 1.3.1",
- "proc-macro2 1.0.81",
- "quote 1.0.36",
- "syn 2.0.60",
-]
-
-[[package]]
-name = "sp-state-machine"
-version = "0.28.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "9ef45d31f9e7ac648f8899a0cd038a3608f8499028bff55b6c799702592325b6"
-dependencies = [
- "hash-db",
- "log",
- "parity-scale-codec",
- "parking_lot",
- "rand 0.8.5",
- "smallvec",
- "sp-core",
- "sp-externalities",
- "sp-panic-handler",
- "sp-std",
- "sp-trie",
- "thiserror",
- "tracing",
-]
-
-[[package]]
-name = "sp-std"
-version = "8.0.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "53458e3c57df53698b3401ec0934bea8e8cfce034816873c0b0abbd83d7bac0d"
-
-[[package]]
-name = "sp-storage"
-version = "13.0.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "94294be83f11d4958cfea89ed5798f0b6605f5defc3a996948848458abbcc18e"
-dependencies = [
- "impl-serde",
- "parity-scale-codec",
- "ref-cast",
- "serde",
- "sp-debug-derive",
- "sp-std",
-]
-
-[[package]]
-name = "sp-tracing"
-version = "10.0.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "357f7591980dd58305956d32f8f6646d0a8ea9ea0e7e868e46f53b68ddf00cec"
-dependencies = [
- "parity-scale-codec",
- "sp-std",
- "tracing",
- "tracing-core",
- "tracing-subscriber 0.2.25",
-]
-
-[[package]]
-name = "sp-trie"
-version = "22.0.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "48e4eeb7ef23f79eba8609db79ef9cef242f994f1f87a3c0387b4b5f177fda74"
-dependencies = [
- "ahash 0.8.7",
- "hash-db",
- "hashbrown 0.13.2",
- "lazy_static",
- "memory-db",
- "nohash-hasher",
- "parity-scale-codec",
- "parking_lot",
- "scale-info",
- "schnellru",
- "sp-core",
- "sp-std",
- "thiserror",
- "tracing",
- "trie-db",
- "trie-root",
-]
-
-[[package]]
-name = "sp-wasm-interface"
-version = "14.0.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "a19c122609ca5d8246be6386888596320d03c7bc880959eaa2c36bcd5acd6846"
-dependencies = [
- "anyhow",
- "impl-trait-for-tuples",
- "log",
- "parity-scale-codec",
- "sp-std",
- "wasmtime",
-]
-
-[[package]]
-name = "sp-weights"
-version = "20.0.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "45d084c735544f70625b821c3acdbc7a2fc1893ca98b85f1942631284692c75b"
-dependencies = [
- "parity-scale-codec",
- "scale-info",
- "serde",
- "smallvec",
- "sp-arithmetic",
- "sp-core",
- "sp-debug-derive",
- "sp-std",
-]
-
 [[package]]
 name = "spin"
 version = "0.5.2"
@@ -8007,8 +6126,8 @@ version = "0.7.3"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "89961c00dc4d7dffb7aee214964b065072bff69e36ddb9e2c107541f75e4f2a5"
 dependencies = [
- "proc-macro2 1.0.81",
- "quote 1.0.36",
+ "proc-macro2 1.0.69",
+ "quote 1.0.33",
  "sqlx-core",
  "sqlx-macros-core",
  "syn 1.0.109",
@@ -8026,8 +6145,8 @@ dependencies = [
  "heck 0.4.1",
  "hex",
  "once_cell",
- "proc-macro2 1.0.81",
- "quote 1.0.36",
+ "proc-macro2 1.0.69",
+ "quote 1.0.33",
  "serde",
  "serde_json",
  "sha2 0.10.8",
@@ -8062,10 +6181,10 @@ dependencies = [
  "futures-core",
  "futures-io",
  "futures-util",
- "generic-array 0.14.7",
+ "generic-array",
  "hex",
  "hkdf",
- "hmac 0.12.1",
+ "hmac",
  "itoa",
  "log",
  "md-5",
@@ -8107,7 +6226,7 @@ dependencies = [
  "futures-util",
  "hex",
  "hkdf",
- "hmac 0.12.1",
+ "hmac",
  "home",
  "ipnetwork",
  "itoa",
@@ -8154,21 +6273,6 @@ dependencies = [
  "urlencoding",
 ]
 
-[[package]]
-name = "ss58-registry"
-version = "1.47.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "4743ce898933fbff7bbf414f497c459a782d496269644b3d650a398ae6a487ba"
-dependencies = [
- "Inflector",
- "num-format",
- "proc-macro2 1.0.81",
- "quote 1.0.36",
- "serde",
- "serde_json",
- "unicode-xid 0.2.4",
-]
-
 [[package]]
 name = "stable_deref_trait"
 version = "1.2.0"
@@ -8223,8 +6327,8 @@ checksum = "dcb5ae327f9cc13b68763b5749770cb9e048a99bd9dfdfa58d0cf05d5f64afe0"
 dependencies = [
  "heck 0.3.3",
  "proc-macro-error",
- "proc-macro2 1.0.81",
- "quote 1.0.36",
+ "proc-macro2 1.0.69",
+ "quote 1.0.33",
  "syn 1.0.109",
 ]
 
@@ -8244,156 +6348,18 @@ source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "1e385be0d24f186b4ce2f9982191e7101bb737312ad61c1f2f984f34bcf85d59"
 dependencies = [
  "heck 0.4.1",
- "proc-macro2 1.0.81",
- "quote 1.0.36",
+ "proc-macro2 1.0.69",
+ "quote 1.0.33",
  "rustversion",
  "syn 1.0.109",
 ]
 
-[[package]]
-name = "substrate-bip39"
-version = "0.4.6"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "6a7590dc041b9bc2825e52ce5af8416c73dbe9d0654402bfd4b4941938b94d8f"
-dependencies = [
- "hmac 0.11.0",
- "pbkdf2 0.8.0",
- "schnorrkel 0.11.4",
- "sha2 0.9.9",
- "zeroize",
-]
-
 [[package]]
 name = "subtle"
 version = "2.5.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "81cdd64d312baedb58e21336b31bc043b77e01cc99033ce76ef539f78e965ebc"
 
-[[package]]
-name = "subtle-ng"
-version = "2.5.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "734676eb262c623cec13c3155096e08d1f8f29adce39ba17948b18dad1e54142"
-
-[[package]]
-name = "subxt"
-version = "0.32.1"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "588b8ce92699eeb06290f4fb02dad4f7e426c4e6db4d53889c6bcbc808cf24ac"
-dependencies = [
- "async-trait",
- "base58",
- "blake2 0.10.6 (registry+https://github.com/rust-lang/crates.io-index)",
- "derivative",
- "either",
- "frame-metadata 16.0.0",
- "futures 0.3.30",
- "hex",
- "impl-serde",
- "jsonrpsee 0.20.3",
- "parity-scale-codec",
- "primitive-types",
- "scale-bits",
- "scale-decode",
- "scale-encode",
- "scale-info",
- "scale-value",
- "serde",
- "serde_json",
- "sp-core",
- "sp-core-hashing",
- "sp-runtime",
- "subxt-lightclient",
- "subxt-macro",
- "subxt-metadata",
- "thiserror",
- "tracing",
-]
-
-[[package]]
-name = "subxt-codegen"
-version = "0.32.1"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "98f5a534c8d475919e9c845d51fc2316da4fcadd04fe17552d932d2106de930e"
-dependencies = [
- "frame-metadata 16.0.0",
- "heck 0.4.1",
- "hex",
- "jsonrpsee 0.20.3",
- "parity-scale-codec",
- "proc-macro2 1.0.81",
- "quote 1.0.36",
- "scale-info",
- "subxt-metadata",
- "syn 2.0.60",
- "thiserror",
- "tokio",
-]
-
-[[package]]
-name = "subxt-lightclient"
-version = "0.32.1"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "10fd0ac9b091211f962b6ae19e26cd08e0b86efa064dfb7fac69c8f79f122329"
-dependencies = [
- "futures 0.3.30",
- "futures-util",
- "serde",
- "serde_json",
- "smoldot-light",
- "thiserror",
- "tokio",
- "tokio-stream",
- "tracing",
-]
-
-[[package]]
-name = "subxt-macro"
-version = "0.32.1"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "12e8be9ab6fe88b8c13edbe15911e148482cfb905a8b8d5b8d766a64c54be0bd"
-dependencies = [
- "darling 0.20.8",
- "proc-macro-error",
- "subxt-codegen",
- "syn 2.0.60",
-]
-
-[[package]]
-name = "subxt-metadata"
-version = "0.32.1"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "b6898275765d36a37e5ef564358e0341cf41b5f3a91683d7d8b859381b65ac8a"
-dependencies = [
- "frame-metadata 16.0.0",
- "parity-scale-codec",
- "scale-info",
- "sp-core-hashing",
- "thiserror",
-]
-
-[[package]]
-name = "subxt-signer"
-version = "0.32.1"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "d82e5abb896d5f5a6581d5b86a5e7f015e318122498d8163211e8f61f83b54d2"
-dependencies = [
- "bip39",
- "hex",
- "hmac 0.12.1",
- "parity-scale-codec",
- "pbkdf2 0.12.2",
- "regex",
- "schnorrkel 0.10.2",
- "secp256k1 0.27.0",
- "secrecy",
- "sha2 0.10.8",
- "sp-core-hashing",
- "subxt",
- "thiserror",
- "zeroize",
-]
-
 [[package]]
 name = "syn"
 version = "0.15.44"
@@ -8411,19 +6377,19 @@ version = "1.0.109"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "72b64191b275b66ffe2469e8af2c1cfe3bafa67b529ead792a6d0160888b4237"
 dependencies = [
- "proc-macro2 1.0.81",
- "quote 1.0.36",
+ "proc-macro2 1.0.69",
+ "quote 1.0.33",
  "unicode-ident",
 ]
 
 [[package]]
 name = "syn"
-version = "2.0.60"
+version = "2.0.38"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "909518bc7b1c9b779f1bbf07f2929d35af9f0f37e47c6e9ef7f9dddc1e1821f3"
+checksum = "e96b79aaa137db8f61e26363a0c9b47d8b4ec75da28b7d1d614c2303e232408b"
 dependencies = [
- "proc-macro2 1.0.81",
- "quote 1.0.36",
+ "proc-macro2 1.0.69",
+ "quote 1.0.33",
  "unicode-ident",
 ]
 
@@ -8434,9 +6400,9 @@ source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "1329189c02ff984e9736652b1631330da25eaa6bc639089ed4915d25446cbe7b"
 dependencies = [
  "proc-macro-error",
- "proc-macro2 1.0.81",
- "quote 1.0.36",
- "syn 2.0.60",
+ "proc-macro2 1.0.69",
+ "quote 1.0.33",
+ "syn 2.0.38",
 ]
 
 [[package]]
@@ -8493,12 +6459,6 @@ version = "1.0.1"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "55937e1799185b12863d447f42597ed69d9928686b8d88a1df17376a097d8369"
 
-[[package]]
-name = "target-lexicon"
-version = "0.12.14"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "e1fc403891a21bcfb7c37834ba66a547a8f402146eba7265b5a6d88059c9ff2f"
-
 [[package]]
 name = "tempdir"
 version = "0.3.7"
@@ -8516,9 +6476,9 @@ source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "cb94d2f3cc536af71caac6b6fcebf65860b347e7ce0cc9ebe8f70d3e521054ef"
 dependencies = [
  "cfg-if 1.0.0",
- "fastrand 2.0.1",
+ "fastrand",
  "redox_syscall 0.3.5",
- "rustix 0.38.20",
+ "rustix",
  "windows-sys 0.48.0",
 ]
 
@@ -8537,64 +6497,44 @@ version = "0.1.2"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "2cfbe7811249c4c914b06141b8ac0f2cee2733fb883d05eb19668a45fc60c3d5"
 dependencies = [
- "proc-macro2 1.0.81",
- "quote 1.0.36",
- "syn 2.0.60",
+ "proc-macro2 1.0.69",
+ "quote 1.0.33",
+ "syn 2.0.38",
 ]
 
 [[package]]
 name = "textwrap"
 version = "0.11.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "d326610f408c7a4eb6f51c37c330e496b08506c9457c9d34287ecc38809fb060"
-dependencies = [
- "unicode-width",
-]
-
-[[package]]
-name = "textwrap"
-version = "0.16.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "222a222a5bfe1bba4a77b45ec488a741b3cb8872e5e499451fd7d0129c9c7c3d"
-
-[[package]]
-name = "thiserror"
-version = "1.0.59"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "f0126ad08bff79f29fc3ae6a55cc72352056dfff61e3ff8bb7129476d44b23aa"
+checksum = "d326610f408c7a4eb6f51c37c330e496b08506c9457c9d34287ecc38809fb060"
 dependencies = [
- "thiserror-impl",
+ "unicode-width",
 ]
 
 [[package]]
-name = "thiserror-core"
-version = "1.0.50"
+name = "textwrap"
+version = "0.16.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "c001ee18b7e5e3f62cbf58c7fe220119e68d902bb7443179c0c8aef30090e999"
-dependencies = [
- "thiserror-core-impl",
-]
+checksum = "222a222a5bfe1bba4a77b45ec488a741b3cb8872e5e499451fd7d0129c9c7c3d"
 
 [[package]]
-name = "thiserror-core-impl"
+name = "thiserror"
 version = "1.0.50"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "e4c60d69f36615a077cc7663b9cb8e42275722d23e58a7fa3d2c7f2915d09d04"
+checksum = "f9a7210f5c9a7156bb50aa36aed4c95afb51df0df00713949448cf9e97d382d2"
 dependencies = [
- "proc-macro2 1.0.81",
- "quote 1.0.36",
- "syn 2.0.60",
+ "thiserror-impl",
 ]
 
 [[package]]
 name = "thiserror-impl"
-version = "1.0.59"
+version = "1.0.50"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "d1cd413b5d558b4c5bf3680e324a6fa5014e7b7c067a51e69dbdf47eb7148b66"
+checksum = "266b2e40bc00e5a6c09c3584011e08b06f123c00362c92b975ba9843aaaa14b8"
 dependencies = [
- "proc-macro2 1.0.81",
- "quote 1.0.36",
- "syn 2.0.60",
+ "proc-macro2 1.0.69",
+ "quote 1.0.33",
+ "syn 2.0.38",
 ]
 
 [[package]]
@@ -8665,25 +6605,6 @@ dependencies = [
  "time-core",
 ]
 
-[[package]]
-name = "tiny-bip39"
-version = "1.0.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "62cc94d358b5a1e84a5cb9109f559aa3c4d634d2b1b4de3d0fa4adc7c78e2861"
-dependencies = [
- "anyhow",
- "hmac 0.12.1",
- "once_cell",
- "pbkdf2 0.11.0",
- "rand 0.8.5",
- "rustc-hash",
- "sha2 0.10.8",
- "thiserror",
- "unicode-normalization",
- "wasm-bindgen",
- "zeroize",
-]
-
 [[package]]
 name = "tiny-keccak"
 version = "1.5.0"
@@ -8729,9 +6650,9 @@ checksum = "1f3ccbac311fea05f86f61904b462b55fb3df8837a366dfc601a0161d0532f20"
 
 [[package]]
 name = "tokio"
-version = "1.37.0"
+version = "1.34.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "1adbebffeca75fcfd058afa480fb6c0b81e165a0323f9c9d39c9697e37c46787"
+checksum = "d0c014766411e834f7af5b8f4cf46257aab4036ca95e9d2c144a10f59ad6f5b9"
 dependencies = [
  "backtrace",
  "bytes",
@@ -8762,9 +6683,9 @@ version = "2.2.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "5b8a1e28f2deaa14e508979454cb3a223b10b938b45af148bc0986de36f1923b"
 dependencies = [
- "proc-macro2 1.0.81",
- "quote 1.0.36",
- "syn 2.0.60",
+ "proc-macro2 1.0.69",
+ "quote 1.0.33",
+ "syn 2.0.38",
 ]
 
 [[package]]
@@ -8811,9 +6732,9 @@ dependencies = [
 
 [[package]]
 name = "tokio-util"
-version = "0.7.10"
+version = "0.7.9"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "5419f34732d9eb6ee4c3578b7989078579b7f039cbbb9ca2c4da015749371e15"
+checksum = "1d68074620f57a0b21594d9735eb2e98ab38b17f80d3fcb189fca266771ca60d"
 dependencies = [
  "bytes",
  "futures-core",
@@ -8826,9 +6747,9 @@ dependencies = [
 
 [[package]]
 name = "toml_datetime"
-version = "0.6.5"
+version = "0.6.3"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "3550f4e9685620ac18a50ed434eb3aec30db8ba93b0287467bca5826ea25baf1"
+checksum = "7cda73e2f1397b1262d6dfdcef8aafae14d1de7748d66822d3bfeeb6d03e5e4b"
 
 [[package]]
 name = "toml_edit"
@@ -8852,17 +6773,6 @@ dependencies = [
  "winnow",
 ]
 
-[[package]]
-name = "toml_edit"
-version = "0.21.1"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "6a8534fd7f78b5405e860340ad6575217ce99f38d4d5c8f2442cb5ecb50090e1"
-dependencies = [
- "indexmap 2.1.0",
- "toml_datetime",
- "winnow",
-]
-
 [[package]]
 name = "tonic"
 version = "0.9.2"
@@ -8972,9 +6882,9 @@ version = "0.1.27"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "34704c8d6ebcbc939824180af020566b01a7c01f80641264eba0999f6c2b6be7"
 dependencies = [
- "proc-macro2 1.0.81",
- "quote 1.0.36",
- "syn 2.0.60",
+ "proc-macro2 1.0.69",
+ "quote 1.0.33",
+ "syn 2.0.38",
 ]
 
 [[package]]
@@ -9011,7 +6921,7 @@ dependencies = [
  "tracing",
  "tracing-core",
  "tracing-log",
- "tracing-subscriber 0.3.17",
+ "tracing-subscriber",
 ]
 
 [[package]]
@@ -9024,35 +6934,13 @@ dependencies = [
  "tracing-core",
 ]
 
-[[package]]
-name = "tracing-subscriber"
-version = "0.2.25"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "0e0d2eaa99c3c2e41547cfa109e910a68ea03823cccad4a0525dcbc9b01e8c71"
-dependencies = [
- "ansi_term",
- "chrono",
- "lazy_static",
- "matchers 0.0.1",
- "regex",
- "serde",
- "serde_json",
- "sharded-slab",
- "smallvec",
- "thread_local",
- "tracing",
- "tracing-core",
- "tracing-log",
- "tracing-serde",
-]
-
 [[package]]
 name = "tracing-subscriber"
 version = "0.3.17"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "30a651bc37f915e81f087d86e62a18eec5f79550c7faff886f7090b4ea757c77"
 dependencies = [
- "matchers 0.1.0",
+ "matchers",
  "nu-ansi-term",
  "once_cell",
  "regex",
@@ -9068,28 +6956,6 @@ dependencies = [
  "tracing-serde",
 ]
 
-[[package]]
-name = "trie-db"
-version = "0.27.1"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "767abe6ffed88a1889671a102c2861ae742726f52e0a5a425b92c9fbfa7e9c85"
-dependencies = [
- "hash-db",
- "hashbrown 0.13.2",
- "log",
- "rustc-hex",
- "smallvec",
-]
-
-[[package]]
-name = "trie-root"
-version = "0.18.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "d4ed310ef5ab98f5fa467900ed906cb9232dd5376597e00fd4cba2a449d06c0b"
-dependencies = [
- "hash-db",
-]
-
 [[package]]
 name = "triomphe"
 version = "0.1.9"
@@ -9102,18 +6968,6 @@ version = "0.2.4"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "3528ecfd12c466c6f163363caf2d02a71161dd5e1cc6ae7b34207ea2d42d81ed"
 
-[[package]]
-name = "twox-hash"
-version = "1.6.3"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "97fee6b57c6a41524a810daee9286c02d7752c4253064d0b05472833a438f675"
-dependencies = [
- "cfg-if 1.0.0",
- "digest 0.10.7",
- "rand 0.8.5",
- "static_assertions",
-]
-
 [[package]]
 name = "typenum"
 version = "1.17.0"
@@ -9223,7 +7077,7 @@ version = "0.1.5"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "5ad948c1cb799b1a70f836077721a92a35ac177d4daddf4c20a633786d4cf618"
 dependencies = [
- "quote 1.0.36",
+ "quote 1.0.33",
  "syn 1.0.109",
 ]
 
@@ -9260,12 +7114,12 @@ dependencies = [
 
 [[package]]
 name = "url"
-version = "2.5.0"
+version = "2.4.1"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "31e6302e3bb753d46e83516cae55ae196fc0c309407cf11ab35cc51a4c2a4633"
+checksum = "143b538f18257fac9cad154828a57c6bf5157e1aa604d4816b5995bf6de87ae5"
 dependencies = [
  "form_urlencoded",
- "idna 0.5.0",
+ "idna",
  "percent-encoding",
  "serde",
 ]
@@ -9288,7 +7142,7 @@ version = "1.5.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "88ad59a7560b41a70d191093a945f0b87bc1deeda46fb237479708a1d6b6cdfc"
 dependencies = [
- "getrandom 0.2.10",
+ "getrandom",
  "serde",
 ]
 
@@ -9360,9 +7214,9 @@ name = "vise-macros"
 version = "0.1.0"
 source = "git+https://github.com/matter-labs/vise.git?rev=1c9cc500e92cf9ea052b230e114a6f9cce4fb2c1#1c9cc500e92cf9ea052b230e114a6f9cce4fb2c1"
 dependencies = [
- "proc-macro2 1.0.81",
- "quote 1.0.36",
- "syn 2.0.60",
+ "proc-macro2 1.0.69",
+ "quote 1.0.33",
+ "syn 2.0.38",
 ]
 
 [[package]]
@@ -9377,7 +7231,7 @@ dependencies = [
  "serde_json",
  "tracing",
  "tracing-opentelemetry",
- "tracing-subscriber 0.3.17",
+ "tracing-subscriber",
 ]
 
 [[package]]
@@ -9421,12 +7275,6 @@ dependencies = [
  "zksync_utils",
 ]
 
-[[package]]
-name = "waker-fn"
-version = "1.1.1"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "f3c4517f54858c779bbcbf228f4fca63d121bf85fbecb2dc578cdf4a39395690"
-
 [[package]]
 name = "walkdir"
 version = "2.4.0"
@@ -9446,12 +7294,6 @@ dependencies = [
  "try-lock",
 ]
 
-[[package]]
-name = "wasi"
-version = "0.9.0+wasi-snapshot-preview1"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "cccddf32554fecc6acb585f82a32a72e28b48f8c4c1883ddfeeeaa96f7d8e519"
-
 [[package]]
 name = "wasi"
 version = "0.10.2+wasi-snapshot-preview1"
@@ -9489,9 +7331,9 @@ dependencies = [
  "bumpalo",
  "log",
  "once_cell",
- "proc-macro2 1.0.81",
- "quote 1.0.36",
- "syn 2.0.60",
+ "proc-macro2 1.0.69",
+ "quote 1.0.33",
+ "syn 2.0.38",
  "wasm-bindgen-shared",
 ]
 
@@ -9513,7 +7355,7 @@ version = "0.2.87"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "dee495e55982a3bd48105a7b947fd2a9b4a8ae3010041b9e0faab3f9cd028f1d"
 dependencies = [
- "quote 1.0.36",
+ "quote 1.0.33",
  "wasm-bindgen-macro-support",
 ]
 
@@ -9523,9 +7365,9 @@ version = "0.2.87"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "54681b18a46765f095758388f2d0cf16eb8d4169b639ab575a8f5693af210c7b"
 dependencies = [
- "proc-macro2 1.0.81",
- "quote 1.0.36",
- "syn 2.0.60",
+ "proc-macro2 1.0.69",
+ "quote 1.0.33",
+ "syn 2.0.38",
  "wasm-bindgen-backend",
  "wasm-bindgen-shared",
 ]
@@ -9549,189 +7391,6 @@ dependencies = [
  "web-sys",
 ]
 
-[[package]]
-name = "wasmi"
-version = "0.30.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "e51fb5c61993e71158abf5bb863df2674ca3ec39ed6471c64f07aeaf751d67b4"
-dependencies = [
- "intx",
- "smallvec",
- "spin 0.9.8",
- "wasmi_arena",
- "wasmi_core",
- "wasmparser-nostd",
-]
-
-[[package]]
-name = "wasmi_arena"
-version = "0.4.1"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "104a7f73be44570cac297b3035d76b169d6599637631cf37a1703326a0727073"
-
-[[package]]
-name = "wasmi_core"
-version = "0.12.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "624e6333e861ef49095d2d678b76ebf30b06bf37effca845be7e5b87c90071b7"
-dependencies = [
- "downcast-rs",
- "libm",
- "num-traits",
- "paste",
-]
-
-[[package]]
-name = "wasmparser"
-version = "0.102.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "48134de3d7598219ab9eaf6b91b15d8e50d31da76b8519fe4ecfcec2cf35104b"
-dependencies = [
- "indexmap 1.9.3",
- "url",
-]
-
-[[package]]
-name = "wasmparser-nostd"
-version = "0.100.2"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "d5a015fe95f3504a94bb1462c717aae75253e39b9dd6c3fb1062c934535c64aa"
-dependencies = [
- "indexmap-nostd",
-]
-
-[[package]]
-name = "wasmtime"
-version = "8.0.1"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "f907fdead3153cb9bfb7a93bbd5b62629472dc06dee83605358c64c52ed3dda9"
-dependencies = [
- "anyhow",
- "bincode",
- "cfg-if 1.0.0",
- "indexmap 1.9.3",
- "libc",
- "log",
- "object 0.30.4",
- "once_cell",
- "paste",
- "psm",
- "serde",
- "target-lexicon",
- "wasmparser",
- "wasmtime-environ",
- "wasmtime-jit",
- "wasmtime-runtime",
- "windows-sys 0.45.0",
-]
-
-[[package]]
-name = "wasmtime-asm-macros"
-version = "8.0.1"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "d3b9daa7c14cd4fa3edbf69de994408d5f4b7b0959ac13fa69d465f6597f810d"
-dependencies = [
- "cfg-if 1.0.0",
-]
-
-[[package]]
-name = "wasmtime-environ"
-version = "8.0.1"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "a990198cee4197423045235bf89d3359e69bd2ea031005f4c2d901125955c949"
-dependencies = [
- "anyhow",
- "cranelift-entity",
- "gimli 0.27.3",
- "indexmap 1.9.3",
- "log",
- "object 0.30.4",
- "serde",
- "target-lexicon",
- "thiserror",
- "wasmparser",
- "wasmtime-types",
-]
-
-[[package]]
-name = "wasmtime-jit"
-version = "8.0.1"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "0de48df552cfca1c9b750002d3e07b45772dd033b0b206d5c0968496abf31244"
-dependencies = [
- "addr2line 0.19.0",
- "anyhow",
- "bincode",
- "cfg-if 1.0.0",
- "cpp_demangle",
- "gimli 0.27.3",
- "log",
- "object 0.30.4",
- "rustc-demangle",
- "serde",
- "target-lexicon",
- "wasmtime-environ",
- "wasmtime-jit-icache-coherence",
- "wasmtime-runtime",
- "windows-sys 0.45.0",
-]
-
-[[package]]
-name = "wasmtime-jit-debug"
-version = "8.0.1"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "6e0554b84c15a27d76281d06838aed94e13a77d7bf604bbbaf548aa20eb93846"
-dependencies = [
- "once_cell",
-]
-
-[[package]]
-name = "wasmtime-jit-icache-coherence"
-version = "8.0.1"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "aecae978b13f7f67efb23bd827373ace4578f2137ec110bbf6a4a7cde4121bbd"
-dependencies = [
- "cfg-if 1.0.0",
- "libc",
- "windows-sys 0.45.0",
-]
-
-[[package]]
-name = "wasmtime-runtime"
-version = "8.0.1"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "658cf6f325232b6760e202e5255d823da5e348fdea827eff0a2a22319000b441"
-dependencies = [
- "anyhow",
- "cc",
- "cfg-if 1.0.0",
- "indexmap 1.9.3",
- "libc",
- "log",
- "mach",
- "memfd",
- "memoffset 0.8.0",
- "paste",
- "rand 0.8.5",
- "rustix 0.36.17",
- "wasmtime-asm-macros",
- "wasmtime-environ",
- "wasmtime-jit-debug",
- "windows-sys 0.45.0",
-]
-
-[[package]]
-name = "wasmtime-types"
-version = "8.0.1"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "a4f6fffd2a1011887d57f07654dd112791e872e3ff4a2e626aee8059ee17f06f"
-dependencies = [
- "cranelift-entity",
- "serde",
- "thiserror",
- "wasmparser",
-]
-
 [[package]]
 name = "web-sys"
 version = "0.3.64"
@@ -9754,11 +7413,11 @@ dependencies = [
  "derive_more",
  "ethabi",
  "ethereum-types",
- "futures 0.3.30",
+ "futures 0.3.28",
  "futures-timer",
  "headers",
  "hex",
- "idna 0.4.0",
+ "idna",
  "jsonrpc-core",
  "log",
  "once_cell",
@@ -9766,7 +7425,7 @@ dependencies = [
  "pin-project",
  "reqwest",
  "rlp",
- "secp256k1 0.27.0",
+ "secp256k1",
  "serde",
  "serde_json",
  "soketto",
@@ -9814,7 +7473,7 @@ dependencies = [
  "either",
  "home",
  "once_cell",
- "rustix 0.38.20",
+ "rustix",
 ]
 
 [[package]]
@@ -9885,15 +7544,6 @@ dependencies = [
  "windows-targets 0.48.5",
 ]
 
-[[package]]
-name = "windows-sys"
-version = "0.52.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "282be5f36a8ce781fad8c8ae18fa3f9beff57ec1b52cb3de0789201425d9a33d"
-dependencies = [
- "windows-targets 0.52.5",
-]
-
 [[package]]
 name = "windows-targets"
 version = "0.42.2"
@@ -9924,22 +7574,6 @@ dependencies = [
  "windows_x86_64_msvc 0.48.5",
 ]
 
-[[package]]
-name = "windows-targets"
-version = "0.52.5"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "6f0713a46559409d202e70e28227288446bf7841d3211583a4b53e3f6d96e7eb"
-dependencies = [
- "windows_aarch64_gnullvm 0.52.5",
- "windows_aarch64_msvc 0.52.5",
- "windows_i686_gnu 0.52.5",
- "windows_i686_gnullvm",
- "windows_i686_msvc 0.52.5",
- "windows_x86_64_gnu 0.52.5",
- "windows_x86_64_gnullvm 0.52.5",
- "windows_x86_64_msvc 0.52.5",
-]
-
 [[package]]
 name = "windows_aarch64_gnullvm"
 version = "0.42.2"
@@ -9952,12 +7586,6 @@ version = "0.48.5"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "2b38e32f0abccf9987a4e3079dfb67dcd799fb61361e53e2882c3cbaf0d905d8"
 
-[[package]]
-name = "windows_aarch64_gnullvm"
-version = "0.52.5"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "7088eed71e8b8dda258ecc8bac5fb1153c5cffaf2578fc8ff5d61e23578d3263"
-
 [[package]]
 name = "windows_aarch64_msvc"
 version = "0.42.2"
@@ -9970,12 +7598,6 @@ version = "0.48.5"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "dc35310971f3b2dbbf3f0690a219f40e2d9afcf64f9ab7cc1be722937c26b4bc"
 
-[[package]]
-name = "windows_aarch64_msvc"
-version = "0.52.5"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "9985fd1504e250c615ca5f281c3f7a6da76213ebd5ccc9561496568a2752afb6"
-
 [[package]]
 name = "windows_i686_gnu"
 version = "0.42.2"
@@ -9988,18 +7610,6 @@ version = "0.48.5"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "a75915e7def60c94dcef72200b9a8e58e5091744960da64ec734a6c6e9b3743e"
 
-[[package]]
-name = "windows_i686_gnu"
-version = "0.52.5"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "88ba073cf16d5372720ec942a8ccbf61626074c6d4dd2e745299726ce8b89670"
-
-[[package]]
-name = "windows_i686_gnullvm"
-version = "0.52.5"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "87f4261229030a858f36b459e748ae97545d6f1ec60e5e0d6a3d32e0dc232ee9"
-
 [[package]]
 name = "windows_i686_msvc"
 version = "0.42.2"
@@ -10012,12 +7622,6 @@ version = "0.48.5"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "8f55c233f70c4b27f66c523580f78f1004e8b5a8b659e05a4eb49d4166cca406"
 
-[[package]]
-name = "windows_i686_msvc"
-version = "0.52.5"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "db3c2bf3d13d5b658be73463284eaf12830ac9a26a90c717b7f771dfe97487bf"
-
 [[package]]
 name = "windows_x86_64_gnu"
 version = "0.42.2"
@@ -10030,12 +7634,6 @@ version = "0.48.5"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "53d40abd2583d23e4718fddf1ebec84dbff8381c07cae67ff7768bbf19c6718e"
 
-[[package]]
-name = "windows_x86_64_gnu"
-version = "0.52.5"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "4e4246f76bdeff09eb48875a0fd3e2af6aada79d409d33011886d3e1581517d9"
-
 [[package]]
 name = "windows_x86_64_gnullvm"
 version = "0.42.2"
@@ -10048,12 +7646,6 @@ version = "0.48.5"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "0b7b52767868a23d5bab768e390dc5f5c55825b6d30b86c844ff2dc7414044cc"
 
-[[package]]
-name = "windows_x86_64_gnullvm"
-version = "0.52.5"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "852298e482cd67c356ddd9570386e2862b5673c85bd5f88df9ab6802b334c596"
-
 [[package]]
 name = "windows_x86_64_msvc"
 version = "0.42.2"
@@ -10066,12 +7658,6 @@ version = "0.48.5"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "ed94fce61571a4006852b7389a063ab983c02eb1bb37b47f8272ce92d06d9538"
 
-[[package]]
-name = "windows_x86_64_msvc"
-version = "0.52.5"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "bec47e5bfd1bff0eeaf6d8b485cc1074891a197ab4225d504cb7a1ab88b02bf0"
-
 [[package]]
 name = "winnow"
 version = "0.5.17"
@@ -10115,12 +7701,6 @@ version = "0.5.1"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "09041cd90cf85f7f8b2df60c646f853b7f535ce68f85244eb6731cf89fa498ec"
 
-[[package]]
-name = "yap"
-version = "0.11.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "ff4524214bc4629eba08d78ceb1d6507070cc0bcbbed23af74e19e6e924a24cf"
-
 [[package]]
 name = "zerocopy"
 version = "0.7.31"
@@ -10136,16 +7716,16 @@ version = "0.7.31"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "b3c129550b3e6de3fd0ba67ba5c81818f9805e58b8d7fee80a3a59d2c9fc601a"
 dependencies = [
- "proc-macro2 1.0.81",
- "quote 1.0.36",
- "syn 2.0.60",
+ "proc-macro2 1.0.69",
+ "quote 1.0.33",
+ "syn 2.0.38",
 ]
 
 [[package]]
 name = "zeroize"
-version = "1.7.0"
+version = "1.6.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "525b4ec142c6b68a2d10f01f7bbf6755599ca3f81ea53b8431b7dd348f5fdb2d"
+checksum = "2a0956f1ba7c7909bfb66c2e9e4124ab6f6482560f6628b5aaeba39207c9aad9"
 dependencies = [
  "zeroize_derive",
 ]
@@ -10156,9 +7736,9 @@ version = "1.4.2"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "ce36e65b0d2999d2aafac989fb249189a141aee1f53c612c1f37d72631959f69"
 dependencies = [
- "proc-macro2 1.0.81",
- "quote 1.0.36",
- "syn 2.0.60",
+ "proc-macro2 1.0.69",
+ "quote 1.0.33",
+ "syn 2.0.38",
 ]
 
 [[package]]
@@ -10337,7 +7917,7 @@ dependencies = [
  "bitflags 2.4.1",
  "blake2 0.10.6 (registry+https://github.com/rust-lang/crates.io-index)",
  "ethereum-types",
- "k256 0.13.3",
+ "k256 0.13.2",
  "lazy_static",
  "sha2 0.10.8",
  "sha3 0.10.8",
@@ -10415,7 +7995,7 @@ dependencies = [
  "time",
  "tokio",
  "tracing",
- "tracing-subscriber 0.3.17",
+ "tracing-subscriber",
  "vise",
 ]
 
@@ -10458,7 +8038,7 @@ source = "git+https://github.com/matter-labs/era-consensus.git?rev=ce9279566ae96
 dependencies = [
  "anyhow",
  "blst",
- "ed25519-dalek 2.1.1",
+ "ed25519-dalek",
  "ff_ce",
  "hex",
  "pairing_ce 0.28.5 (git+https://github.com/matter-labs/pairing.git?rev=d24f2c5871089c4cd4f54c0ca266bb9fef6115eb)",
@@ -10585,7 +8165,7 @@ dependencies = [
  "chrono",
  "ctrlc",
  "ethabi",
- "futures 0.3.30",
+ "futures 0.3.28",
  "hex",
  "lazy_static",
  "metrics",
@@ -10631,18 +8211,15 @@ dependencies = [
  "axum",
  "bitflags 1.3.2",
  "chrono",
- "codegen 0.1.0",
  "ctrlc",
- "futures 0.3.30",
+ "futures 0.3.28",
  "governor",
  "hex",
- "hex-literal",
  "itertools 0.10.5",
- "jsonrpsee 0.21.0",
- "lru 0.12.1",
+ "jsonrpsee",
+ "lru",
  "metrics",
  "multivm",
- "num-bigint 0.4.4",
  "once_cell",
  "pin-project-lite",
  "prometheus_exporter",
@@ -10653,8 +8230,6 @@ dependencies = [
  "serde",
  "serde_json",
  "serde_yaml",
- "subxt",
- "subxt-signer",
  "tempfile",
  "test-casing",
  "thiserror",
@@ -10666,7 +8241,6 @@ dependencies = [
  "vise",
  "vlog",
  "vm_utils",
- "zksync_basic_types",
  "zksync_circuit_breaker",
  "zksync_commitment_utils",
  "zksync_concurrency",
@@ -10738,7 +8312,6 @@ dependencies = [
  "tokio",
  "tracing",
  "vise",
- "zksync_basic_types",
  "zksync_consensus_roles",
  "zksync_consensus_storage",
  "zksync_contracts",
@@ -10807,12 +8380,12 @@ version = "0.1.0"
 dependencies = [
  "async-trait",
  "axum",
- "futures 0.3.30",
+ "futures 0.3.28",
  "hex",
  "jsonrpc-core",
  "reqwest",
  "rlp",
- "secp256k1 0.27.0",
+ "secp256k1",
  "serde",
  "serde_derive",
  "serde_json",
@@ -10828,7 +8401,7 @@ dependencies = [
  "anyhow",
  "clap 4.4.6",
  "envy",
- "futures 0.3.30",
+ "futures 0.3.28",
  "prometheus_exporter",
  "semver",
  "serde",
@@ -10864,7 +8437,7 @@ version = "0.1.0"
 dependencies = [
  "assert_matches",
  "async-trait",
- "futures 0.3.30",
+ "futures 0.3.28",
  "serde",
  "serde_json",
  "tokio",
@@ -10916,7 +8489,7 @@ dependencies = [
  "test-casing",
  "thiserror",
  "tracing",
- "tracing-subscriber 0.3.17",
+ "tracing-subscriber",
  "vise",
  "zksync_crypto",
  "zksync_prover_interface",
@@ -10944,7 +8517,7 @@ dependencies = [
  "assert_matches",
  "async-trait",
  "ctrlc",
- "futures 0.3.30",
+ "futures 0.3.28",
  "prometheus_exporter",
  "prover_dal",
  "thiserror",
@@ -11018,12 +8591,12 @@ dependencies = [
  "anyhow",
  "heck 0.5.0",
  "prettyplease",
- "proc-macro2 1.0.81",
+ "proc-macro2 1.0.69",
  "prost-build",
  "prost-reflect",
  "protox",
- "quote 1.0.36",
- "syn 2.0.60",
+ "quote 1.0.33",
+ "syn 2.0.38",
 ]
 
 [[package]]
@@ -11076,7 +8649,7 @@ version = "0.1.0"
 dependencies = [
  "anyhow",
  "clap 4.4.6",
- "futures 0.3.30",
+ "futures 0.3.28",
  "serde_json",
  "tikv-jemallocator",
  "tokio",
@@ -11184,7 +8757,7 @@ dependencies = [
  "once_cell",
  "prost 0.12.1",
  "rlp",
- "secp256k1 0.27.0",
+ "secp256k1",
  "serde",
  "serde_json",
  "serde_with",
@@ -11207,7 +8780,7 @@ version = "0.1.0"
 dependencies = [
  "anyhow",
  "bigdecimal",
- "futures 0.3.30",
+ "futures 0.3.28",
  "hex",
  "itertools 0.10.5",
  "num",
@@ -11228,7 +8801,7 @@ name = "zksync_web3_decl"
 version = "0.1.0"
 dependencies = [
  "anyhow",
- "jsonrpsee 0.21.0",
+ "jsonrpsee",
  "pin-project-lite",
  "rlp",
  "serde",
diff --git a/core/bin/zksync_server/src/main.rs b/core/bin/zksync_server/src/main.rs
index daad4e85..7540a9d5 100644
--- a/core/bin/zksync_server/src/main.rs
+++ b/core/bin/zksync_server/src/main.rs
@@ -11,8 +11,8 @@ use zksync_config::{
         },
         fri_prover_group::FriProverGroupConfig,
         house_keeper::HouseKeeperConfig,
-        FriProofCompressorConfig, FriProverConfig, FriWitnessGeneratorConfig, NewHorizenConfig,
-        ObservabilityConfig, PrometheusConfig, ProofDataHandlerConfig, WitnessGeneratorConfig,
+        FriProofCompressorConfig, FriProverConfig, FriWitnessGeneratorConfig, ObservabilityConfig,
+        PrometheusConfig, ProofDataHandlerConfig, WitnessGeneratorConfig,
     },
     ApiConfig, ContractsConfig, DBConfig, ETHClientConfig, ETHSenderConfig, ETHWatchConfig,
     GasAdjusterConfig, GenesisConfig, ObjectStoreConfig, PostgresConfig,
@@ -139,7 +139,6 @@ async fn main() -> anyhow::Result<()> {
             gas_adjuster_config: GasAdjusterConfig::from_env().ok(),
             object_store_config: ObjectStoreConfig::from_env().ok(),
             consensus_config: config::read_consensus_config().context("read_consensus_config()")?,
-            new_horizen_config: NewHorizenConfig::from_env().ok(),
         },
     };
     let secrets: Secrets = match opt.secrets_path {
diff --git a/core/lib/config/src/configs/contracts.rs b/core/lib/config/src/configs/contracts.rs
index 82e9e515..7835d94b 100644
--- a/core/lib/config/src/configs/contracts.rs
+++ b/core/lib/config/src/configs/contracts.rs
@@ -44,8 +44,6 @@ pub struct ContractsConfig {
     pub state_transition_proxy_addr: Option<Address>,
     pub state_transition_impl_addr: Option<Address>,
     pub transparent_proxy_admin_addr: Option<Address>,
-
-    pub nh_verifier_addr: Address,
 }
 
 impl ContractsConfig {
@@ -91,7 +89,6 @@ impl ContractsConfig {
             state_transition_impl_addr: Some(Address::repeat_byte(0x17)),
             genesis_batch_commitment: Some(H256::repeat_byte(0x17)),
             genesis_protocol_version: Some(22),
-            nh_verifier_addr: Address::repeat_byte(0x18),
         }
     }
 }
diff --git a/core/lib/config/src/configs/mod.rs b/core/lib/config/src/configs/mod.rs
index bdea2f25..93116151 100644
--- a/core/lib/config/src/configs/mod.rs
+++ b/core/lib/config/src/configs/mod.rs
@@ -14,7 +14,6 @@ pub use self::{
     fri_witness_generator::FriWitnessGeneratorConfig,
     fri_witness_vector_generator::FriWitnessVectorGeneratorConfig,
     genesis::GenesisConfig,
-    new_horizen::NewHorizenConfig,
     object_store::ObjectStoreConfig,
     observability::{ObservabilityConfig, OpentelemetryConfig},
     proof_data_handler::ProofDataHandlerConfig,
@@ -40,7 +39,6 @@ pub mod fri_witness_generator;
 pub mod fri_witness_vector_generator;
 pub mod genesis;
 pub mod house_keeper;
-pub mod new_horizen;
 pub mod object_store;
 pub mod observability;
 pub mod proof_data_handler;
diff --git a/core/lib/config/src/configs/new_horizen.rs b/core/lib/config/src/configs/new_horizen.rs
deleted file mode 100644
index 0e2065f2..00000000
--- a/core/lib/config/src/configs/new_horizen.rs
+++ /dev/null
@@ -1,7 +0,0 @@
-use serde::Deserialize;
-
-#[derive(Debug, Deserialize, Clone, PartialEq)]
-pub struct NewHorizenConfig {
-    pub url: String,
-    pub seed_phrase: String,
-}
diff --git a/core/lib/config/src/testonly.rs b/core/lib/config/src/testonly.rs
index c289c94c..6ac8ef24 100644
--- a/core/lib/config/src/testonly.rs
+++ b/core/lib/config/src/testonly.rs
@@ -268,7 +268,6 @@ impl Distribution<configs::ContractsConfig> for EncodeDist {
             genesis_rollup_leaf_index: self.sample(rng),
             genesis_root: rng.gen(),
             genesis_protocol_version: self.sample(rng),
-            nh_verifier_addr: rng.gen(),
         }
     }
 }
diff --git a/core/lib/contracts/src/lib.rs b/core/lib/contracts/src/lib.rs
index 6b90bc2b..fe390b4c 100644
--- a/core/lib/contracts/src/lib.rs
+++ b/core/lib/contracts/src/lib.rs
@@ -39,8 +39,6 @@ const LOADNEXT_CONTRACT_FILE: &str =
     "etc/contracts-test-data/artifacts-zk/contracts/loadnext/loadnext_contract.sol/LoadnextContract.json";
 const LOADNEXT_SIMPLE_CONTRACT_FILE: &str =
     "etc/contracts-test-data/artifacts-zk/contracts/loadnext/loadnext_contract.sol/Foo.json";
-const NH_CONTRACT_FILE: &str =
-    "contracts/l1-contracts/artifacts/cache/solpp-generated-contracts/nh/NewHorizenProofVerifier.sol/NewHorizenProofVerifier.json";
 
 fn read_file_to_json_value(path: impl AsRef<Path>) -> serde_json::Value {
     let zksync_home = std::env::var("ZKSYNC_HOME").unwrap_or_else(|_| ".".into());
@@ -93,10 +91,6 @@ pub fn verifier_contract() -> Contract {
     load_contract(VERIFIER_CONTRACT_FILE)
 }
 
-pub fn nh_contract() -> Contract {
-    load_contract(NH_CONTRACT_FILE)
-}
-
 #[derive(Debug, Clone)]
 pub struct TestContract {
     /// Contract bytecode to be used for sending deploy transaction.
diff --git a/core/lib/dal/.sqlx/query-1b5fc4834d19bbbe29038f6b41e5ec96d5d60614f705c6286216a1938dd4af7e.json b/core/lib/dal/.sqlx/query-1b5fc4834d19bbbe29038f6b41e5ec96d5d60614f705c6286216a1938dd4af7e.json
deleted file mode 100644
index 905294e1..00000000
--- a/core/lib/dal/.sqlx/query-1b5fc4834d19bbbe29038f6b41e5ec96d5d60614f705c6286216a1938dd4af7e.json
+++ /dev/null
@@ -1,17 +0,0 @@
-{
-  "db_name": "PostgreSQL",
-  "query": "\n            UPDATE proof_generation_details\n            SET\n                status = $1,\n                updated_at = NOW(),\n                attestation_id = $3,\n                attestation_element = $4\n            WHERE\n                l1_batch_number = $2\n            ",
-  "describe": {
-    "columns": [],
-    "parameters": {
-      "Left": [
-        "Text",
-        "Int8",
-        "Numeric",
-        "Bytea"
-      ]
-    },
-    "nullable": []
-  },
-  "hash": "1b5fc4834d19bbbe29038f6b41e5ec96d5d60614f705c6286216a1938dd4af7e"
-}
diff --git a/core/lib/dal/.sqlx/query-26e0b7eb1871d94ddc98254fece6381a9c4165e2727542eaeef3bbedd13a4f20.json b/core/lib/dal/.sqlx/query-26e0b7eb1871d94ddc98254fece6381a9c4165e2727542eaeef3bbedd13a4f20.json
new file mode 100644
index 00000000..30738bc2
--- /dev/null
+++ b/core/lib/dal/.sqlx/query-26e0b7eb1871d94ddc98254fece6381a9c4165e2727542eaeef3bbedd13a4f20.json
@@ -0,0 +1,15 @@
+{
+  "db_name": "PostgreSQL",
+  "query": "\n            UPDATE proof_generation_details\n            SET\n                status = $1,\n                updated_at = NOW()\n            WHERE\n                l1_batch_number = $2\n            ",
+  "describe": {
+    "columns": [],
+    "parameters": {
+      "Left": [
+        "Text",
+        "Int8"
+      ]
+    },
+    "nullable": []
+  },
+  "hash": "26e0b7eb1871d94ddc98254fece6381a9c4165e2727542eaeef3bbedd13a4f20"
+}
diff --git a/core/lib/dal/.sqlx/query-4b6f731c3bb5a3271b3934ba950e0d7a90c95cc6f2d42535df4e26a263272772.json b/core/lib/dal/.sqlx/query-4b6f731c3bb5a3271b3934ba950e0d7a90c95cc6f2d42535df4e26a263272772.json
deleted file mode 100644
index 96876523..00000000
--- a/core/lib/dal/.sqlx/query-4b6f731c3bb5a3271b3934ba950e0d7a90c95cc6f2d42535df4e26a263272772.json
+++ /dev/null
@@ -1,15 +0,0 @@
-{
-  "db_name": "PostgreSQL",
-  "query": "\n            INSERT INTO\n                new_horizen_attestation (attestation_id, attestation)\n            VALUES\n                ($1, $2)\n            ON CONFLICT (attestation_id) DO NOTHING\n            ",
-  "describe": {
-    "columns": [],
-    "parameters": {
-      "Left": [
-        "Numeric",
-        "Bytea"
-      ]
-    },
-    "nullable": []
-  },
-  "hash": "4b6f731c3bb5a3271b3934ba950e0d7a90c95cc6f2d42535df4e26a263272772"
-}
diff --git a/core/lib/dal/.sqlx/query-7257b4ed7dbc1462b8a3e609b9f87510f800e961d78e7b14120672f4140518db.json b/core/lib/dal/.sqlx/query-7257b4ed7dbc1462b8a3e609b9f87510f800e961d78e7b14120672f4140518db.json
deleted file mode 100644
index fc03b65e..00000000
--- a/core/lib/dal/.sqlx/query-7257b4ed7dbc1462b8a3e609b9f87510f800e961d78e7b14120672f4140518db.json
+++ /dev/null
@@ -1,17 +0,0 @@
-{
-  "db_name": "PostgreSQL",
-  "query": "\n            UPDATE proof_generation_details\n            SET\n                status = $1,\n                updated_at = NOW(),\n                attestation_id = $3,\n                attestation = $4\n            WHERE\n                l1_batch_number = $2\n            ",
-  "describe": {
-    "columns": [],
-    "parameters": {
-      "Left": [
-        "Text",
-        "Int8",
-        "Numeric",
-        "Bytea"
-      ]
-    },
-    "nullable": []
-  },
-  "hash": "7257b4ed7dbc1462b8a3e609b9f87510f800e961d78e7b14120672f4140518db"
-}
diff --git a/core/lib/dal/.sqlx/query-7598cd78c06ac496823bd793669c51a089116b40fcee006c6980bf555d099441.json b/core/lib/dal/.sqlx/query-7598cd78c06ac496823bd793669c51a089116b40fcee006c6980bf555d099441.json
deleted file mode 100644
index eb009b92..00000000
--- a/core/lib/dal/.sqlx/query-7598cd78c06ac496823bd793669c51a089116b40fcee006c6980bf555d099441.json
+++ /dev/null
@@ -1,28 +0,0 @@
-{
-  "db_name": "PostgreSQL",
-  "query": "\n            SELECT\n                attestation_id,\n                attestation\n            FROM\n                new_horizen_attestation\n            WHERE\n                attestation_id = ($1)\n            ",
-  "describe": {
-    "columns": [
-      {
-        "ordinal": 0,
-        "name": "attestation_id",
-        "type_info": "Numeric"
-      },
-      {
-        "ordinal": 1,
-        "name": "attestation",
-        "type_info": "Bytea"
-      }
-    ],
-    "parameters": {
-      "Left": [
-        "Numeric"
-      ]
-    },
-    "nullable": [
-      false,
-      false
-    ]
-  },
-  "hash": "7598cd78c06ac496823bd793669c51a089116b40fcee006c6980bf555d099441"
-}
diff --git a/core/lib/dal/.sqlx/query-8cb3c9fc81a686c93bf8c2fbf07457171de4ffce0622860109b201c76548aa9c.json b/core/lib/dal/.sqlx/query-8cb3c9fc81a686c93bf8c2fbf07457171de4ffce0622860109b201c76548aa9c.json
deleted file mode 100644
index 39a01553..00000000
--- a/core/lib/dal/.sqlx/query-8cb3c9fc81a686c93bf8c2fbf07457171de4ffce0622860109b201c76548aa9c.json
+++ /dev/null
@@ -1,22 +0,0 @@
-{
-  "db_name": "PostgreSQL",
-  "query": "\n            SELECT\n                attestation_element\n            FROM\n                proof_generation_details\n            WHERE\n                l1_batch_number = $1\n            ",
-  "describe": {
-    "columns": [
-      {
-        "ordinal": 0,
-        "name": "attestation_element",
-        "type_info": "Bytea"
-      }
-    ],
-    "parameters": {
-      "Left": [
-        "Int8"
-      ]
-    },
-    "nullable": [
-      true
-    ]
-  },
-  "hash": "8cb3c9fc81a686c93bf8c2fbf07457171de4ffce0622860109b201c76548aa9c"
-}
diff --git a/core/lib/dal/.sqlx/query-9984cbf2aafbd481382f9d5a4d4f40a0bd18c296d484f256774ffb585e9b4fa6.json b/core/lib/dal/.sqlx/query-9984cbf2aafbd481382f9d5a4d4f40a0bd18c296d484f256774ffb585e9b4fa6.json
deleted file mode 100644
index e86eb5ac..00000000
--- a/core/lib/dal/.sqlx/query-9984cbf2aafbd481382f9d5a4d4f40a0bd18c296d484f256774ffb585e9b4fa6.json
+++ /dev/null
@@ -1,22 +0,0 @@
-{
-  "db_name": "PostgreSQL",
-  "query": "\n            SELECT\n                attestation\n            FROM\n                proof_generation_details\n            WHERE\n                l1_batch_number = $1\n            ",
-  "describe": {
-    "columns": [
-      {
-        "ordinal": 0,
-        "name": "attestation",
-        "type_info": "Bytea"
-      }
-    ],
-    "parameters": {
-      "Left": [
-        "Int8"
-      ]
-    },
-    "nullable": [
-      true
-    ]
-  },
-  "hash": "9984cbf2aafbd481382f9d5a4d4f40a0bd18c296d484f256774ffb585e9b4fa6"
-}
diff --git a/core/lib/dal/.sqlx/query-a9a3c5c4d875af8557139a6ca92341f24b61b34e72912000351fe7364a539515.json b/core/lib/dal/.sqlx/query-a9a3c5c4d875af8557139a6ca92341f24b61b34e72912000351fe7364a539515.json
deleted file mode 100644
index e8778104..00000000
--- a/core/lib/dal/.sqlx/query-a9a3c5c4d875af8557139a6ca92341f24b61b34e72912000351fe7364a539515.json
+++ /dev/null
@@ -1,28 +0,0 @@
-{
-  "db_name": "PostgreSQL",
-  "query": "\n            SELECT\n                attestation_id,\n                attestation\n            FROM\n                new_horizen_attestation\n            WHERE\n                attestation_id = (\n                    SELECT\n                        attestation_id\n                    FROM\n                        proof_generation_details\n                    WHERE\n                        l1_batch_number = $1\n                )\n            ",
-  "describe": {
-    "columns": [
-      {
-        "ordinal": 0,
-        "name": "attestation_id",
-        "type_info": "Numeric"
-      },
-      {
-        "ordinal": 1,
-        "name": "attestation",
-        "type_info": "Bytea"
-      }
-    ],
-    "parameters": {
-      "Left": [
-        "Int8"
-      ]
-    },
-    "nullable": [
-      false,
-      false
-    ]
-  },
-  "hash": "a9a3c5c4d875af8557139a6ca92341f24b61b34e72912000351fe7364a539515"
-}
diff --git a/core/lib/dal/Cargo.toml b/core/lib/dal/Cargo.toml
index 7e058b9f..034f252f 100644
--- a/core/lib/dal/Cargo.toml
+++ b/core/lib/dal/Cargo.toml
@@ -21,7 +21,6 @@ zksync_consensus_roles.workspace = true
 zksync_consensus_storage.workspace = true
 zksync_protobuf.workspace = true
 zksync_db_connection.workspace = true
-zksync_basic_types.workspace = true
 
 itertools.workspace = true
 thiserror.workspace = true
diff --git a/core/lib/dal/migrations/20240420173835_new_horizen_attestation.sql b/core/lib/dal/migrations/20240420173835_new_horizen_attestation.sql
deleted file mode 100644
index 0bff91cf..00000000
--- a/core/lib/dal/migrations/20240420173835_new_horizen_attestation.sql
+++ /dev/null
@@ -1,8 +0,0 @@
-CREATE TABLE new_horizen_attestation
-(
-    attestation_id          NUMERIC(80) NOT NULL PRIMARY KEY,
-    attestation             BYTEA NOT NULL
-);
-
-ALTER TABLE proof_generation_details ADD attestation_id NUMERIC(80);
-ALTER TABLE proof_generation_details ADD attestation_element BYTEA;
\ No newline at end of file
diff --git a/core/lib/dal/src/lib.rs b/core/lib/dal/src/lib.rs
index 6e76b50b..37fc8d49 100644
--- a/core/lib/dal/src/lib.rs
+++ b/core/lib/dal/src/lib.rs
@@ -12,8 +12,7 @@ use crate::{
     blocks_web3_dal::BlocksWeb3Dal, consensus_dal::ConsensusDal,
     contract_verification_dal::ContractVerificationDal, eth_sender_dal::EthSenderDal,
     events_dal::EventsDal, events_web3_dal::EventsWeb3Dal, factory_deps_dal::FactoryDepsDal,
-    nh_dal::NewHorizenDal, proof_generation_dal::ProofGenerationDal,
-    protocol_versions_dal::ProtocolVersionsDal,
+    proof_generation_dal::ProofGenerationDal, protocol_versions_dal::ProtocolVersionsDal,
     protocol_versions_web3_dal::ProtocolVersionsWeb3Dal,
     snapshot_recovery_dal::SnapshotRecoveryDal, snapshots_creator_dal::SnapshotsCreatorDal,
     snapshots_dal::SnapshotsDal, storage_logs_dal::StorageLogsDal,
@@ -33,7 +32,6 @@ pub mod events_dal;
 pub mod events_web3_dal;
 pub mod factory_deps_dal;
 mod models;
-pub mod nh_dal;
 pub mod proof_generation_dal;
 pub mod protocol_versions_dal;
 pub mod protocol_versions_web3_dal;
@@ -118,8 +116,6 @@ where
     fn snapshots_creator_dal(&mut self) -> SnapshotsCreatorDal<'_, 'a>;
 
     fn snapshot_recovery_dal(&mut self) -> SnapshotRecoveryDal<'_, 'a>;
-
-    fn nh_dal(&mut self) -> NewHorizenDal<'_, 'a>;
 }
 
 #[derive(Clone, Debug)]
@@ -230,8 +226,4 @@ impl<'a> CoreDal<'a> for Connection<'a, Core> {
     fn snapshot_recovery_dal(&mut self) -> SnapshotRecoveryDal<'_, 'a> {
         SnapshotRecoveryDal { storage: self }
     }
-
-    fn nh_dal(&mut self) -> NewHorizenDal<'_, 'a> {
-        NewHorizenDal { storage: self }
-    }
 }
diff --git a/core/lib/dal/src/nh_dal.rs b/core/lib/dal/src/nh_dal.rs
deleted file mode 100644
index dccc7685..00000000
--- a/core/lib/dal/src/nh_dal.rs
+++ /dev/null
@@ -1,80 +0,0 @@
-use bigdecimal::BigDecimal;
-use zksync_basic_types::H256;
-use zksync_db_connection::connection::Connection;
-use zksync_types::{l1::NHAttestation, L1BatchNumber};
-use zksync_utils::{bigdecimal_to_u256, u256_to_big_decimal};
-
-use crate::Core;
-
-#[derive(Debug)]
-pub struct NewHorizenDal<'a, 'c> {
-    pub(crate) storage: &'a mut Connection<'c, Core>,
-}
-
-#[derive(sqlx::FromRow, Debug, Clone)]
-pub struct StorageNHAttestation {
-    pub attestation_id: BigDecimal,
-    pub attestation: Vec<u8>,
-}
-
-impl NewHorizenDal<'_, '_> {
-    pub async fn insert_nh_attestation(&mut self, nh_attestation: &NHAttestation) {
-        sqlx::query!(
-            r#"
-            INSERT INTO
-                new_horizen_attestation (attestation_id, attestation)
-            VALUES
-                ($1, $2)
-            ON CONFLICT (attestation_id) DO NOTHING
-            "#,
-            u256_to_big_decimal(nh_attestation.attestation_id),
-            nh_attestation.proofs_attestation.as_bytes(),
-        )
-        .execute(self.storage.conn())
-        .await
-        .unwrap();
-    }
-
-    pub async fn get_nh_attestation_from_batch_number(
-        &mut self,
-        block_number: L1BatchNumber,
-    ) -> Option<NHAttestation> {
-        let result = sqlx::query_as!(
-            StorageNHAttestation,
-            r#"
-            SELECT
-                attestation_id,
-                attestation
-            FROM
-                new_horizen_attestation
-            WHERE
-                attestation_id = (
-                    SELECT
-                        attestation_id
-                    FROM
-                        proof_generation_details
-                    WHERE
-                        l1_batch_number = $1
-                )
-            "#,
-            i64::from(block_number.0),
-        )
-        .fetch_optional(self.storage.conn())
-        .await
-        .unwrap();
-
-        let nh_attestation: Option<NHAttestation> = match result {
-            Some(attestation) => {
-                let attestation_id = bigdecimal_to_u256(attestation.attestation_id);
-                let proofs_attestation = H256::from_slice(&attestation.attestation);
-                Some(NHAttestation {
-                    attestation_id,
-                    proofs_attestation,
-                })
-            }
-            _ => None,
-        };
-
-        nh_attestation
-    }
-}
diff --git a/core/lib/dal/src/proof_generation_dal.rs b/core/lib/dal/src/proof_generation_dal.rs
index 0c23d338..5c173475 100644
--- a/core/lib/dal/src/proof_generation_dal.rs
+++ b/core/lib/dal/src/proof_generation_dal.rs
@@ -3,8 +3,7 @@ use std::time::Duration;
 
 use strum::{Display, EnumString};
 use zksync_db_connection::{connection::Connection, utils::pg_interval_from_duration};
-use zksync_types::{L1BatchNumber, H256, U256};
-use zksync_utils::u256_to_big_decimal;
+use zksync_types::L1BatchNumber;
 
 use crate::{Core, SqlxError};
 
@@ -119,25 +118,19 @@ impl ProofGenerationDal<'_, '_> {
 
     pub async fn mark_proof_generation_job_as_skipped(
         &mut self,
-        batch_number: L1BatchNumber,
-        attestation_id: u64,
-        attestation_element: H256,
+        block_number: L1BatchNumber,
     ) -> Result<(), SqlxError> {
         sqlx::query!(
             r#"
             UPDATE proof_generation_details
             SET
                 status = $1,
-                updated_at = NOW(),
-                attestation_id = $3,
-                attestation_element = $4
+                updated_at = NOW()
             WHERE
                 l1_batch_number = $2
             "#,
             ProofGenerationJobStatus::Skipped.to_string(),
-            i64::from(batch_number.0),
-            u256_to_big_decimal(U256::from(attestation_id)),
-            attestation_element.as_bytes(),
+            i64::from(block_number.0)
         )
         .execute(self.storage.conn())
         .await?
@@ -147,27 +140,6 @@ impl ProofGenerationDal<'_, '_> {
         .ok_or(sqlx::Error::RowNotFound)
     }
 
-    pub async fn get_nh_attestation_element_from_batch_number(
-        &mut self,
-        batch_number: L1BatchNumber,
-    ) -> sqlx::Result<Option<H256>> {
-        Ok(sqlx::query!(
-            r#"
-            SELECT
-                attestation_element
-            FROM
-                proof_generation_details
-            WHERE
-                l1_batch_number = $1
-            "#,
-            i64::from(batch_number.0),
-        )
-        .fetch_optional(self.storage.conn())
-        .await?
-        .and_then(|row| row.attestation_element)
-        .map(|attestation| H256::from_slice(&attestation)))
-    }
-
     pub async fn get_oldest_unpicked_batch(&mut self) -> Option<L1BatchNumber> {
         let result: Option<L1BatchNumber> = sqlx::query!(
             r#"
diff --git a/core/lib/env_config/src/contracts.rs b/core/lib/env_config/src/contracts.rs
index 98793487..6c50b830 100644
--- a/core/lib/env_config/src/contracts.rs
+++ b/core/lib/env_config/src/contracts.rs
@@ -75,7 +75,6 @@ mod tests {
                 "0x4be443afd605a782b6e56d199df2460a025c81b3dea144e135bece83612563f2",
             ),
             genesis_protocol_version: Some(22),
-            nh_verifier_addr: addr("0x1bccc36e10a911f7209425271e66e606e95dafc5"),
         }
     }
 
diff --git a/core/lib/env_config/src/lib.rs b/core/lib/env_config/src/lib.rs
index 061b2917..edc768b0 100644
--- a/core/lib/env_config/src/lib.rs
+++ b/core/lib/env_config/src/lib.rs
@@ -17,7 +17,6 @@ mod fri_prover_group;
 mod fri_witness_generator;
 mod fri_witness_vector_generator;
 mod house_keeper;
-mod new_horizen;
 pub mod object_store;
 mod observability;
 mod proof_data_handler;
diff --git a/core/lib/env_config/src/new_horizen.rs b/core/lib/env_config/src/new_horizen.rs
deleted file mode 100644
index 1d300a56..00000000
--- a/core/lib/env_config/src/new_horizen.rs
+++ /dev/null
@@ -1,36 +0,0 @@
-use zksync_config::configs::NewHorizenConfig;
-
-use crate::{envy_load, FromEnv};
-
-impl FromEnv for NewHorizenConfig {
-    fn from_env() -> anyhow::Result<Self> {
-        envy_load("new_horizen", "NEW_HORIZEN_")
-    }
-}
-
-#[cfg(test)]
-mod tests {
-    use super::*;
-    use crate::test_utils::EnvMutex;
-
-    static MUTEX: EnvMutex = EnvMutex::new();
-
-    fn expected_config() -> NewHorizenConfig {
-        NewHorizenConfig {
-            url: "ws://127.0.0.1:9944".to_string(),
-            seed_phrase: "test test test".to_string(),
-        }
-    }
-
-    #[test]
-    fn from_env() {
-        let config = r#"
-            NEW_HORIZEN_URL="ws://127.0.0.1:9944"
-            NEW_HORIZEN_SEED_PHRASE="test test test"
-        "#;
-        let mut lock = MUTEX.lock();
-        lock.set_env(config);
-        let actual = NewHorizenConfig::from_env().unwrap();
-        assert_eq!(actual, expected_config());
-    }
-}
diff --git a/core/lib/l1_contract_interface/src/i_executor/methods/mod.rs b/core/lib/l1_contract_interface/src/i_executor/methods/mod.rs
index f7e778d2..9981656b 100644
--- a/core/lib/l1_contract_interface/src/i_executor/methods/mod.rs
+++ b/core/lib/l1_contract_interface/src/i_executor/methods/mod.rs
@@ -3,7 +3,7 @@
 pub use self::{
     commit_batches::{CommitBatchesRollup, CommitBatchesValidium},
     execute_batches::ExecuteBatches,
-    prove_batches::{NewHorizenProof, ProveBatches},
+    prove_batches::ProveBatches,
 };
 
 mod commit_batches;
diff --git a/core/lib/l1_contract_interface/src/i_executor/methods/prove_batches.rs b/core/lib/l1_contract_interface/src/i_executor/methods/prove_batches.rs
index 1879d4e4..20daf12f 100644
--- a/core/lib/l1_contract_interface/src/i_executor/methods/prove_batches.rs
+++ b/core/lib/l1_contract_interface/src/i_executor/methods/prove_batches.rs
@@ -11,115 +11,59 @@ use crate::{i_executor::structures::StoredBatchInfo, Tokenize};
 pub struct ProveBatches {
     pub prev_l1_batch: L1BatchWithMetadata,
     pub l1_batches: Vec<L1BatchWithMetadata>,
-    pub proofs: Proof,
+    pub proofs: Vec<L1BatchProofForL1>,
     pub should_verify: bool,
 }
 
-#[derive(Debug, Clone, Default)]
-pub struct NewHorizenProof {
-    pub attestation_id: u64,
-    pub merkle_path: Vec<U256>,
-    pub leaf_count: u32,
-    pub index: u32,
-}
-
-#[derive(Debug, Clone)]
-pub enum Proof {
-    Proof(Vec<L1BatchProofForL1>),
-    NewHorizenProof(NewHorizenProof),
-}
-
-impl Default for Proof {
-    fn default() -> Self {
-        Proof::Proof(Vec::new())
-    }
-}
-
-impl From<Vec<L1BatchProofForL1>> for Proof {
-    fn from(value: Vec<L1BatchProofForL1>) -> Self {
-        Proof::Proof(value)
-    }
-}
-
-impl From<NewHorizenProof> for Proof {
-    fn from(value: NewHorizenProof) -> Self {
-        Proof::NewHorizenProof(value)
-    }
-}
-
-impl Tokenize for NewHorizenProof {
-    fn into_tokens(self) -> Vec<Token> {
-        vec![Token::Tuple(vec![
-            Token::Uint(self.attestation_id.into()),
-            Token::Array(self.merkle_path.into_iter().map(Token::Uint).collect()),
-            Token::Uint(self.leaf_count.into()),
-            Token::Uint(self.index.into()),
-        ])]
-    }
-}
-
-#[derive(Default)]
-struct Zkproof(Vec<L1BatchProofForL1>);
-
-impl Tokenize for Zkproof {
-    fn into_tokens(self) -> Vec<Token> {
-        let proofs = self.0;
-
-        let proof = match proofs.first() {
-            Some(L1BatchProofForL1 {
-                scheduler_proof, ..
-            }) => {
-                let (_, proof) = serialize_proof(scheduler_proof);
-                proof.into_iter().map(Token::Uint).collect()
-            }
-            None => Vec::new(),
-        };
-
-        vec![Token::Tuple(vec![
-            Token::Array(Vec::new()),
-            Token::Array(proof),
-        ])]
-    }
-}
-
 impl Tokenize for ProveBatches {
     fn into_tokens(self) -> Vec<Token> {
-        let ProveBatches {
-            prev_l1_batch,
-            l1_batches,
-            proofs,
-            should_verify,
-        } = self;
-        let prev_l1_batch = StoredBatchInfo(&prev_l1_batch).into_token();
-        let batches_arg = l1_batches
+        let prev_l1_batch = StoredBatchInfo(&self.prev_l1_batch).into_token();
+        let batches_arg = self
+            .l1_batches
             .iter()
             .map(|batch| StoredBatchInfo(batch).into_token())
             .collect();
         let batches_arg = Token::Array(batches_arg);
 
-        if should_verify {
+        if self.should_verify {
             // currently we only support submitting a single proof
-            assert_eq!(l1_batches.len(), 1);
-            let proof_input = match proofs {
-                Proof::Proof(p) => [
-                    Zkproof(p).into_tokens(),
-                    NewHorizenProof::default().into_tokens(),
-                ]
-                .concat(),
-                Proof::NewHorizenProof(p) => {
-                    [Zkproof::default().into_tokens(), p.into_tokens()].concat()
-                }
+            assert_eq!(self.proofs.len(), 1);
+            assert_eq!(self.l1_batches.len(), 1);
+
+            let L1BatchProofForL1 {
+                aggregation_result_coords,
+                scheduler_proof,
+            } = self.proofs.first().unwrap();
+
+            let (_, proof) = serialize_proof(scheduler_proof);
+
+            let aggregation_result_coords = if self.l1_batches[0]
+                .header
+                .protocol_version
+                .unwrap()
+                .is_pre_boojum()
+            {
+                Token::Array(
+                    aggregation_result_coords
+                        .iter()
+                        .map(|bytes| Token::Uint(U256::from_big_endian(bytes)))
+                        .collect(),
+                )
+            } else {
+                Token::Array(Vec::new())
             };
-            assert_eq!(proof_input.len(), 2);
+            let proof_input = Token::Tuple(vec![
+                aggregation_result_coords,
+                Token::Array(proof.into_iter().map(Token::Uint).collect()),
+            ]);
 
-            [vec![prev_l1_batch, batches_arg], proof_input].concat()
+            vec![prev_l1_batch, batches_arg, proof_input]
         } else {
-            [
-                vec![prev_l1_batch, batches_arg],
-                Zkproof::default().into_tokens(),
-                NewHorizenProof::default().into_tokens(),
+            vec![
+                prev_l1_batch,
+                batches_arg,
+                Token::Tuple(vec![Token::Array(vec![]), Token::Array(vec![])]),
             ]
-            .concat()
         }
     }
 }
diff --git a/core/lib/protobuf_config/src/contracts.rs b/core/lib/protobuf_config/src/contracts.rs
index 0c6227d7..05cba0a1 100644
--- a/core/lib/protobuf_config/src/contracts.rs
+++ b/core/lib/protobuf_config/src/contracts.rs
@@ -144,9 +144,6 @@ impl ProtoRepr for proto::Contracts {
                 .transpose()
                 .context("genesis_root")?,
             genesis_protocol_version: self.genesis_protocol_version.map(|a| a as u16),
-            nh_verifier_addr: required(&self.nh_verifier_addr)
-                .and_then(|x| parse_h160(x))
-                .context("nh_verifier_addr")?,
         })
     }
 
@@ -225,7 +222,6 @@ impl ProtoRepr for proto::Contracts {
                 .map(|x| x.as_bytes().into()),
             genesis_rollup_leaf_index: this.genesis_rollup_leaf_index,
             genesis_protocol_version: this.genesis_protocol_version.map(|a| a as u32),
-            nh_verifier_addr: Some(this.nh_verifier_addr.as_bytes().into()),
         }
     }
 }
diff --git a/core/lib/protobuf_config/src/lib.rs b/core/lib/protobuf_config/src/lib.rs
index 9315d8fc..573cc3ca 100644
--- a/core/lib/protobuf_config/src/lib.rs
+++ b/core/lib/protobuf_config/src/lib.rs
@@ -20,7 +20,6 @@ mod fri_prover_group;
 mod fri_witness_generator;
 mod fri_witness_vector_generator;
 mod house_keeper;
-mod new_horizen;
 mod object_store;
 mod observability;
 mod proof_data_handler;
diff --git a/core/lib/protobuf_config/src/new_horizen.rs b/core/lib/protobuf_config/src/new_horizen.rs
deleted file mode 100644
index 1fdb757b..00000000
--- a/core/lib/protobuf_config/src/new_horizen.rs
+++ /dev/null
@@ -1,26 +0,0 @@
-use anyhow::Context as _;
-use zksync_config::configs;
-use zksync_protobuf::{repr::ProtoRepr, required};
-
-use crate::proto::new_horizen as proto;
-
-impl ProtoRepr for proto::NewHorizen {
-    type Type = configs::NewHorizenConfig;
-    fn read(&self) -> anyhow::Result<Self::Type> {
-        Ok(Self::Type {
-            url: required(&self.url)
-                .and_then(|x| Ok((*x.as_str()).try_into()?))
-                .context("url")?,
-            seed_phrase: required(&self.seed_phrase)
-                .and_then(|x| Ok((*x.as_str()).try_into()?))
-                .context("seed_phrase")?,
-        })
-    }
-
-    fn build(this: &Self::Type) -> Self {
-        Self {
-            url: Some(this.url.as_str().into()),
-            seed_phrase: Some(this.seed_phrase.as_str().into()),
-        }
-    }
-}
diff --git a/core/lib/protobuf_config/src/proto/contracts.proto b/core/lib/protobuf_config/src/proto/contracts.proto
index fff76a4d..99484bc3 100644
--- a/core/lib/protobuf_config/src/proto/contracts.proto
+++ b/core/lib/protobuf_config/src/proto/contracts.proto
@@ -39,5 +39,4 @@ message Contracts {
     optional uint64 genesis_rollup_leaf_index = 35; // optional;
     optional bytes genesis_batch_commitment = 36; // optional; h256
     optional uint32 genesis_protocol_version= 37; // optional;
-    optional bytes nh_verifier_addr = 38; // required; H160
 }
diff --git a/core/lib/protobuf_config/src/proto/new_horizen.proto b/core/lib/protobuf_config/src/proto/new_horizen.proto
deleted file mode 100644
index fc3261ff..00000000
--- a/core/lib/protobuf_config/src/proto/new_horizen.proto
+++ /dev/null
@@ -1,8 +0,0 @@
-syntax = "proto3";
-
-package zksync.config.new_horizen;
-
-message NewHorizen {
-  optional string url = 1; // required; string
-  optional string seed_phrase = 2; // required; string
-}
diff --git a/core/lib/types/src/l1/error.rs b/core/lib/types/src/l1/error.rs
index 725d74fa..d33b5765 100644
--- a/core/lib/types/src/l1/error.rs
+++ b/core/lib/types/src/l1/error.rs
@@ -11,11 +11,3 @@ pub enum L1TxParseError {
     #[error("Ethereum ABI error: {0}")]
     AbiError(#[from] crate::ethabi::Error),
 }
-
-#[derive(Debug, Error)]
-pub enum NewHorizenParseError {
-    #[error("Failed to parse NewHorizen attestation")]
-    NewHorizenParseFailed,
-    #[error("Ethereum ABI error: {0}")]
-    AbiError(#[from] crate::ethabi::Error),
-}
diff --git a/core/lib/types/src/l1/mod.rs b/core/lib/types/src/l1/mod.rs
index 567b1f67..b4b28058 100644
--- a/core/lib/types/src/l1/mod.rs
+++ b/core/lib/types/src/l1/mod.rs
@@ -1,10 +1,10 @@
 //! Definition of zkSync network priority operations: operations initiated from the L1.
 
-use std::{convert::TryFrom, fmt};
+use std::convert::TryFrom;
 
 use serde::{Deserialize, Serialize};
 use zksync_basic_types::{
-    ethabi::{decode, ethereum_types::BigEndianHash, ParamType, Token},
+    ethabi::{decode, ParamType, Token},
     Address, L1BlockNumber, Log, PriorityOpId, H160, H256, U256,
 };
 use zksync_utils::u256_to_account_address;
@@ -12,7 +12,7 @@ use zksync_utils::u256_to_account_address;
 use super::Transaction;
 use crate::{
     helpers::unix_timestamp_ms,
-    l1::error::{L1TxParseError, NewHorizenParseError},
+    l1::error::L1TxParseError,
     l2::TransactionType,
     priority_op_onchain_data::{PriorityOpOnchainData, PriorityOpOnchainMetadata},
     tx::Execute,
@@ -351,29 +351,3 @@ impl TryFrom<Log> for L1Tx {
         })
     }
 }
-
-#[derive(Debug, Clone, Serialize, Deserialize)]
-pub struct NHAttestation {
-    pub attestation_id: U256,
-    pub proofs_attestation: H256,
-}
-
-impl TryFrom<Log> for NHAttestation {
-    type Error = NewHorizenParseError;
-
-    fn try_from(event: Log) -> Result<Self, Self::Error> {
-        let attestation_id = event.topics.get(1).unwrap().into_uint();
-        let attestation = event.topics.get(2).unwrap();
-
-        Ok(Self {
-            attestation_id,
-            proofs_attestation: attestation.clone(),
-        })
-    }
-}
-
-impl fmt::Display for NHAttestation {
-    fn fmt(&self, formatter: &mut fmt::Formatter<'_>) -> fmt::Result {
-        write!(formatter, "NHAttestation ID: {}", self.attestation_id)
-    }
-}
diff --git a/core/lib/zksync_core/Cargo.toml b/core/lib/zksync_core/Cargo.toml
index 2d7836f7..5623ddcb 100644
--- a/core/lib/zksync_core/Cargo.toml
+++ b/core/lib/zksync_core/Cargo.toml
@@ -37,7 +37,6 @@ zksync_merkle_tree.workspace = true
 zksync_mini_merkle_tree.workspace = true
 prometheus_exporter.workspace = true
 zksync_prover_interface.workspace = true
-zksync_basic_types.workspace = true
 zksync_web3_decl = { workspace = true, features = [
     "server",
     "client",
@@ -77,7 +76,6 @@ thiserror.workspace = true
 async-trait.workspace = true
 bitflags.workspace = true
 thread_local.workspace = true
-bincode.workspace = true
 
 reqwest = { workspace = true, features = ["blocking", "json"] }
 hex.workspace = true
@@ -93,12 +91,6 @@ axum = { workspace = true,features = [
 once_cell.workspace = true
 
 tracing.workspace = true
-num-bigint = "0.4"
-crypto_codegen.workspace = true
-
-subxt = { version = "0.32.1", features = ["substrate-compat"] }
-subxt-signer = { version = "0.32.1", features = ["subxt"] }
-hex-literal = "0.4.1"
 
 [dev-dependencies]
 zksync_test_account.workspace = true
diff --git a/core/lib/zksync_core/src/eth_sender/aggregator.rs b/core/lib/zksync_core/src/eth_sender/aggregator.rs
index 4586bba3..ce2d4ee4 100644
--- a/core/lib/zksync_core/src/eth_sender/aggregator.rs
+++ b/core/lib/zksync_core/src/eth_sender/aggregator.rs
@@ -1,13 +1,9 @@
-use core::fmt::Debug;
 use std::sync::Arc;
 
-use subxt::{OnlineClient, PolkadotConfig};
 use zksync_config::configs::eth_sender::{ProofLoadingMode, ProofSendingMode, SenderConfig};
 use zksync_contracts::BaseSystemContractsHashes;
 use zksync_dal::{Connection, Core, CoreDal};
-use zksync_l1_contract_interface::i_executor::methods::{
-    ExecuteBatches, NewHorizenProof, ProveBatches,
-};
+use zksync_l1_contract_interface::i_executor::methods::{ExecuteBatches, ProveBatches};
 use zksync_object_store::{ObjectStore, ObjectStoreError};
 use zksync_prover_interface::outputs::L1BatchProofForL1;
 use zksync_types::{
@@ -15,7 +11,6 @@ use zksync_types::{
     helpers::unix_timestamp_ms, protocol_version::L1VerifierConfig, pubdata_da::PubdataDA,
     L1BatchNumber, ProtocolVersionId,
 };
-use zksync_utils::h256_to_u256;
 
 use super::{
     aggregated_operations::AggregatedOperation,
@@ -26,9 +21,7 @@ use super::{
     },
 };
 
-#[subxt::subxt(runtime_metadata_path = "../../../etc/nh/metadata.scale")]
-pub mod nh {}
-
+#[derive(Debug)]
 pub struct Aggregator {
     commit_criteria: Vec<Box<dyn L1BatchPublishCriterion>>,
     proof_criteria: Vec<Box<dyn L1BatchPublishCriterion>>,
@@ -42,21 +35,6 @@ pub struct Aggregator {
     /// transactions.
     operate_4844_mode: bool,
     pubdata_da: PubdataDA,
-    nh_client: Option<OnlineClient<PolkadotConfig>>,
-}
-
-impl Debug for Aggregator {
-    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
-        f.debug_struct("Aggregator")
-            .field("commit_criteria", &self.commit_criteria)
-            .field("proof_criteria", &self.proof_criteria)
-            .field("execute_criteria", &self.execute_criteria)
-            .field("config", &self.config)
-            .field("blob_store", &self.blob_store)
-            .field("operate_4844_mode", &self.operate_4844_mode)
-            .field("pubdata_da", &self.pubdata_da)
-            .finish()
-    }
 }
 
 impl Aggregator {
@@ -66,7 +44,6 @@ impl Aggregator {
         operate_4844_mode: bool,
         pubdata_da: PubdataDA,
         l1_batch_commit_data_generator: Arc<dyn L1BatchCommitDataGenerator>,
-        nh_client: Option<OnlineClient<PolkadotConfig>>,
     ) -> Self {
         Self {
             commit_criteria: vec![
@@ -127,7 +104,6 @@ impl Aggregator {
             blob_store,
             operate_4844_mode,
             pubdata_da,
-            nh_client,
         }
     }
 
@@ -217,6 +193,7 @@ impl Aggregator {
             .get_last_committed_to_eth_l1_batch()
             .await
             .unwrap()?;
+
         let ready_for_commit_l1_batches = if protocol_version_id.is_pre_boojum() {
             blocks_dal
                 .pre_boojum_get_ready_for_commit_l1_batches(
@@ -309,11 +286,10 @@ impl Aggregator {
 
     async fn load_real_proof_operation(
         storage: &mut Connection<'_, Core>,
-        _l1_verifier_config: L1VerifierConfig,
-        _proof_loading_mode: &ProofLoadingMode,
-        _blob_store: &dyn ObjectStore,
+        l1_verifier_config: L1VerifierConfig,
+        proof_loading_mode: &ProofLoadingMode,
+        blob_store: &dyn ObjectStore,
         is_4844_mode: bool,
-        nh_client: Option<OnlineClient<PolkadotConfig>>,
     ) -> Option<ProveBatches> {
         let previous_proven_batch_number = storage
             .blocks_dal()
@@ -346,105 +322,59 @@ impl Aggregator {
             .await
             .unwrap()
         {
-            let _verifier_config_for_next_batch = storage
+            let verifier_config_for_next_batch = storage
                 .protocol_versions_dal()
                 .l1_verifier_config_for_version(version_id)
                 .await
                 .unwrap();
-            //println!(
-            //    "verifier_config_for_next_batch {:?}, l1_verifier_config {:?}",
-            //    verifier_config_for_next_batch, l1_verifier_config
-            //);
-            //TODO: readd
-            //if verifier_config_for_next_batch != l1_verifier_config {
-            //    return None;
-            //}
+            if verifier_config_for_next_batch != l1_verifier_config {
+                return None;
+            }
         }
-        println!("Batch to prove {:?}", batch_to_prove);
-        match storage
-            .nh_dal()
-            .get_nh_attestation_from_batch_number(batch_to_prove)
-            .await
-        {
-            Some(attestation) => {
-                tracing::info!(
-                    "Found Attestation: {:?} with ID: {:?}",
-                    attestation.proofs_attestation,
-                    attestation.attestation_id
-                );
-
-                let attestation_element = storage
-                    .proof_generation_dal()
-                    .get_nh_attestation_element_from_batch_number(batch_to_prove)
-                    .await
-                    .map_err(|err| eprintln!("Failed to get the NH attestation element: {err:?}"))
-                    .ok()?
-                    .unwrap();
-
-                let nh_runtime_api = nh_client?
-                    .runtime_api()
-                    .at_latest()
-                    .await
-                    .map_err(|err| eprintln!("Failed to create NH RuntimeAPi: {err:?}"))
-                    .ok()?;
-
-                let poe_merkle_path_request = nh::apis()
-                    .po_e_api()
-                    .get_proof_path(attestation.attestation_id.as_u64(), attestation_element);
-
-                let poe_merkle_path_response = nh_runtime_api
-                    .call(poe_merkle_path_request)
-                    .await
-                    .map_err(|err| eprintln!("Failed to get MerklePath from NH Mainchain: {err:?}"))
-                    .ok()?
-                    .unwrap();
-                tracing::info!("Poe merkle path response: {:?}", poe_merkle_path_response);
-
-                let proofs = NewHorizenProof {
-                    attestation_id: attestation.attestation_id.as_u64(),
-                    merkle_path: poe_merkle_path_response
-                        .proof
-                        .iter()
-                        .map(|el| h256_to_u256(*el))
-                        .collect(),
-                    leaf_count: poe_merkle_path_response.number_of_leaves,
-                    index: poe_merkle_path_response.leaf_index,
-                };
-                tracing::info!("Horizen Proof {:?}", proofs);
-
-                let previous_proven_batch_metadata = storage
-                    .blocks_dal()
-                    .get_l1_batch_metadata(previous_proven_batch_number)
-                    .await
-                    .unwrap()
-                    .unwrap_or_else(|| {
-                        panic!(
-                            "L1 batch #{} with submitted proof is not complete in the DB",
-                            previous_proven_batch_number
-                        );
-                    });
-                let metadata_for_batch_being_proved = storage
-                    .blocks_dal()
-                    .get_l1_batch_metadata(previous_proven_batch_number + 1)
-                    .await
-                    .unwrap()
-                    .unwrap_or_else(|| {
-                        panic!(
-                            "L1 batch #{} with generated proof is not complete in the DB",
-                            previous_proven_batch_number + 1
-                        );
-                    });
-                Some(ProveBatches {
-                    prev_l1_batch: previous_proven_batch_metadata,
-                    l1_batches: vec![metadata_for_batch_being_proved],
-                    proofs: proofs.into(),
-                    should_verify: true,
-                })
+        let proofs = match proof_loading_mode {
+            ProofLoadingMode::OldProofFromDb => {
+                unreachable!("OldProofFromDb is not supported anymore")
             }
-            None => {
-                return None;
+            ProofLoadingMode::FriProofFromGcs => {
+                load_wrapped_fri_proofs_for_range(batch_to_prove, batch_to_prove, blob_store).await
             }
+        };
+        if proofs.is_empty() {
+            // The proof for the next L1 batch is not generated yet
+            return None;
         }
+
+        assert_eq!(proofs.len(), 1);
+
+        let previous_proven_batch_metadata = storage
+            .blocks_dal()
+            .get_l1_batch_metadata(previous_proven_batch_number)
+            .await
+            .unwrap()
+            .unwrap_or_else(|| {
+                panic!(
+                    "L1 batch #{} with submitted proof is not complete in the DB",
+                    previous_proven_batch_number
+                );
+            });
+        let metadata_for_batch_being_proved = storage
+            .blocks_dal()
+            .get_l1_batch_metadata(previous_proven_batch_number + 1)
+            .await
+            .unwrap()
+            .unwrap_or_else(|| {
+                panic!(
+                    "L1 batch #{} with generated proof is not complete in the DB",
+                    previous_proven_batch_number + 1
+                );
+            });
+
+        Some(ProveBatches {
+            prev_l1_batch: previous_proven_batch_metadata,
+            l1_batches: vec![metadata_for_batch_being_proved],
+            proofs,
+            should_verify: true,
+        })
     }
 
     async fn prepare_dummy_proof_operation(
@@ -453,7 +383,6 @@ impl Aggregator {
         ready_for_proof_l1_batches: Vec<L1BatchWithMetadata>,
         last_sealed_l1_batch: L1BatchNumber,
     ) -> Option<ProveBatches> {
-        println!("Prepare dummy proof operation...");
         let batches = extract_ready_subrange(
             storage,
             &mut self.proof_criteria,
@@ -472,7 +401,7 @@ impl Aggregator {
         Some(ProveBatches {
             prev_l1_batch: prev_batch,
             l1_batches: batches,
-            proofs: Default::default(),
+            proofs: vec![],
             should_verify: false,
         })
     }
@@ -486,14 +415,12 @@ impl Aggregator {
     ) -> Option<ProveBatches> {
         match self.config.proof_sending_mode {
             ProofSendingMode::OnlyRealProofs => {
-                println!("Get_proof_operation => OnlyRealProofs");
                 Self::load_real_proof_operation(
                     storage,
                     l1_verifier_config,
                     &self.config.proof_loading_mode,
                     &*self.blob_store,
                     self.operate_4844_mode,
-                    self.nh_client.clone(),
                 )
                 .await
             }
@@ -517,7 +444,6 @@ impl Aggregator {
                     &self.config.proof_loading_mode,
                     &*self.blob_store,
                     self.operate_4844_mode,
-                    self.nh_client.clone(),
                 )
                 .await
                 {
@@ -569,7 +495,7 @@ async fn extract_ready_subrange(
     )
 }
 
-pub async fn _load_wrapped_fri_proofs_for_range(
+pub async fn load_wrapped_fri_proofs_for_range(
     from: L1BatchNumber,
     to: L1BatchNumber,
     blob_store: &dyn ObjectStore,
diff --git a/core/lib/zksync_core/src/eth_sender/tests.rs b/core/lib/zksync_core/src/eth_sender/tests.rs
index d650ebc4..e49f7dcc 100644
--- a/core/lib/zksync_core/src/eth_sender/tests.rs
+++ b/core/lib/zksync_core/src/eth_sender/tests.rs
@@ -147,7 +147,6 @@ impl EthSenderTester {
                 aggregator_operate_4844_mode,
                 PubdataDA::Calldata,
                 l1_batch_commit_data_generator.clone(),
-                None,
             ),
             gateway.clone(),
             // zkSync contract address
@@ -1039,7 +1038,7 @@ async fn prove_l1_batch(
     let operation = AggregatedOperation::PublishProofOnchain(ProveBatches {
         prev_l1_batch: l1_batch_with_metadata(last_committed_l1_batch),
         l1_batches: vec![l1_batch_with_metadata(l1_batch)],
-        proofs: vec![].into(),
+        proofs: vec![],
         should_verify: false,
     });
     send_operation(tester, operation, confirm).await
diff --git a/core/lib/zksync_core/src/eth_watch/client.rs b/core/lib/zksync_core/src/eth_watch/client.rs
index 2ba24e7c..785d20bb 100644
--- a/core/lib/zksync_core/src/eth_watch/client.rs
+++ b/core/lib/zksync_core/src/eth_watch/client.rs
@@ -61,7 +61,6 @@ pub struct EthHttpQueryClient {
     governance_address: Option<Address>,
     verifier_contract_abi: Contract,
     confirmations_for_eth_event: Option<u64>,
-    nh_verifier_contract_address: Address,
 }
 
 impl EthHttpQueryClient {
@@ -70,7 +69,6 @@ impl EthHttpQueryClient {
         zksync_contract_addr: Address,
         governance_address: Option<Address>,
         confirmations_for_eth_event: Option<u64>,
-        nh_verifier_contract_address: Address,
     ) -> Self {
         tracing::debug!(
             "New eth client, zkSync addr: {:x}, governance addr: {:?}",
@@ -84,7 +82,6 @@ impl EthHttpQueryClient {
             governance_address,
             verifier_contract_abi: verifier_contract(),
             confirmations_for_eth_event,
-            nh_verifier_contract_address,
         }
     }
 
@@ -96,15 +93,11 @@ impl EthHttpQueryClient {
     ) -> Result<Vec<Log>, Error> {
         let filter = FilterBuilder::default()
             .address(
-                [
-                    Some(self.zksync_contract_addr),
-                    self.governance_address,
-                    Some(self.nh_verifier_contract_address),
-                ]
-                .iter()
-                .flatten()
-                .copied()
-                .collect(),
+                [Some(self.zksync_contract_addr), self.governance_address]
+                    .iter()
+                    .flatten()
+                    .copied()
+                    .collect(),
             )
             .from_block(from)
             .to_block(to)
diff --git a/core/lib/zksync_core/src/eth_watch/event_processors/mod.rs b/core/lib/zksync_core/src/eth_watch/event_processors/mod.rs
index ebf5163e..1d945331 100644
--- a/core/lib/zksync_core/src/eth_watch/event_processors/mod.rs
+++ b/core/lib/zksync_core/src/eth_watch/event_processors/mod.rs
@@ -6,7 +6,6 @@ use zksync_types::{web3::types::Log, H256};
 use crate::eth_watch::client::{Error, EthClient};
 
 pub mod governance_upgrades;
-pub mod nh;
 pub mod priority_ops;
 pub mod upgrades;
 
diff --git a/core/lib/zksync_core/src/eth_watch/event_processors/nh.rs b/core/lib/zksync_core/src/eth_watch/event_processors/nh.rs
deleted file mode 100644
index 5917bf42..00000000
--- a/core/lib/zksync_core/src/eth_watch/event_processors/nh.rs
+++ /dev/null
@@ -1,75 +0,0 @@
-use std::convert::TryFrom;
-
-use zksync_contracts::nh_contract;
-use zksync_dal::{Connection, Core, CoreDal};
-use zksync_types::{l1::NHAttestation, Log, H256};
-
-use crate::eth_watch::{
-    client::{Error, EthClient},
-    event_processors::EventProcessor,
-};
-
-pub(crate) const ATTESTATION_POSTED_SIGNATURE: H256 = H256([
-    230, 78, 18, 226, 223, 214, 132, 174, 145, 191, 26, 108, 82, 251, 242, 175, 105, 134, 219, 89,
-    39, 210, 63, 91, 100, 62, 13, 80, 247, 222, 72, 120,
-]);
-
-/// Responsible for saving new priority L1 transactions to the database.
-#[derive(Debug)]
-pub struct NHEventProcessor {
-    nh_attestation_signature: H256,
-}
-
-impl NHEventProcessor {
-    pub fn new() -> Self {
-        Self {
-            nh_attestation_signature: nh_contract()
-                .event("AttestationPosted")
-                .expect("AttestationPosted event is missing in abi")
-                .signature(),
-        }
-    }
-}
-
-#[async_trait::async_trait]
-impl EventProcessor for NHEventProcessor {
-    async fn process_events(
-        &mut self,
-        storage: &mut Connection<'_, Core>,
-        _client: &dyn EthClient,
-        events: Vec<Log>,
-    ) -> Result<(), Error> {
-        let mut nh_ops = Vec::new();
-        // Assuming we only have one kind of event
-        for event in events
-            .into_iter()
-            .filter(|event| event.topics[0] == ATTESTATION_POSTED_SIGNATURE)
-        {
-            let op = NHAttestation::try_from(event)
-                .map_err(|err| Error::LogParse(format!("{}", err)))?;
-            tracing::info!("Found new NH attestation: {op}");
-            nh_ops.push(op);
-        }
-
-        if nh_ops.is_empty() {
-            return Ok(());
-        }
-
-        let new_attestations: Vec<_> = nh_ops.into_iter().collect();
-        if new_attestations.is_empty() {
-            return Ok(());
-        }
-
-        for new_attestation in new_attestations {
-            storage
-                .nh_dal()
-                .insert_nh_attestation(&new_attestation)
-                .await;
-        }
-        Ok(())
-    }
-
-    fn relevant_topic(&self) -> H256 {
-        self.nh_attestation_signature
-    }
-}
diff --git a/core/lib/zksync_core/src/eth_watch/mod.rs b/core/lib/zksync_core/src/eth_watch/mod.rs
index 7bb2c0a2..c0328953 100644
--- a/core/lib/zksync_core/src/eth_watch/mod.rs
+++ b/core/lib/zksync_core/src/eth_watch/mod.rs
@@ -24,7 +24,6 @@ use self::{
     },
     metrics::{PollStage, METRICS},
 };
-use crate::eth_watch::event_processors::nh::NHEventProcessor;
 
 pub mod client;
 mod event_processors;
@@ -82,9 +81,6 @@ impl EthWatch {
             event_processors.push(Box::new(governance_upgrades_processor))
         }
 
-        let nh_processor = NHEventProcessor::new();
-        event_processors.push(Box::new(nh_processor));
-
         let topics = event_processors
             .iter()
             .map(|p| p.relevant_topic())
@@ -200,14 +196,12 @@ pub async fn start_eth_watch(
     diamond_proxy_addr: Address,
     governance: (Contract, Address),
     stop_receiver: watch::Receiver<bool>,
-    nh_verifier_contract_address: Address,
 ) -> anyhow::Result<JoinHandle<anyhow::Result<()>>> {
     let eth_client = EthHttpQueryClient::new(
         eth_gateway,
         diamond_proxy_addr,
         Some(governance.1),
         config.confirmations_for_eth_event,
-        nh_verifier_contract_address,
     );
 
     let eth_watch = EthWatch::new(
diff --git a/core/lib/zksync_core/src/lib.rs b/core/lib/zksync_core/src/lib.rs
index dc78cbb5..3bc6f13c 100644
--- a/core/lib/zksync_core/src/lib.rs
+++ b/core/lib/zksync_core/src/lib.rs
@@ -12,8 +12,6 @@ use api_server::tx_sender::master_pool_sink::MasterPoolSink;
 use fee_model::{ApiFeeInputProvider, BatchFeeModelInputProvider, MainNodeFeeInputProvider};
 use prometheus_exporter::PrometheusExporterConfig;
 use prover_dal::Prover;
-use subxt::{OnlineClient, PolkadotConfig};
-use subxt_signer::{sr25519::Keypair, SecretUri};
 use temp_config_store::{Secrets, TempConfigStore};
 use tokio::{
     sync::{oneshot, watch},
@@ -86,7 +84,6 @@ use crate::{
     },
     metadata_calculator::{MetadataCalculator, MetadataCalculatorConfig},
     metrics::{InitStage, APP_METRICS},
-    proof_data_handler::NhClient,
     state_keeper::{
         create_state_keeper, MempoolFetcher, MempoolGuard, OutputHandler, SequencerSealer,
         StateKeeperPersistence,
@@ -356,12 +353,6 @@ pub async fn initialize_components(
         tokio::spawn(circuit_breaker_checker.run(stop_receiver.clone())),
     ];
 
-    let nh_config = configs
-        .new_horizen_config
-        .clone()
-        .context("new_horizen_config")?;
-    let nh_url = nh_config.url;
-    let nh_client = OnlineClient::<PolkadotConfig>::from_url(nh_url.clone()).await?;
     if components.contains(&Component::WsApi)
         || components.contains(&Component::HttpApi)
         || components.contains(&Component::ContractVerificationApi)
@@ -578,7 +569,6 @@ pub async fn initialize_components(
     }
 
     let main_zksync_contract_address = contracts_config.diamond_proxy_addr;
-    let nh_verifier_contract_address = contracts_config.nh_verifier_addr;
 
     if components.contains(&Component::EthWatcher) {
         let started_at = Instant::now();
@@ -600,7 +590,6 @@ pub async fn initialize_components(
                 main_zksync_contract_address,
                 governance,
                 stop_receiver.clone(),
-                nh_verifier_contract_address,
             )
             .await
             .context("start_eth_watch()")?,
@@ -659,7 +648,6 @@ pub async fn initialize_components(
                 eth_client_blobs_addr.is_some(),
                 eth_sender.sender.pubdata_sending_mode.into(),
                 l1_batch_commit_data_generator.clone(),
-                Some(nh_client.clone()),
             ),
             Arc::new(eth_client),
             contracts_config.validator_timelock_addr,
@@ -751,9 +739,6 @@ pub async fn initialize_components(
     }
 
     if components.contains(&Component::ProofDataHandler) {
-        let nh_kp =
-            Keypair::from_uri(&SecretUri::from_str(nh_config.seed_phrase.as_str()).unwrap())
-                .unwrap();
         task_futures.push(tokio::spawn(proof_data_handler::run_server(
             configs
                 .proof_data_handler_config
@@ -761,7 +746,6 @@ pub async fn initialize_components(
                 .context("proof_data_handler_config")?,
             store_factory.create_store().await,
             connection_pool.clone(),
-            Some(NhClient::new(nh_client.clone(), nh_kp)),
             stop_receiver.clone(),
         )));
     }
diff --git a/core/lib/zksync_core/src/proof_data_handler/mod.rs b/core/lib/zksync_core/src/proof_data_handler/mod.rs
index 15e70316..930c21f4 100644
--- a/core/lib/zksync_core/src/proof_data_handler/mod.rs
+++ b/core/lib/zksync_core/src/proof_data_handler/mod.rs
@@ -2,27 +2,25 @@ use std::{net::SocketAddr, sync::Arc};
 
 use anyhow::Context as _;
 use axum::{extract::Path, routing::post, Json, Router};
-pub use request_processor::NhClient;
-use request_processor::RequestProcessor;
 use tokio::sync::watch;
 use zksync_config::configs::ProofDataHandlerConfig;
 use zksync_dal::{ConnectionPool, Core};
 use zksync_object_store::ObjectStore;
 use zksync_prover_interface::api::{ProofGenerationDataRequest, SubmitProofRequest};
 
+use crate::proof_data_handler::request_processor::RequestProcessor;
+
 mod request_processor;
 
 pub async fn run_server(
     config: ProofDataHandlerConfig,
     blob_store: Arc<dyn ObjectStore>,
     pool: ConnectionPool<Core>,
-    nh_client: Option<NhClient>,
     mut stop_receiver: watch::Receiver<bool>,
 ) -> anyhow::Result<()> {
     let bind_address = SocketAddr::from(([0, 0, 0, 0], config.http_port));
     tracing::debug!("Starting proof data handler server on {bind_address}");
-
-    let get_proof_gen_processor = RequestProcessor::new(blob_store, pool, config, nh_client);
+    let get_proof_gen_processor = RequestProcessor::new(blob_store, pool, config);
     let submit_proof_processor = get_proof_gen_processor.clone();
     let app = Router::new()
         .route(
diff --git a/core/lib/zksync_core/src/proof_data_handler/request_processor.rs b/core/lib/zksync_core/src/proof_data_handler/request_processor.rs
index c9da9590..7bc5a7df 100644
--- a/core/lib/zksync_core/src/proof_data_handler/request_processor.rs
+++ b/core/lib/zksync_core/src/proof_data_handler/request_processor.rs
@@ -6,63 +6,24 @@ use axum::{
     response::{IntoResponse, Response},
     Json,
 };
-use crypto_codegen::serialize_proof;
-use hex::encode;
-use subxt::{OnlineClient, PolkadotConfig};
-use subxt_signer::sr25519::Keypair;
 use zksync_config::configs::ProofDataHandlerConfig;
 use zksync_dal::{ConnectionPool, Core, CoreDal, SqlxError};
 use zksync_object_store::{ObjectStore, ObjectStoreError};
-use zksync_prover_interface::{
-    api::{
-        ProofGenerationData, ProofGenerationDataRequest, ProofGenerationDataResponse,
-        SubmitProofRequest, SubmitProofResponse,
-    },
-    outputs::L1BatchProofForL1,
+use zksync_prover_interface::api::{
+    ProofGenerationData, ProofGenerationDataRequest, ProofGenerationDataResponse,
+    SubmitProofRequest, SubmitProofResponse,
 };
 use zksync_types::{
     basic_fri_types::Eip4844Blobs, commitment::serialize_commitments, web3::signing::keccak256,
     L1BatchNumber, H256,
 };
-use zksync_utils::{u256_to_bytes_be, u256_to_h256};
-
-#[derive(Clone)]
-pub struct NhClient {
-    client: OnlineClient<PolkadotConfig>,
-    kp: Keypair,
-}
-
-impl NhClient {
-    pub fn new(client: OnlineClient<PolkadotConfig>, kp: Keypair) -> Self {
-        Self { client, kp }
-    }
-
-    async fn submit_proof(&self, raw_proof: [u8; 1440]) -> Result<(u64, H256), subxt::Error> {
-        let submit_proof_tx = nh::tx().settlement_zksync_pallet().submit_proof(raw_proof);
-
-        // Submit the submitProof extrinsic, and wait for it to be successful
-        // and in a finalized block. We get back the extrinsic events if all is well.
-        let events = self
-            .client
-            .tx()
-            .sign_and_submit_then_watch_default(&submit_proof_tx, &self.kp)
-            .await?
-            .wait_for_finalized_success()
-            .await?;
-
-        // Find a Transfer event and print it.
-        let transfer_event = events.find_first::<nh::poe::events::NewElement>()?.unwrap();
-        println!("New Element success: {transfer_event:?}");
-        Ok((transfer_event.attestation_id, transfer_event.value))
-    }
-}
+use zksync_utils::u256_to_h256;
 
 #[derive(Clone)]
 pub(crate) struct RequestProcessor {
     blob_store: Arc<dyn ObjectStore>,
     pool: ConnectionPool<Core>,
     config: ProofDataHandlerConfig,
-    nh_client: Option<NhClient>,
 }
 
 pub(crate) enum RequestProcessorError {
@@ -70,9 +31,6 @@ pub(crate) enum RequestProcessorError {
     Sqlx(SqlxError),
 }
 
-#[subxt::subxt(runtime_metadata_path = "../../../etc/nh/metadata.scale")]
-pub mod nh {}
-
 impl IntoResponse for RequestProcessorError {
     fn into_response(self) -> Response {
         let (status_code, message) = match self {
@@ -105,13 +63,11 @@ impl RequestProcessor {
         blob_store: Arc<dyn ObjectStore>,
         pool: ConnectionPool<Core>,
         config: ProofDataHandlerConfig,
-        nh_client: Option<NhClient>,
     ) -> Self {
         Self {
             blob_store,
             pool,
             config,
-            nh_client,
         }
     }
 
@@ -200,12 +156,10 @@ impl RequestProcessor {
         Path(l1_batch_number): Path<u32>,
         Json(payload): Json<SubmitProofRequest>,
     ) -> Result<Json<SubmitProofResponse>, RequestProcessorError> {
-        println!("Submit proof!");
         tracing::info!("Received proof for block number: {:?}", l1_batch_number);
         let l1_batch_number = L1BatchNumber(l1_batch_number);
         match payload {
             SubmitProofRequest::Proof(proof) => {
-                let (_input, _p) = serialize_proof(&proof.scheduler_proof);
                 let blob_url = self
                     .blob_store
                     .put(l1_batch_number, &*proof)
@@ -289,42 +243,12 @@ impl RequestProcessor {
                     .map_err(RequestProcessorError::Sqlx)?;
             }
             SubmitProofRequest::SkippedProofGeneration => {
-                println!(
-                    "SubmitProof --> SkippedProofGeneration {}",
-                    l1_batch_number.0
-                );
-
-                // Build a submitProof extrinsic.
-
-                //Mock proof
-                let data = include_bytes!("../../../../../etc/nh/l1_batch_proof_1.bin");
-                let parsed: L1BatchProofForL1 = bincode::deserialize(data.as_slice()).unwrap();
-
-                let (input, p) = serialize_proof(&parsed.scheduler_proof);
-                let proof_bytes = p.iter().flat_map(u256_to_bytes_be).collect::<Vec<u8>>();
-                let pi_bytes = input.iter().flat_map(u256_to_bytes_be).collect::<Vec<u8>>();
-
-                println!("PROOF {:?}", encode(proof_bytes.clone()));
-                println!("PI {:?}", encode(pi_bytes.clone()));
-
-                let raw_proof: [u8; 1440] = [proof_bytes, pi_bytes].concat().as_slice()[0..1440]
-                    .try_into()
-                    .unwrap();
-
-                let (attestation_id, value) = self
-                    .nh_client
-                    .as_ref()
-                    .unwrap()
-                    .submit_proof(raw_proof)
-                    .await
-                    .unwrap();
-
                 self.pool
                     .connection()
                     .await
                     .unwrap()
                     .proof_generation_dal()
-                    .mark_proof_generation_job_as_skipped(l1_batch_number, attestation_id, value)
+                    .mark_proof_generation_job_as_skipped(l1_batch_number)
                     .await
                     .map_err(RequestProcessorError::Sqlx)?;
             }
diff --git a/core/lib/zksync_core/src/proto/mod.proto b/core/lib/zksync_core/src/proto/mod.proto
index 9c63856d..a5ebe829 100644
--- a/core/lib/zksync_core/src/proto/mod.proto
+++ b/core/lib/zksync_core/src/proto/mod.proto
@@ -25,7 +25,6 @@ import "zksync/config/snapshots_creator.proto";
 import "zksync/config/utils.proto";
 import "zksync/config/witness_generator.proto";
 import "zksync/core/consensus.proto";
-import "zksync/config/new_horizen.proto";
 
 message TempConfigStore {
   optional config.database.Postgres postgres = 1;
@@ -54,7 +53,6 @@ message TempConfigStore {
   optional config.eth_sender.GasAdjuster gas_adjuster = 24;
   optional config.object_store.ObjectStore object_store = 25;
   optional consensus.Config consensus = 26;
-  optional config.new_horizen.NewHorizen new_horizen = 27;
 }
 
 message Secrets {
diff --git a/core/lib/zksync_core/src/temp_config_store/mod.rs b/core/lib/zksync_core/src/temp_config_store/mod.rs
index a362e406..2b528516 100644
--- a/core/lib/zksync_core/src/temp_config_store/mod.rs
+++ b/core/lib/zksync_core/src/temp_config_store/mod.rs
@@ -8,8 +8,8 @@ use zksync_config::{
         },
         fri_prover_group::FriProverGroupConfig,
         house_keeper::HouseKeeperConfig,
-        FriProofCompressorConfig, FriProverConfig, FriWitnessGeneratorConfig, NewHorizenConfig,
-        PrometheusConfig, ProofDataHandlerConfig, WitnessGeneratorConfig,
+        FriProofCompressorConfig, FriProverConfig, FriWitnessGeneratorConfig, PrometheusConfig,
+        ProofDataHandlerConfig, WitnessGeneratorConfig,
     },
     ApiConfig, ContractsConfig, DBConfig, ETHClientConfig, ETHSenderConfig, ETHWatchConfig,
     GasAdjusterConfig, ObjectStoreConfig, PostgresConfig,
@@ -72,7 +72,6 @@ pub struct TempConfigStore {
     pub gas_adjuster_config: Option<GasAdjusterConfig>,
     pub object_store_config: Option<ObjectStoreConfig>,
     pub consensus_config: Option<consensus::Config>,
-    pub new_horizen_config: Option<NewHorizenConfig>,
 }
 
 impl ProtoFmt for TempConfigStore {
@@ -113,7 +112,6 @@ impl ProtoFmt for TempConfigStore {
             gas_adjuster_config: read_optional_repr(&r.gas_adjuster).context("gas_adjuster")?,
             object_store_config: read_optional_repr(&r.object_store).context("object_store")?,
             consensus_config: read_optional(&r.consensus).context("consensus")?,
-            new_horizen_config: read_optional_repr(&r.new_horizen).context("new_horizen")?,
         })
     }
 
@@ -157,7 +155,6 @@ impl ProtoFmt for TempConfigStore {
             gas_adjuster: self.gas_adjuster_config.as_ref().map(ProtoRepr::build),
             object_store: self.object_store_config.as_ref().map(ProtoRepr::build),
             consensus: self.consensus_config.as_ref().map(ProtoFmt::build),
-            new_horizen: self.new_horizen_config.as_ref().map(ProtoRepr::build),
         }
     }
 }
diff --git a/core/lib/zksync_core/src/temp_config_store/tests.rs b/core/lib/zksync_core/src/temp_config_store/tests.rs
index e31c92e6..387d7139 100644
--- a/core/lib/zksync_core/src/temp_config_store/tests.rs
+++ b/core/lib/zksync_core/src/temp_config_store/tests.rs
@@ -33,7 +33,6 @@ impl Distribution<TempConfigStore> for EncodeDist {
             gas_adjuster_config: self.sample(rng),
             object_store_config: self.sample(rng),
             consensus_config: self.sample(rng),
-            new_horizen_config: None,
         }
     }
 }
diff --git a/core/node/node_framework/src/implementations/layers/eth_sender.rs b/core/node/node_framework/src/implementations/layers/eth_sender.rs
index 7242e53f..10695a6b 100644
--- a/core/node/node_framework/src/implementations/layers/eth_sender.rs
+++ b/core/node/node_framework/src/implementations/layers/eth_sender.rs
@@ -97,7 +97,6 @@ impl WiringLayer for EthSenderLayer {
             eth_client_blobs_addr.is_some(),
             self.eth_sender_config.sender.pubdata_sending_mode.into(),
             l1_batch_commit_data_generator.clone(),
-            None,
         );
 
         let config = self.eth_sender_config.sender;
diff --git a/core/node/node_framework/src/implementations/layers/eth_watch.rs b/core/node/node_framework/src/implementations/layers/eth_watch.rs
index 43416494..43fad775 100644
--- a/core/node/node_framework/src/implementations/layers/eth_watch.rs
+++ b/core/node/node_framework/src/implementations/layers/eth_watch.rs
@@ -45,7 +45,6 @@ impl WiringLayer for EthWatchLayer {
             self.contracts_config.diamond_proxy_addr,
             Some(self.contracts_config.governance_addr),
             self.eth_watch_config.confirmations_for_eth_event,
-            self.contracts_config.nh_verifier_addr,
         );
         context.add_task(Box::new(EthWatchTask {
             main_pool,
diff --git a/core/node/node_framework/src/implementations/layers/proof_data_handler.rs b/core/node/node_framework/src/implementations/layers/proof_data_handler.rs
index a4923e36..b3ec969b 100644
--- a/core/node/node_framework/src/implementations/layers/proof_data_handler.rs
+++ b/core/node/node_framework/src/implementations/layers/proof_data_handler.rs
@@ -72,7 +72,6 @@ impl Task for ProofDataHandlerTask {
             self.proof_data_handler_config,
             self.blob_store,
             self.main_pool,
-            None,
             stop_receiver.0,
         )
         .await
diff --git a/etc/env/base/new_horizen.toml b/etc/env/base/new_horizen.toml
deleted file mode 100644
index cf6e982a..00000000
--- a/etc/env/base/new_horizen.toml
+++ /dev/null
@@ -1,3 +0,0 @@
-[new_horizen]
-url="wss://nh-rpc.horizenlabs.io"
-seed_phrase="pledge feel online risk dutch lumber announce ripple segment render mutual interest"
\ No newline at end of file
diff --git a/etc/nh/l1_batch_proof_1.bin b/etc/nh/l1_batch_proof_1.bin
deleted file mode 100644
index f0344488..00000000
Binary files a/etc/nh/l1_batch_proof_1.bin and /dev/null differ
diff --git a/etc/nh/metadata.scale b/etc/nh/metadata.scale
deleted file mode 100644
index 5ce7c9f0..00000000
Binary files a/etc/nh/metadata.scale and /dev/null differ
diff --git a/infrastructure/zk/src/contract.ts b/infrastructure/zk/src/contract.ts
index ce2ccc36..10777b0b 100644
--- a/infrastructure/zk/src/contract.ts
+++ b/infrastructure/zk/src/contract.ts
@@ -125,7 +125,6 @@ export async function deployL1(args: any[]) {
         'CONTRACTS_EXECUTOR_FACET_ADDR',
         'CONTRACTS_GETTERS_FACET_ADDR',
         'CONTRACTS_VERIFIER_ADDR',
-        'CONTRACTS_NH_VERIFIER_ADDR',
         'CONTRACTS_DIAMOND_INIT_ADDR',
         'CONTRACTS_DIAMOND_PROXY_ADDR',
         'CONTRACTS_VALIDATOR_TIMELOCK_ADDR',
diff --git a/prover/Cargo.lock b/prover/Cargo.lock
index b14df5e7..dce618bc 100644
--- a/prover/Cargo.lock
+++ b/prover/Cargo.lock
@@ -7504,7 +7504,6 @@ dependencies = [
  "tokio",
  "tracing",
  "vise",
- "zksync_basic_types",
  "zksync_consensus_roles",
  "zksync_consensus_storage",
  "zksync_contracts",
diff --git a/prover/rust-toolchain b/prover/rust-toolchain
index fe109472..9a87fb21 100644
--- a/prover/rust-toolchain
+++ b/prover/rust-toolchain
@@ -1 +1 @@
-nightly-2023-09-21
+nightly-2023-08-21
diff --git a/rust-toolchain b/rust-toolchain
index fe109472..9a87fb21 100644
--- a/rust-toolchain
+++ b/rust-toolchain
@@ -1 +1 @@
-nightly-2023-09-21
+nightly-2023-08-21
